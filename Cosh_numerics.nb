(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    959255,      19531]
NotebookOptionsPosition[    947898,      19183]
NotebookOutlinePosition[    948314,      19199]
CellTagsIndexPosition[    948271,      19196]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["License & copyright", "Subsubsection",
 CellChangeTimes->{{3.6893322361170053`*^9, 3.689332244876678*^9}}],

Cell["\<\
MIT License

Copyright (c) 2016 Johanna Erdmenger, Daniel Fernandez, Priesley Goulart and \
Piotr Witkowski

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the \
\[OpenCurlyDoubleQuote]Software\[CloseCurlyDoubleQuote]), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in \
all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED \[OpenCurlyDoubleQuote]AS \
IS\[CloseCurlyDoubleQuote], WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.\
\>", "Text",
 CellChangeTimes->{3.6893322216652613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerics for section 5.2", "Section",
 CellChangeTimes->{{3.634542551946908*^9, 3.634542564346184*^9}, {
  3.683370117831847*^9, 3.683370143267488*^9}, {3.6893241051200266`*^9, 
  3.6893241200323095`*^9}}],

Cell[CellGroupData[{

Cell["GR Definitions", "Subsection",
 CellChangeTimes->{
  3.605531823027461*^9, {3.6131386696545887`*^9, 3.613138671222184*^9}, {
   3.683361894434898*^9, 3.683361896137993*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"METRIC", " ", "DEFINITION"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"metric", "[", 
      RowBox[{"lineelement_", ",", "independentvars_List"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lenindependent", ",", "differentials", ",", "diffmatrix", ",", 
         "metricform", ",", "varmetric", ",", "gh", ",", "sum", ",", 
         "equation", ",", "rule", ",", "varhelp", ",", "zeros", ",", 
         "zerorule"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"-", "determine"}]}], " ", "the", " ", "number", " ", "of",
           " ", "independent", " ", 
          RowBox[{"variables", "--"}]}], "-"}], "*)"}], 
       RowBox[{
        RowBox[{"lenindependent", "=", 
         RowBox[{"Length", "[", "independentvars", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", "create"}]}], " ", "the", " ", "differentials", " ", 
           "corresponding", " ", "to", " ", "dx"}], ",", 
          RowBox[{
           RowBox[{"dt", "..."}], ".", 
           RowBox[{"--", "-"}]}]}], "*)"}], 
        RowBox[{"differentials", "=", 
         RowBox[{"Map", "[", 
          RowBox[{"Dt", ",", "independentvars"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", "a"}]}], " ", "matrix", " ", "of", " ", 
           "differential", " ", 
           RowBox[{"products", "--"}]}], "-"}], "*)"}], 
        RowBox[{"diffmatrix", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "differentials", ",", "differentials"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", "the"}]}], " ", "general", " ", "metric", " ", 
           RowBox[{"form", "--"}]}], "-"}], "*)"}], 
        RowBox[{"metricform", "=", 
         RowBox[{"Array", "[", 
          RowBox[{"gh", ",", 
           RowBox[{"{", 
            RowBox[{"lenindependent", ",", "lenindependent"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"varmetric", "=", 
         RowBox[{"Variables", "[", "metricform", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", "built"}]}], " ", "a", " ", "system", " ", "of", " ",
            "equations", " ", "to", " ", "determine", " ", "the", " ", 
           "elements", " ", "of", " ", "the", " ", 
           RowBox[{"metric", "--"}]}], "-"}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "metricform", "]"}], "\[Equal]", 
           RowBox[{"Length", "[", "diffmatrix", "]"}]}], ",", 
          RowBox[{
           RowBox[{"sum", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"sum", "=", 
                RowBox[{"sum", "+", 
                 RowBox[{
                  RowBox[{"metricform", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", 
                  RowBox[{"diffmatrix", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "lenindependent"}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "lenindependent"}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"sum", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"-", "construct"}]}], " ", "the", " ", "metric", " ", 
           RowBox[{"tensor", "--"}]}], "-"}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sum", "===", "0"}], ",", 
          RowBox[{"Return", "[", "sum", "]"}], ",", 
          RowBox[{
           RowBox[{"sum", "=", 
            RowBox[{"sum", "-", "lineelement"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"equation", "=", 
            RowBox[{
             RowBox[{"CoefficientList", "[", 
              RowBox[{"sum", ",", "differentials"}], "]"}], "\[Equal]", 
             "0"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"rule", "=", 
            RowBox[{"Solve", "[", 
             RowBox[{"equation", ",", "varmetric"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"metricform", "=", 
            RowBox[{"metricform", "/.", "rule"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"varmetric", "=", 
            RowBox[{"Variables", "[", "metricform", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              RowBox[{"--", 
               RowBox[{"-", "replace"}]}], " ", "the", " ", "nonzero", " ", 
              RowBox[{"elements", "--"}]}], "-"}], "*)"}], 
           RowBox[{"varhelp", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Not", "[", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"varmetric", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "gh"}], "]"}], "]"}], 
               ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"varhelp", ",", 
                 RowBox[{"varmetric", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "varmetric", "]"}]}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"zeros", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"Length", "[", "varhelp", "]"}], "}"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"SubstRule", "[", 
             RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
            RowBox[{"x", "\[Rule]", "y"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"zerorule", "=", 
            RowBox[{"Thread", "[", 
             RowBox[{"SubstRule", "[", 
              RowBox[{"varhelp", ",", "zeros"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"metricform", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"metricform", "/.", "zerorule"}], ",", "1"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              RowBox[{"--", 
               RowBox[{"-", "make"}]}], " ", "the", " ", "metricform", " ", 
              RowBox[{"symmetric", "--"}]}], "-"}], "*)"}], 
           RowBox[{"metricform", "=", 
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"metricform", "+", 
                RowBox[{"Transpose", "[", "metricform", "]"}]}], ")"}], "/", 
              "2"}], "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "metricform"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"Solve", "::", "svars"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.416400036053795*^9, 3.416400049252561*^9}, {
   3.432880289520801*^9, 3.432880291391076*^9}, 3.504776850957514*^9, {
   3.612603208558186*^9, 3.612603208869649*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "CHRISTOFFELSYMBOLS", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Christoffel", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_", ",", "g_", ",", "ginv_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "n", "}"}], ",", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ginv", "[", 
           RowBox[{"[", 
            RowBox[{"m", ",", "n"}], "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"[", 
                RowBox[{"a", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{"IndepVar", "[", 
               RowBox[{"[", "b", "]"}], "]"}]}], "]"}], "+", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"[", 
                RowBox[{"b", ",", "n"}], "]"}], "]"}], ",", 
              RowBox[{"IndepVar", "[", 
               RowBox[{"[", "a", "]"}], "]"}]}], "]"}], "-", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"[", 
                RowBox[{"a", ",", "b"}], "]"}], "]"}], ",", 
              RowBox[{"IndepVar", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], "/", "2"}], 
      "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.416400073243017*^9, 3.416400095186628*^9}, 
   3.612686047004363*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RIEMANNTENSOR", " ", 
    SubscriptBox[
     SuperscriptBox["R", "a"], "bcd"]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Riemann", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_", ",", "g_", ",", "ing_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"Expand", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Christoffel", "[", 
           RowBox[{"a", ",", "b", ",", "d", ",", "g", ",", "ing"}], "]"}], 
          ",", 
          RowBox[{"IndepVar", "[", 
           RowBox[{"[", "c", "]"}], "]"}]}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Christoffel", "[", 
           RowBox[{"a", ",", "b", ",", "c", ",", "g", ",", "ing"}], "]"}], 
          ",", 
          RowBox[{"IndepVar", "[", 
           RowBox[{"[", "d", "]"}], "]"}]}], "]"}], "+", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Christoffel", "[", 
            RowBox[{"e", ",", "b", ",", "d", ",", "g", ",", "ing"}], "]"}], 
           " ", 
           RowBox[{"Christoffel", "[", 
            RowBox[{"a", ",", "e", ",", "c", ",", "g", ",", "ing"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", "1", ",", 
            RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], "-", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Christoffel", "[", 
            RowBox[{"e", ",", "b", ",", "c", ",", "g", ",", "ing"}], "]"}], 
           " ", 
           RowBox[{"Christoffel", "[", 
            RowBox[{"a", ",", "e", ",", "d", ",", "g", ",", "ing"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", "1", ",", 
            RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Riemanntensor", " ", 
     SubscriptBox["R", "rstu"]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rie", "[", 
     RowBox[{"r_", ",", "s_", ",", "t_", ",", "u_", ",", "g_", ",", "ginv_"}],
      "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"[", 
         RowBox[{"r", ",", "j"}], "]"}], "]"}], " ", 
       RowBox[{"Riemann", "[", 
        RowBox[{"j", ",", "s", ",", "t", ",", "u", ",", "g", ",", "ginv"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.41640011456*^9, 3.41640013990805*^9}, {
   3.416400172246157*^9, 3.416400183960863*^9}, {3.432288302385401*^9, 
   3.432288357382969*^9}, 3.440417538860983*^9, 3.5047770985309467`*^9, 
   3.5363034491636257`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "RICCITENSOR", " ", 
    SubscriptBox["Ric", "ab"]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Ricci", "[", 
    RowBox[{"m_", ",", "q_", ",", "g_", ",", "ing_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", 
     RowBox[{"Expand", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Riemann", "[", 
         RowBox[{"a", ",", "m", ",", "a", ",", "q", ",", "g", ",", "ing"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "1", ",", 
          RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.416400232996728*^9, 3.416400255038756*^9}, 
   3.536303437549962*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RICCISCALAR", " ", "R"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RicciScalar", "[", 
     RowBox[{"g_", ",", "ing_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"Expand", "[", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ing", "[", 
           RowBox[{"[", 
            RowBox[{"a", ",", "b"}], "]"}], "]"}], " ", 
          RowBox[{"Ricci", "[", 
           RowBox[{"a", ",", "b", ",", "g", ",", "ing"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1", ",", 
           RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "1", ",", 
           RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}]}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.416400258327305*^9, 3.416400279361565*^9}, {
   3.5047771350760508`*^9, 3.504777136315795*^9}, 3.5363034351978273`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"EINSTEINFIELDTENSOR", " ", "G_ab"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Einstein", "[", 
    RowBox[{"m_", ",", "n_", ",", "g_", ",", "ing_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Ricci", "[", 
     RowBox[{"m", ",", "n", ",", "g", ",", "ing"}], "]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"RicciScalar", "[", 
        RowBox[{"g", ",", "ing"}], "]"}], " ", 
       RowBox[{"g", "[", 
        RowBox[{"[", 
         RowBox[{"m", ",", "n"}], "]"}], "]"}]}], ")"}], "/", 
     "2"}]}]}]}]], "Input",
 CellChangeTimes->{{3.416400386101521*^9, 3.416400401716934*^9}, {
   3.416400451078261*^9, 3.416400481839123*^9}, {3.5047771541628733`*^9, 
   3.504777302550317*^9}, 3.536303432991701*^9, {3.558279620840163*^9, 
   3.558279622126753*^9}, {3.6833619197848988`*^9, 3.6833619220709352`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Equations of Motion", "Subsection",
 CellChangeTimes->{{3.634137273570545*^9, 3.634137275047381*^9}, {
  3.63415012287086*^9, 3.634150129741678*^9}, {3.683293523706904*^9, 
  3.6832935247458982`*^9}, {3.6833619033198347`*^9, 3.683361903751767*^9}, {
  3.689330021730299*^9, 3.6893300275856104`*^9}}],

Cell[CellGroupData[{

Cell["Derivation", "Subsubsection",
 CellChangeTimes->{{3.6893299474106703`*^9, 3.689329947778155*^9}, {
  3.6893300298890314`*^9, 3.6893300314092336`*^9}}],

Cell["\<\
The ansatz for the metric. In principle, we are free to select 3 functions. \
But then we end up with more unknowns than equations.
That\[CloseCurlyQuote]s because of the gauge freedom of redefining the radial \
coordinate r \[Rule] R[r], so what we can do is fix the g_xx, g_yy components \
by choosing\
\>", "Text",
 CellChangeTimes->{{3.634148351389757*^9, 3.634148370821465*^9}, {
   3.6341484358937397`*^9, 3.634148461936061*^9}, {3.6341496083741817`*^9, 
   3.634149622386002*^9}, {3.683361937453012*^9, 3.683362052772134*^9}, 
   3.689325523474148*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "r_", "]"}], ":=", 
   FractionBox[
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}], "2"]}], "rp"]}], ";"}]], "Input",
 CellChangeTimes->{{3.683009231733841*^9, 3.6830092713190603`*^9}, {
  3.683045601622464*^9, 3.6830456081116953`*^9}}],

Cell["\<\
Now f[r] corresponds to the usual blackening factor and G[r] multiplies the \
(r,t) part. Those are the free metric functions.\
\>", "Text",
 CellChangeTimes->{{3.683362063261351*^9, 3.683362115740972*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IndepVar", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "x", ",", "y"}], "}"}]}], ";", 
  RowBox[{"dim", "=", 
   RowBox[{"Length", "[", "IndepVar", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mybg", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], 
          RowBox[{"G", "[", "r", "]"}]}], 
         SuperscriptBox[
          RowBox[{"g", "[", "r", "]"}], "2"]]}], "0", "0", "0"},
      {"0", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "2"], 
         RowBox[{"G", "[", "r", "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"g", "[", "r", "]"}], "2"], 
         RowBox[{"f", "[", "r", "]"}]}]], "0", "0"},
      {"0", "0", 
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"g", "[", "r", "]"}], "2"]], "0"},
      {"0", "0", "0", 
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"g", "[", "r", "]"}], "2"]]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invbg", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", "mybg", "]"}], "//", "FullSimplify"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6126859717001343`*^9, 3.6126859874494457`*^9}, 
   3.6126894128419733`*^9, {3.683293543206559*^9, 3.683293554442779*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["\<\
Ansatz for the gauge field: constant magnetic field, and an A_t component for \
electric field.\
\>", "Text",
 CellChangeTimes->{{3.5909264299304028`*^9, 3.590926441186219*^9}, 
   3.6126135367230864`*^9, {3.6833621224783792`*^9, 3.683362156219099*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "r", "]"}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["B", "2"]}], " ", "y"}], ",", 
     RowBox[{
      FractionBox["B", "2"], " ", "x"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox["At", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "0", "0"},
      {
       RowBox[{
        SuperscriptBox["At", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "0", "0", "0"},
      {"0", "0", "0", "B"},
      {"0", "0", 
       RowBox[{"-", "B"}], "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6126859717001343`*^9, 3.6126859874494457`*^9}, 
   3.6126894128419733`*^9, {3.630050574594737*^9, 3.630050602230996*^9}, {
   3.630065363923441*^9, 3.630065367422039*^9}, {3.630141592252771*^9, 
   3.630141594260268*^9}, 3.634137745066844*^9, {3.634138553289736*^9, 
   3.634138611283909*^9}, {3.681473249034732*^9, 3.681473260910281*^9}, {
   3.681474286280582*^9, 3.681474313426749*^9}, {3.6820527768443003`*^9, 
   3.682052780779344*^9}, {3.682067544061125*^9, 3.6820675446113253`*^9}, {
   3.682067957278411*^9, 3.682067960784019*^9}, 3.682068132445836*^9, {
   3.6832937929825563`*^9, 3.6832937981566277`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["EOM:", "Text",
 CellChangeTimes->{{3.683362164216732*^9, 3.68336218637775*^9}, {
  3.6893255532008395`*^9, 3.6893255540010023`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Ricci", "[", 
        RowBox[{"a", ",", "b", ",", "mybg", ",", "invbg"}], "]"}], "-", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "r", "]"}], ",", 
          RowBox[{
          "IndepVar", "\[LeftDoubleBracket]", "a", 
           "\[RightDoubleBracket]"}]}], "]"}], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "r", "]"}], ",", 
          RowBox[{
          "IndepVar", "\[LeftDoubleBracket]", "b", 
           "\[RightDoubleBracket]"}]}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"V", "[", 
         RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], 
        RowBox[{"mybg", "\[LeftDoubleBracket]", 
         RowBox[{"a", ",", "b"}], "\[RightDoubleBracket]"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"Z", "[", 
         RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], 
           RowBox[{"mybg", "\[LeftDoubleBracket]", 
            RowBox[{"a", ",", "b"}], "\[RightDoubleBracket]"}], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"invbg", "\[LeftDoubleBracket]", 
               RowBox[{"l", ",", "m"}], "\[RightDoubleBracket]"}], 
              RowBox[{"invbg", "\[LeftDoubleBracket]", 
               RowBox[{"\[Rho]", ",", "p"}], "\[RightDoubleBracket]"}], 
              RowBox[{"F", "\[LeftDoubleBracket]", 
               RowBox[{"l", ",", "\[Rho]"}], "\[RightDoubleBracket]"}], 
              RowBox[{"F", "\[LeftDoubleBracket]", 
               RowBox[{"m", ",", "p"}], "\[RightDoubleBracket]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"l", ",", "dim"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "dim"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "dim"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"p", ",", "dim"}], "}"}]}], "]"}]}], "-", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"invbg", "\[LeftDoubleBracket]", 
              RowBox[{"\[Rho]", ",", "p"}], "\[RightDoubleBracket]"}], 
             RowBox[{"F", "\[LeftDoubleBracket]", 
              RowBox[{"a", ",", "\[Rho]"}], "\[RightDoubleBracket]"}], 
             RowBox[{"F", "\[LeftDoubleBracket]", 
              RowBox[{"b", ",", "p"}], "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Rho]", ",", "dim"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "dim"}], "}"}]}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "dim"}], "}"}]}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Z", "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], 
            RowBox[{"invbg", "\[LeftDoubleBracket]", 
             RowBox[{"a", ",", "c"}], "\[RightDoubleBracket]"}], 
            RowBox[{"invbg", "\[LeftDoubleBracket]", 
             RowBox[{"b", ",", "d"}], "\[RightDoubleBracket]"}], 
            RowBox[{"F", "\[LeftDoubleBracket]", 
             RowBox[{"c", ",", "d"}], "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{
           "IndepVar", "\[LeftDoubleBracket]", "a", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "dim"}], "}"}]}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Christoffel", "[", 
           RowBox[{"a", ",", "a", ",", "\[Rho]", ",", "mybg", ",", "invbg"}], 
           "]"}], 
          RowBox[{"Z", "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], 
          RowBox[{"invbg", "\[LeftDoubleBracket]", 
           RowBox[{"\[Rho]", ",", "p"}], "\[RightDoubleBracket]"}], 
          RowBox[{"invbg", "\[LeftDoubleBracket]", 
           RowBox[{"b", ",", "c"}], "\[RightDoubleBracket]"}], 
          RowBox[{"F", "\[LeftDoubleBracket]", 
           RowBox[{"p", ",", "c"}], "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Rho]", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "dim"}], "}"}]}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Christoffel", "[", 
           RowBox[{"b", ",", "a", ",", "\[Rho]", ",", "mybg", ",", "invbg"}], 
           "]"}], 
          RowBox[{"Z", "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], 
          RowBox[{"invbg", "\[LeftDoubleBracket]", 
           RowBox[{"a", ",", "c"}], "\[RightDoubleBracket]"}], 
          RowBox[{"invbg", "\[LeftDoubleBracket]", 
           RowBox[{"\[Rho]", ",", "p"}], "\[RightDoubleBracket]"}], 
          RowBox[{"F", "\[LeftDoubleBracket]", 
           RowBox[{"c", ",", "p"}], "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Rho]", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "dim"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "dim"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "dim"}], "}"}]}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"invbg", "\[LeftDoubleBracket]", 
        RowBox[{"a", ",", "b"}], "\[RightDoubleBracket]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "r", "]"}], ",", 
         RowBox[{
         "IndepVar", "\[LeftDoubleBracket]", "a", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
         "IndepVar", "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}]}],
         "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "dim"}], "}"}]}], "]"}], "-", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"invbg", "\[LeftDoubleBracket]", 
        RowBox[{"a", ",", "b"}], "\[RightDoubleBracket]"}], 
       RowBox[{"Christoffel", "[", 
        RowBox[{"\[Rho]", ",", "b", ",", "a", ",", "mybg", ",", "invbg"}], 
        "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "r", "]"}], ",", 
         RowBox[{
         "IndepVar", "\[LeftDoubleBracket]", "\[Rho]", 
          "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", "dim"}], "}"}]}], "]"}], "-", 
    RowBox[{
     RowBox[{"V", "'"}], "[", 
     RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], "-", 
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{
      RowBox[{"Z", "'"}], "[", 
      RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"invbg", "\[LeftDoubleBracket]", 
         RowBox[{"l", ",", "m"}], "\[RightDoubleBracket]"}], 
        RowBox[{"invbg", "\[LeftDoubleBracket]", 
         RowBox[{"\[Rho]", ",", "p"}], "\[RightDoubleBracket]"}], 
        RowBox[{"F", "\[LeftDoubleBracket]", 
         RowBox[{"l", ",", "\[Rho]"}], "\[RightDoubleBracket]"}], 
        RowBox[{"F", "\[LeftDoubleBracket]", 
         RowBox[{"m", ",", "p"}], "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "dim"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", "dim"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "dim"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "dim"}], "}"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.683293578096887*^9, 3.6832937725715523`*^9}, {
  3.6832938129532833`*^9, 3.68329394513054*^9}, {3.683294473323374*^9, 
  3.6832944850199947`*^9}, {3.6832945241720047`*^9, 3.68329492890941*^9}, {
  3.683295265864833*^9, 3.683295364092636*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"eq1", ",", "eq2", ",", 
        RowBox[{"{", "eq3", "}"}]}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683295381279703*^9, 3.683295381445938*^9}}],

Cell["\<\
Choice of the potentials. If \[Delta]p and \[Gamma]p are big enough, and \
\[Gamma] and \[Delta] are negative, they reduce to the choice in subsection 5.2
So this choice connects with that near-boundary behavior for large dilaton at \
the horizon.\
\>", "Text",
 CellChangeTimes->{{3.6833621914840918`*^9, 3.683362279953968*^9}, {
  3.6893255704502172`*^9, 3.6893255710412936`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"potentialschoice", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"V", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"4", "\[Beta]", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], " ", "x"}], "]"}]}]}], "]"}]}], ",", 
     RowBox[{"Z", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"Sech", "[", 
          RowBox[{
           RowBox[{"-", "\[Gamma]"}], " ", "x"}], "]"}]}]}], "]"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.682056628009268*^9, 3.682056717891621*^9}, {
  3.682057393979372*^9, 3.682057402195067*^9}, {3.682984280356471*^9, 
  3.682984284034212*^9}, {3.683030915577335*^9, 3.683030932773123*^9}, {
  3.683031196943033*^9, 3.683031203922284*^9}, {3.683031322171906*^9, 
  3.6830313401591988`*^9}, {3.6832944946879253`*^9, 3.6832944948185387`*^9}, {
  3.68337541229967*^9, 3.683375416439012*^9}},
 Background->RGBColor[1, 0.85, 0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Choices", "Subsubsection",
 CellChangeTimes->{{3.682628202575428*^9, 3.682628204732593*^9}, {
  3.682985081534309*^9, 3.682985083101622*^9}, {3.683364034756467*^9, 
  3.683364036103848*^9}}],

Cell["\<\
There are some free parameters in the couplings, that should be well \
approximated by exponentials.
Here one can play with different values of \[Gamma], \[Delta] and AA=B/Q to \
check agreement between the cosh, sinh expressions and their corresponding \
exponentials.\
\>", "Text",
 CellChangeTimes->{{3.6833638155364523`*^9, 3.6833638450121117`*^9}, {
  3.689326019888979*^9, 3.689326108129154*^9}, {3.6893300465293713`*^9, 
  3.689330130818449*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Gamma]", ",", "\[Delta]", ",", "B", ",", "Q"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trial", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]", "\[Rule]", 
      RowBox[{"-", "2.2"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", 
      RowBox[{"-", "2.15"}]}], ",", 
     RowBox[{"AA", "\[Rule]", 
      RowBox[{"1", "/", "40"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6833360696354647`*^9, 3.6833361304381847`*^9}, {
  3.683452515722638*^9, 3.6834525172164707`*^9}, {3.683545208456924*^9, 
  3.6835453097959127`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cosh", "[", 
   RowBox[{
    RowBox[{"-", "\[Delta]"}], 
    FractionBox["1", 
     RowBox[{"2", "\[Gamma]"}]], 
    RowBox[{"Log", "[", 
     RowBox[{"AA", 
      FractionBox[
       RowBox[{"\[Gamma]", "-", "\[Delta]"}], 
       RowBox[{"\[Gamma]", "+", "\[Delta]"}]]}], "]"}]}], "]"}], "/.", 
  "trial"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[Delta]"}], 
     FractionBox["1", 
      RowBox[{"2", "\[Gamma]"}]], 
     RowBox[{"Log", "[", 
      RowBox[{"AA", 
       FractionBox[
        RowBox[{"\[Gamma]", "-", "\[Delta]"}], 
        RowBox[{"\[Gamma]", "+", "\[Delta]"}]]}], "]"}]}], "]"}]}], "/.", 
  "trial"}]}], "Input",
 CellChangeTimes->{{3.683335943635653*^9, 3.683336067870384*^9}, {
  3.683336103221056*^9, 3.683336107883986*^9}}],

Cell[BoxData["26.894569101079192`"], "Output",
 CellChangeTimes->{{3.6833361106495256`*^9, 3.683336132029273*^9}, 
   3.683452524608074*^9, {3.683545213015209*^9, 3.683545311474831*^9}, {
   3.6835468760586443`*^9, 3.68354690587683*^9}, 3.6836309342866592`*^9, 
   3.68397272331287*^9, 3.683972831474422*^9, 3.683972917033936*^9, 
   3.685091015125079*^9, 3.6852888223191795`*^9, 3.6852915344861317`*^9, 
   3.6863090777486362`*^9, 3.686309480548955*^9, 3.686311067098422*^9, 
   3.6863112228616824`*^9, 3.68932734233287*^9, 3.6893304375924683`*^9}],

Cell[BoxData["26.88527032904008`"], "Output",
 CellChangeTimes->{{3.6833361106495256`*^9, 3.683336132029273*^9}, 
   3.683452524608074*^9, {3.683545213015209*^9, 3.683545311474831*^9}, {
   3.6835468760586443`*^9, 3.68354690587683*^9}, 3.6836309342866592`*^9, 
   3.68397272331287*^9, 3.683972831474422*^9, 3.683972917033936*^9, 
   3.685091015125079*^9, 3.6852888223191795`*^9, 3.6852915344861317`*^9, 
   3.6863090777486362`*^9, 3.686309480548955*^9, 3.686311067098422*^9, 
   3.6863112228616824`*^9, 3.68932734233287*^9, 3.6893304375954742`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sech", "[", 
   RowBox[{
    RowBox[{"-", "\[Gamma]"}], 
    FractionBox["1", 
     RowBox[{"2", "\[Gamma]"}]], 
    RowBox[{"Log", "[", 
     RowBox[{"AA", 
      FractionBox[
       RowBox[{"\[Gamma]", "-", "\[Delta]"}], 
       RowBox[{"\[Gamma]", "+", "\[Delta]"}]]}], "]"}]}], "]"}], "/.", 
  "trial"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", 
   RowBox[{"Exp", "[", 
    RowBox[{"\[Gamma]", 
     FractionBox["1", 
      RowBox[{"2", "\[Gamma]"}]], 
     RowBox[{"Log", "[", 
      RowBox[{"AA", 
       FractionBox[
        RowBox[{"\[Gamma]", "-", "\[Delta]"}], 
        RowBox[{"\[Gamma]", "+", "\[Delta]"}]]}], "]"}]}], "]"}]}], "/.", 
  "trial"}]}], "Input",
 CellChangeTimes->{{3.683336010115425*^9, 3.6833360616913023`*^9}, {
  3.6833361084451313`*^9, 3.683336109270347*^9}}],

Cell[BoxData["0.033893435688026816`"], "Output",
 CellChangeTimes->{{3.68333611184317*^9, 3.683336133603271*^9}, 
   3.6834525278408527`*^9, 3.68354535559604*^9, {3.6835468760906897`*^9, 
   3.6835469059032183`*^9}, 3.683630934367116*^9, 3.6839727233402*^9, 
   3.683972831500696*^9, 3.683972917061399*^9, 3.6850910151390886`*^9, 
   3.685288822332188*^9, 3.6852915345011606`*^9, 3.686309077760144*^9, 
   3.6863094805634704`*^9, 3.686311067106*^9, 3.6863112228717346`*^9, 
   3.689327342352913*^9, 3.689330437603495*^9}],

Cell[BoxData["0.033903175181040614`"], "Output",
 CellChangeTimes->{{3.68333611184317*^9, 3.683336133603271*^9}, 
   3.6834525278408527`*^9, 3.68354535559604*^9, {3.6835468760906897`*^9, 
   3.6835469059032183`*^9}, 3.683630934367116*^9, 3.6839727233402*^9, 
   3.683972831500696*^9, 3.683972917061399*^9, 3.6850910151390886`*^9, 
   3.685288822332188*^9, 3.6852915345011606`*^9, 3.686309077760144*^9, 
   3.6863094805634704`*^9, 3.686311067106*^9, 3.6863112228717346`*^9, 
   3.689327342352913*^9, 3.689330437608509*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Gamma]", ",", "\[Delta]", ",", "B", ",", "Q"}], "]"}]], "Input",
 CellChangeTimes->{{3.683336239375785*^9, 3.683336252592824*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Equations to Solve", "Subsubsection",
 CellChangeTimes->{{3.682628202575428*^9, 3.682628204732593*^9}, {
  3.682985081534309*^9, 3.682985083101622*^9}, {3.689330034848917*^9, 
  3.6893300389294176`*^9}}],

Cell["Let\[CloseCurlyQuote]s look now at our 5 differential equations.", \
"Text",
 CellChangeTimes->{{3.683364334317069*^9, 3.683364351511141*^9}, {
   3.683364697426916*^9, 3.68336469784439*^9}, 3.683467083393672*^9, {
   3.689326116096965*^9, 3.6893261165451565`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqs", "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.683364274157968*^9, 3.683364274570573*^9}, {
  3.683367974263455*^9, 3.683367976771768*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"48", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
         SuperscriptBox["rp", "4"], " ", 
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"G", "[", "r", "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"G", "[", "r", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["rp", "4"], " ", 
            RowBox[{"V", "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["B", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
            SuperscriptBox["r", "4"], " ", 
            RowBox[{"Z", "[", 
             RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
         SuperscriptBox["r", "4"], " ", 
         SuperscriptBox["rp", "2"], " ", 
         RowBox[{"Z", "[", 
          RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["At", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
        RowBox[{"8", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "r"}], "+", 
           SuperscriptBox["r", "2"]}], ")"}], " ", 
         SuperscriptBox["rp", "4"], " ", 
         RowBox[{"G", "[", "r", "]"}], " ", 
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["rp", "2"], " ", 
        SuperscriptBox[
         RowBox[{"G", "[", "r", "]"}], "2"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
      SuperscriptBox["rp", "2"], " ", 
      SuperscriptBox[
       RowBox[{"G", "[", "r", "]"}], "3"]}]], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
     SuperscriptBox["r", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        RowBox[{"Z", "[", 
         RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["At", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["G", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "+", 
       RowBox[{
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}]}], " ", 
           RowBox[{
            SuperscriptBox["At", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], " ", 
           RowBox[{
            SuperscriptBox["Z", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Z", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["At", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["At", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"G", "[", "r", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{"G", "[", "r", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["rp", "4"], " ", 
               RowBox[{"V", "[", 
                RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["B", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
               SuperscriptBox["r", "4"], " ", 
               RowBox[{"Z", "[", 
                RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox["rp", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
               SuperscriptBox["r", "2"], " ", 
               RowBox[{"Z", "[", 
                RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["At", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["rp", "2"], " ", 
               RowBox[{
                SuperscriptBox["f", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}], " ", 
               RowBox[{
                SuperscriptBox["G", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "+", 
           
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
            SuperscriptBox["rp", "4"], " ", 
            RowBox[{"G", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "8"}], "+", 
                 RowBox[{"18", " ", "r"}], "-", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["r", "2"]}]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["f", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "r"}], "+", 
                 SuperscriptBox["r", "2"]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["f", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["rp", "4"], " ", 
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"24", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
            SuperscriptBox[
             RowBox[{"G", "[", "r", "]"}], "2"]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["G", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
            RowBox[{"G", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"10", " ", "r"}], "-", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["r", "2"]}]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["G", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "r"}], "+", 
                 SuperscriptBox["r", "2"]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["G", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"16", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["rp", "2"], " ", 
      SuperscriptBox[
       RowBox[{"G", "[", "r", "]"}], "2"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"G", "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"G", "[", "r", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["rp", "4"], " ", 
             RowBox[{"V", "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
             SuperscriptBox["r", "4"], " ", 
             RowBox[{"Z", "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["rp", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"Z", "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["At", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["rp", "2"], " ", 
             RowBox[{
              SuperscriptBox["f", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}], " ", 
             RowBox[{
              SuperscriptBox["G", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8"}], "+", 
               RowBox[{"18", " ", "r"}], "-", 
               RowBox[{"9", " ", 
                SuperscriptBox["r", "2"]}]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["f", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["f", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["rp", "4"], " ", 
       RowBox[{"f", "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["G", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"G", "[", "r", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"24", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"6", " ", "r"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["r", "2"]}]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["G", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["G", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["rp", "4"], " ", 
      RowBox[{"f", "[", "r", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"G", "[", "r", "]"}], "2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
      SuperscriptBox["rp", "4"], " ", 
      SuperscriptBox[
       RowBox[{"G", "[", "r", "]"}], "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
       SuperscriptBox["r", "4"], " ", 
       SuperscriptBox["rp", "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["At", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"], " ", 
       RowBox[{
        SuperscriptBox["Z", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"G", "[", "r", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{
           SuperscriptBox["V", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["B", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
          SuperscriptBox["r", "4"], " ", 
          RowBox[{
           SuperscriptBox["Z", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
       SuperscriptBox["rp", "4"], " ", 
       RowBox[{"G", "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", 
               RowBox[{"10", " ", "r"}], "-", 
               RowBox[{"5", " ", 
                SuperscriptBox["r", "2"]}]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683364274820586*^9, 3.683364319702577*^9, 3.683364800044327*^9, {
   3.683367972708786*^9, 3.683367977426778*^9}, 3.683467095253384*^9, 
   3.6835008521192913`*^9, 3.683536333054904*^9, 3.683537768417609*^9, 
   3.6835395074399652`*^9, 3.6835402197372293`*^9, 3.683545412543097*^9, 
   3.683545497427394*^9, 3.683546096025732*^9, {3.683546876213109*^9, 
   3.6835469060249434`*^9}, 3.683630934592957*^9, 3.683972723459311*^9, 
   3.683972831619069*^9, 3.683972917181324*^9, 3.6850910153282194`*^9, 
   3.685288822606885*^9, 3.6852915346594954`*^9, 3.6863090779332666`*^9, 
   3.6863094807641077`*^9, 3.6863110692875805`*^9, 3.6863112230765963`*^9, 
   3.68932734251235*^9, 3.689330437756906*^9}]
}, Open  ]],

Cell["\<\
First we need to normalize the functions so that they go to finite values at \
the horizon.\
\>", "Text",
 CellChangeTimes->{{3.6833706002427*^9, 3.683370618630381*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqsn", "=", 
   RowBox[{
    RowBox[{"eqs", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", 
          RowBox[{
           RowBox[{"fn", "[", "r", "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "1"}], ")"}], "4"]}]}], "]"}]}], ",", 
       RowBox[{"At", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", 
          RowBox[{
           RowBox[{"Atn", "[", "r", "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", "1"}], ")"}], "2"]}]}], "]"}]}]}], "}"}]}], "//",
     "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683370621654501*^9, 3.6833707044975853`*^9}}],

Cell["We can solve for 3 second derivatives:", "Text",
 CellChangeTimes->{{3.6833694399715757`*^9, 3.683369452648468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repl1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
         "eqsn", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
         "eqsn", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
         "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
         "eqsn", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
         "\[Equal]", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], ",", 
        RowBox[{
         SuperscriptBox["Atn", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], ",", 
        RowBox[{
         SuperscriptBox["fn", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.683368363267777*^9, 3.6833683712668877`*^9}, {
   3.683368885301669*^9, 3.683368888988864*^9}, 3.6833692670485277`*^9, {
   3.683370708695498*^9, 3.68337071621791*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], "2"], " ", 
       RowBox[{"fn", "[", "r", "]"}]}]], 
     RowBox[{
      RowBox[{"G", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
           SuperscriptBox["r", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Atn", "[", "r", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["Atn", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "2"], 
           " ", 
           RowBox[{
            SuperscriptBox["Z", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], 
          RowBox[{
           SuperscriptBox["rp", "2"], " ", 
           SuperscriptBox[
            RowBox[{"G", "[", "r", "]"}], "2"]}]]}], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["rp", "4"], " ", 
             RowBox[{
              SuperscriptBox["V", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
             SuperscriptBox["r", "4"], " ", 
             RowBox[{
              SuperscriptBox["Z", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], 
         SuperscriptBox["rp", "4"]], "+", 
        FractionBox[
         RowBox[{"2", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RowBox[{"2", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{"fn", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], 
         RowBox[{"G", "[", "r", "]"}]], "-", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "r"}], "+", 
             SuperscriptBox["r", "2"]}], ")"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["fn", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], 
         RowBox[{"G", "[", "r", "]"}]]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Atn", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
       RowBox[{"G", "[", "r", "]"}], " ", 
       RowBox[{"Z", "[", 
        RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Z", "[", 
         RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Atn", "[", "r", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["Atn", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["G", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "-", 
       RowBox[{
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", 
           RowBox[{"Z", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["Atn", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Atn", "[", "r", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["Atn", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["Z", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["fn", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"3", " ", "r"}], "+", 
         SuperscriptBox["r", "2"]}], ")"}]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
      RowBox[{"fn", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"16", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"10", " ", "r"}], "-", 
            RowBox[{"9", " ", 
             SuperscriptBox["r", "2"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["r", "3"]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["rp", "4"], " ", 
             RowBox[{"V", "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
             SuperscriptBox["r", "4"], " ", 
             RowBox[{"Z", "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"fn", "[", "r", "]"}]}]], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"8", "-", 
            RowBox[{"2", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["fn", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
          RowBox[{"fn", "[", "r", "]"}]}]], "+", 
        RowBox[{
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["rp", "2"], " ", 
           RowBox[{"fn", "[", "r", "]"}], " ", 
           RowBox[{"G", "[", "r", "]"}]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"Z", "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Atn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["Atn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
              "2"]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
             SuperscriptBox["rp", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"fn", "[", "r", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                RowBox[{
                 SuperscriptBox["fn", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["G", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], "-", 
        
        RowBox[{
         FractionBox["1", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"G", "[", "r", "]"}], "2"]}]], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["G", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"G", "[", "r", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"24", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
                SuperscriptBox["r", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Phi]", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
             RowBox[{"G", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"4", "-", 
                  RowBox[{"6", " ", "r"}], "+", 
                  RowBox[{"3", " ", 
                   SuperscriptBox["r", "2"]}]}], ")"}], " ", 
                RowBox[{
                 SuperscriptBox["G", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"3", " ", "r"}], "+", 
                  SuperscriptBox["r", "2"]}], ")"}], " ", 
                RowBox[{
                 SuperscriptBox["G", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], ")"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68336837321395*^9, 3.683368889971384*^9, 3.683369268075037*^9, 
   3.6833707174021072`*^9, 3.683466499687476*^9, 3.683467095901025*^9, 
   3.6835008530598187`*^9, 3.683536333840068*^9, 3.6835377690452843`*^9, 
   3.683539508085332*^9, 3.6835402203651123`*^9, 3.6835454131532183`*^9, 
   3.683545498084547*^9, 3.6835460966859694`*^9, {3.6835468768198843`*^9, 
   3.683546906631083*^9}, 3.6836309354295588`*^9, 3.683972724085187*^9, 
   3.683972832259898*^9, 3.6839729178083553`*^9, 3.685091016380947*^9, 
   3.685288823780218*^9, 3.685291535724484*^9, 3.686309079188155*^9, 
   3.686309481953451*^9, 3.686311070263353*^9, 3.6863112240208826`*^9, 
   3.689327343330719*^9, 3.6893304385800767`*^9}]
}, Open  ]],

Cell["And this is what\[CloseCurlyQuote]s left:", "Text",
 CellChangeTimes->{{3.683369457439254*^9, 3.683369463686729*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqs2", "=", 
  RowBox[{
   RowBox[{"eqsn", "/.", "repl1"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.6833688962493134`*^9, {3.683369270559667*^9, 3.6833692793258867`*^9}, 
   3.683370722521963*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"16", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["rp", "2"], " ", 
       SuperscriptBox[
        RowBox[{"G", "[", "r", "]"}], "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"48", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], "4"], " ", 
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"fn", "[", "r", "]"}], " ", 
        RowBox[{"G", "[", "r", "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"G", "[", "r", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["rp", "4"], " ", 
           RowBox[{"V", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["B", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
           SuperscriptBox["r", "4"], " ", 
           RowBox[{"Z", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
        SuperscriptBox["r", "4"], " ", 
        SuperscriptBox["rp", "2"], " ", 
        RowBox[{"Z", "[", 
         RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Atn", "[", "r", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Atn", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "2"]}], 
       "-", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"fn", "[", "r", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["fn", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}], "6"], " ", 
      SuperscriptBox["rp", "2"], " ", 
      SuperscriptBox[
       RowBox[{"fn", "[", "r", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["G", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
         RowBox[{"G", "[", "r", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
      RowBox[{"G", "[", "r", "]"}]}]]}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.683368896899756*^9, {3.683369271748011*^9, 3.6833692798055058`*^9}, 
   3.683370724883781*^9, 3.683466502216625*^9, 3.6834670959941874`*^9, 
   3.6835008531686344`*^9, 3.683536333992723*^9, 3.683537769147478*^9, 
   3.683539508238535*^9, 3.6835402204687233`*^9, 3.683545413254064*^9, 
   3.683545498188849*^9, 3.6835460967877827`*^9, {3.683546876929967*^9, 
   3.6835469067330303`*^9}, 3.6836309356192837`*^9, 3.683972724275777*^9, 
   3.6839728323652143`*^9, 3.683972917910357*^9, 3.685091016534097*^9, 
   3.6852888239448366`*^9, 3.685291535859563*^9, 3.6863090793677826`*^9, 
   3.686309482100073*^9, 3.686311070415471*^9, 3.6863112241704955`*^9, 
   3.6893273434906783`*^9, 3.689330438736484*^9}]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s look at the simplest one and solve for a first \
derivative:\
\>", "Text",
 CellChangeTimes->{{3.683369467161929*^9, 3.683369481224742*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"repl2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eqs2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"G", "'"}], "[", "r", "]"}]}], "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"repl2d", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"repl2", ",", "r"}], "]"}], "/.", "repl2"}], "//.", "repl1"}], 
    "//", "Simplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.683368914295601*^9, {3.6833692853615313`*^9, 3.6833693084315233`*^9}, {
   3.683369487371368*^9, 3.683369488075932*^9}, 3.683369632922861*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["G", "\[Prime]",
     MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
      RowBox[{"G", "[", "r", "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "2"]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683368916849235*^9, 3.683368967788433*^9, {3.683369298340929*^9, 
   3.6833693092444973`*^9}, 3.6833694887410727`*^9, 3.683370730619924*^9, 
   3.683466502922084*^9, 3.683467096016913*^9, 3.6835008532041593`*^9, 
   3.683536334081571*^9, 3.6835377691742783`*^9, 3.683539508264009*^9, 
   3.683540220497704*^9, 3.683545413279606*^9, 3.683545498214117*^9, 
   3.683546096813458*^9, {3.6835468769672527`*^9, 3.683546906760497*^9}, 
   3.683630935701254*^9, 3.683972724343729*^9, 3.683972832394712*^9, 
   3.68397291793795*^9, 3.6850910165481205`*^9, 3.685288823999875*^9, 
   3.68529153586857*^9, 3.68630907937779*^9, 3.6863094821115646`*^9, 
   3.6863110704414897`*^9, 3.686311224179002*^9, 3.6893273434986715`*^9, 
   3.6893304387465115`*^9}]
}, Open  ]],

Cell["\<\
With this new info, the original solution is complemented, and we get a final \
set of equations:\
\>", "Text",
 CellChangeTimes->{{3.6833695007759542`*^9, 3.683369524436167*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"repl1b", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"repl1", "/.", "repl2d"}], "/.", "repl2"}], "//", "Simplify"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"repl", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{"repl1b", ",", "repl2", ",", "repl2d"}], "]"}], "//", "Expand"}],
    "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.683369392065983*^9, 3.683369411134735*^9}, {
   3.683369529352648*^9, 3.683369530522694*^9}, {3.683369584711487*^9, 
   3.6833695850150557`*^9}, {3.683370745013485*^9, 3.683370763650361*^9}, 
   3.6833708283786716`*^9},
 Background->RGBColor[0.94, 0.88, 0.94]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
          SuperscriptBox["r", "4"], " ", 
          SuperscriptBox["rp", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Atn", "[", "r", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["Atn", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "2"], 
          " ", 
          RowBox[{
           SuperscriptBox["Z", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"G", "[", "r", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["rp", "4"], " ", 
             RowBox[{
              SuperscriptBox["V", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
             SuperscriptBox["r", "4"], " ", 
             RowBox[{
              SuperscriptBox["Z", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"2", " ", "r"}], "+", 
                SuperscriptBox["r", "2"]}], ")"}]}], " ", 
             RowBox[{"fn", "[", "r", "]"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["fn", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["rp", "4"], " ", 
         RowBox[{"fn", "[", "r", "]"}], " ", 
         RowBox[{"G", "[", "r", "]"}]}], ")"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Atn", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
        RowBox[{"Z", "[", 
         RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Atn", "[", "r", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Atn", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["Z", "\[Prime]",
           MultilineFunction->None], "[", 
          RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Z", "[", 
          RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
            RowBox[{"Atn", "[", "r", "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Atn", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"24", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["fn", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
        SuperscriptBox["r", "4"], " ", 
        SuperscriptBox["rp", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Atn", "[", "r", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Atn", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           RowBox[{"Z", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
           RowBox[{
            SuperscriptBox["Z", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", "r", " ", 
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["fn", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"2", " ", "r"}], "+", 
             SuperscriptBox["r", "2"]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"fn", "[", "r", "]"}], " ", 
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "32"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"4", " ", "r"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"2", " ", "r"}], "+", 
             SuperscriptBox["r", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}], 
       "-", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"G", "[", "r", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           SuperscriptBox["rp", "4"], " ", 
           RowBox[{"V", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["B", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "r"}], ")"}], "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
              SuperscriptBox["r", "3"], " ", 
              RowBox[{"Z", "[", 
               RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["rp", "4"], " ", 
                 RowBox[{
                  SuperscriptBox["V", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["B", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
                 SuperscriptBox["r", "4"], " ", 
                 RowBox[{
                  SuperscriptBox["Z", "\[Prime]",
                   MultilineFunction->None], "[", 
                  RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"8", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["rp", "4"], " ", 
       RowBox[{"G", "[", "r", "]"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["G", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
       RowBox[{"G", "[", "r", "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"]}], 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "r"}], ")"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["G", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"8", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
          SuperscriptBox["r", "4"], " ", 
          SuperscriptBox["rp", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Atn", "[", "r", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["Atn", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "2"], 
          " ", 
          RowBox[{
           SuperscriptBox["Z", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "-", 
         RowBox[{"32", " ", 
          SuperscriptBox[
           RowBox[{"G", "[", "r", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["rp", "4"], " ", 
             RowBox[{
              SuperscriptBox["V", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
             SuperscriptBox["r", "4"], " ", 
             RowBox[{
              SuperscriptBox["Z", "\[Prime]",
               MultilineFunction->None], "[", 
              RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"16", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"3", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["fn", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "+", 
            RowBox[{
             RowBox[{"fn", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "8"}], " ", 
                RowBox[{"(", 
                 RowBox[{"10", "-", 
                  RowBox[{"6", " ", "r"}], "+", 
                  RowBox[{"3", " ", 
                   SuperscriptBox["r", "2"]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
                SuperscriptBox["r", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Phi]", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"64", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", "r", " ", 
       SuperscriptBox["rp", "4"], " ", 
       RowBox[{"fn", "[", "r", "]"}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.683369401108921*^9, 3.6833694115941973`*^9}, 
   3.68336953106032*^9, 3.68336958544532*^9, {3.68337074013192*^9, 
   3.683370764634048*^9}, 3.683370830316313*^9, 3.683466506450645*^9, 
   3.683467096906599*^9, 3.6835008545647697`*^9, 3.683536335102091*^9, 
   3.683537770103532*^9, 3.683539509165407*^9, 3.683540221441587*^9, 
   3.6835454141795683`*^9, 3.6835454991218767`*^9, 3.683546097796338*^9, {
   3.683546877913104*^9, 3.683546907664253*^9}, 3.6836309366512117`*^9, 
   3.6839727252396173`*^9, 3.68397283330941*^9, 3.683972918853881*^9, 
   3.68509101808356*^9, 3.68528882549694*^9, 3.6852915375158653`*^9, 
   3.686309080934394*^9, 3.6863094836114025`*^9, 3.686311071840148*^9, 
   3.686311225521703*^9, 3.689327344706957*^9, 3.689330439976585*^9},
 Background->RGBColor[0.94, 0.88, 0.94]]
}, Open  ]],

Cell["\<\
What\[CloseCurlyQuote]s left is a constraint. If it is solved at one point, \
it\[CloseCurlyQuote]ll be solved throughout the bulk.\
\>", "Text",
 CellChangeTimes->{{3.683369931154305*^9, 3.683369945165001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"constr", "=", 
  RowBox[{
   RowBox[{"eqsn", "/.", "repl"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.68336954890027*^9, 3.683369556007349*^9}, {
   3.683369618184654*^9, 3.683369619449709*^9}, 3.68337077727881*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"16", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
       SuperscriptBox["r", "2"], " ", 
       SuperscriptBox["rp", "2"], " ", 
       SuperscriptBox[
        RowBox[{"G", "[", "r", "]"}], "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"48", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], "4"], " ", 
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"fn", "[", "r", "]"}], " ", 
        RowBox[{"G", "[", "r", "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"G", "[", "r", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["rp", "4"], " ", 
           RowBox[{"V", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["B", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
           SuperscriptBox["r", "4"], " ", 
           RowBox[{"Z", "[", 
            RowBox[{"\[Phi]", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
        SuperscriptBox["r", "4"], " ", 
        SuperscriptBox["rp", "2"], " ", 
        RowBox[{"Z", "[", 
         RowBox[{"\[Phi]", "[", "r", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Atn", "[", "r", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["Atn", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], "2"]}], 
       "-", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}], ")"}], " ", 
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"fn", "[", "r", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["fn", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.683369557046564*^9, 3.683369587737768*^9, 3.683369620091753*^9, 
   3.683370778532196*^9, 3.683466509639514*^9, 3.683467096982492*^9, 
   3.683500854672638*^9, 3.683536335231596*^9, 3.6835377701853037`*^9, 
   3.683539509240367*^9, 3.683540221516034*^9, 3.683545414252058*^9, 
   3.683545499348413*^9, 3.683546097916394*^9, {3.68354687798589*^9, 
   3.68354690773151*^9}, 3.683630936884643*^9, 3.683972725310482*^9, 
   3.683972833378147*^9, 3.683972918929261*^9, 3.6850910181936426`*^9, 
   3.6852888256060176`*^9, 3.6852915376129265`*^9, 3.686309081042471*^9, 
   3.686309483738468*^9, 3.6863110719447365`*^9, 3.6863112256122713`*^9, 
   3.6893273447971206`*^9, 3.689330440065323*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"replf", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
       "constr", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "\[Equal]", "0"}], ",", 
      RowBox[{
       SuperscriptBox["fn", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"constr", ",", "r"}], "]"}], "/.", "repl"}], "/.", "replf"}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.6826304886689873`*^9, 3.682630511091441*^9}, {
   3.682984516438972*^9, 3.682984561308938*^9}, 3.6829867060702343`*^9, 
   3.68336718894991*^9, {3.683368118112034*^9, 3.6833681204740562`*^9}, {
   3.683368320221651*^9, 3.683368339253664*^9}, 3.6833683996369867`*^9, {
   3.683368436946574*^9, 3.683368437631269*^9}, {3.6833696558705673`*^9, 
   3.683369676703918*^9}, {3.683369916171866*^9, 3.683369922758561*^9}, 
   3.683370785731979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.682630503865758*^9, 3.682630511521402*^9}, 
   3.682984518851787*^9, 3.682984562260434*^9, 3.682986707236055*^9, 
   3.683367201028644*^9, 3.683368122242795*^9, {3.683368330098892*^9, 
   3.683368339904698*^9}, 3.6833684012197647`*^9, 3.683368438714286*^9, 
   3.683369677284767*^9, {3.683369918337768*^9, 3.683369923236402*^9}, {
   3.683370782616293*^9, 3.6833707875948753`*^9}, 3.683466510508751*^9, 
   3.683467097077219*^9, 3.6835008547911863`*^9, 3.683536335462607*^9, 
   3.6835377702825747`*^9, 3.6835395093935337`*^9, 3.68354022161482*^9, 
   3.683545414350543*^9, 3.683545499445397*^9, 3.68354609801497*^9, {
   3.683546878086228*^9, 3.683546907829451*^9}, 3.683630937036916*^9, 
   3.683972725419346*^9, 3.68397283347801*^9, 3.683972919031672*^9, 
   3.6850910183207073`*^9, 3.6852888257611284`*^9, 3.685291537734358*^9, 
   3.6863090812246*^9, 3.6863094838870735`*^9, 3.6863110720588303`*^9, 
   3.686311225725355*^9, 3.689327344902416*^9, 3.6893304401679344`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[Gamma] = ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"-", "1"}],
   FontWeight->"Bold"]],
  CellChangeTimes->{{3.6835016686130066`*^9, 3.683501693239908*^9}, {
    3.6835017316366673`*^9, 3.683501756209921*^9}, 3.683536340367855*^9, 
    3.683539624101475*^9, 3.683540390137639*^9, 3.6835455637434473`*^9, 
    3.683546157572565*^9, 3.6835468833078833`*^9, 3.6835469134603148`*^9, 
    3.683630943368526*^9, 3.6839727319664516`*^9, 3.6839728400128736`*^9, 
    3.683972938349395*^9, 3.6852888708348455`*^9, 3.685291571571175*^9, 
    3.686309124033318*^9, 3.6863095187650013`*^9, 3.6863111687127132`*^9, 
    3.6863113223642764`*^9}],
 ", \[Delta] = ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"-", "1"}],
   FontWeight->"Bold"]],
  CellChangeTimes->{{3.6835016686130066`*^9, 3.683501693239908*^9}, {
    3.6835017316366673`*^9, 3.683501756209921*^9}, 3.683536340367855*^9, 
    3.683539624101475*^9, 3.683540390137639*^9, 3.6835455637434473`*^9, 
    3.683546157572565*^9, 3.6835468833078833`*^9, 3.6835469134603148`*^9, 
    3.683630943368526*^9, 3.6839727319664516`*^9, 3.6839728400128736`*^9, 
    3.683972938349395*^9, 3.6852888708348455`*^9, 3.685291571571175*^9, 
    3.686309124033318*^9, 3.6863095187650013`*^9, 3.6863111687127132`*^9, 
    3.6863113223642764`*^9}],
 " case"
}], "Subsection",
 CellChangeTimes->{{3.63984465219278*^9, 3.639844654825638*^9}, {
  3.68262818287681*^9, 3.682628186922513*^9}, {3.6835467342306433`*^9, 
  3.6835467373864727`*^9}, {3.68932409339277*^9, 3.6893240981441092`*^9}, {
  3.6893258245633583`*^9, 3.689325829762227*^9}, {3.689330172481739*^9, 
  3.6893301732186303`*^9}}],

Cell["\<\
This is the choice of coefficients for this section.
\[Epsilon] is just there to improve performance.\
\>", "Text",
 CellChangeTimes->{{3.6893258389928665`*^9, 3.689325868656777*^9}, {
  3.6893259523375115`*^9, 3.689325974816899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"1", "/", "1000000"}]}], ";", 
  RowBox[{"\[Gamma]0", "=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Epsilon]"}], ")"}]}]}], ";", 
  RowBox[{"\[Delta]0", "=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Epsilon]"}], ")"}]}]}], ";", 
  RowBox[{"B0", "=", "1"}], ";", 
  RowBox[{"Q0", "=", "1"}], ";", 
  RowBox[{"\[Beta]0", "=", 
   RowBox[{
    RowBox[{"-", "3"}], "/", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683629795615467*^9, 3.683629801061123*^9}, {
   3.683972704311513*^9, 3.6839727164343643`*^9}, {3.683972817158331*^9, 
   3.683972817949442*^9}, {3.68397289618172*^9, 3.683972907627047*^9}, {
   3.6847673038301487`*^9, 3.6847673567093153`*^9}, {3.685106037269765*^9, 
   3.68510603741794*^9}, 3.685106478815265*^9, 3.685291212099313*^9, 
   3.689329803969127*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"prec", "=", "120"}], ";"}]], "Input",
 CellChangeTimes->{{3.6834609529679003`*^9, 3.683460955474189*^9}, 
   3.6835363229021053`*^9, {3.683537756298938*^9, 3.68353775682097*^9}, {
   3.6850942734070134`*^9, 3.6850942738300867`*^9}, 3.689324226032526*^9, {
   3.689330274209588*^9, 3.6893302744813104`*^9}}],

Cell[CellGroupData[{

Cell["Bdry conditions", "Subsubsection",
 CellChangeTimes->{{3.682628202575428*^9, 3.682628204732593*^9}, {
  3.682985081534309*^9, 3.682985083101622*^9}, {3.683452015458109*^9, 
  3.6834520203724327`*^9}, {3.683539896831193*^9, 3.683539897392523*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Gamma]", ",", "\[Delta]", ",", "B", ",", "Q", ",", "rp"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.683336239375785*^9, 3.683336252592824*^9}, {
  3.6834525947567463`*^9, 3.683452595196653*^9}}],

Cell["\<\
Here we check the result obtained from the attractor equations, and find the \
BC that we need to impose to our ansatz.
Notice that for the extremal case, the expansion of f[r] starts at the 4th \
power, like it happened in the RN solution.\
\>", "Text",
 CellChangeTimes->{{3.6833624131671333`*^9, 3.683362515094975*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "6"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "2"]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "4"]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6826191990829983`*^9, 3.682619218600519*^9}, {
   3.6826192893847837`*^9, 3.682619293623053*^9}, {3.682619455429295*^9, 
   3.6826194808968487`*^9}, 3.6826195827695*^9, {3.682620023332851*^9, 
   3.682620044116284*^9}, {3.6826260178281*^9, 3.68262601883239*^9}, {
   3.683031436290341*^9, 3.683031490261662*^9}, {3.68328491398149*^9, 
   3.68328491578511*^9}, {3.6832853293549128`*^9, 3.683285335479884*^9}, {
   3.683285974051516*^9, 3.6832859757669992`*^9}, {3.68328621891416*^9, 
   3.683286220186427*^9}, {3.6833627591960917`*^9, 3.683362770833465*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdS2xR2cond", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cf", " ", "cg", " ", 
      SuperscriptBox["rp", "2"]}], "-", 
     FractionBox["cg", "cf"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683461892662215*^9, 3.6834619119828672`*^9}, 
   3.6834621003153257`*^9}],

Cell["\<\
We have solutions for v and w. Let\[CloseCurlyQuote]s see if they match what \
we get from plugging in that expansion into our EOM.\
\>", "Text",
 CellChangeTimes->{{3.683362849865858*^9, 3.683362894741521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqsexp0", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6834516904132032`*^9, 3.683451703837459*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["rp", "2"], " ", "\[Beta]", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["B", "2"], " ", 
            SuperscriptBox["cg", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["ca", "2"], " ", 
            SuperscriptBox["rp", "2"]}]}], ")"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
        RowBox[{"8", " ", 
         SuperscriptBox["cg", "2"], " ", 
         SuperscriptBox["rp", "2"]}]]}], ")"}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "2"],
      SeriesData[$CellContext`r, 1, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     1, {(((-2) $CellContext`rp^2) $CellContext`\[Beta]) 
       Cosh[$CellContext`c\[Phi] $CellContext`\[Delta]] + (((
          Rational[-1, 
            8] $CellContext`cg^(-2)) $CellContext`rp^(-2)) ($CellContext`B^2 \
$CellContext`cg^2 + $CellContext`ca^2 $CellContext`rp^2)) 
       Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]]}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", "-", "1"}], "]"}], "0"],
    SeriesData[$CellContext`r, 1, {}, 0, 0, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cf", " ", 
         SuperscriptBox["rp", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"cf", "+", 
           RowBox[{"2", " ", "cg", " ", "\[Beta]", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"cf", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox["cg", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["ca", "2"], " ", 
             SuperscriptBox["rp", "2"]}]}], ")"}], " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
         RowBox[{"8", " ", "cg", " ", 
          SuperscriptBox["rp", "2"]}]]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "6"],
      SeriesData[$CellContext`r, 1, {}, 4, 6, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     1, {($CellContext`cf $CellContext`rp^2) ($CellContext`cf + ((
           2 $CellContext`cg) $CellContext`\[Beta]) 
         Cosh[$CellContext`c\[Phi] $CellContext`\[Delta]]) + ((((
           Rational[-1, 
             8] $CellContext`cf)/$CellContext`cg) $CellContext`rp^(-2)) \
($CellContext`B^2 $CellContext`cg^2 + $CellContext`ca^2 $CellContext`rp^2)) 
       Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]]}, 4, 6, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "8"}], "-", 
       FractionBox[
        RowBox[{"16", " ", "cg", " ", "\[Beta]", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "cf"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["B", "2"], " ", 
            SuperscriptBox["cg", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["ca", "2"], " ", 
            SuperscriptBox["rp", "2"]}]}], ")"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
        RowBox[{"cf", " ", "cg", " ", 
         SuperscriptBox["rp", "4"]}]]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "-", "1"}], ")"}], "2"]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "0"],
      SeriesData[$CellContext`r, 1, {}, -2, 0, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     Rational[1, 
        2] (-8 - (((16/$CellContext`cf) $CellContext`cg) $CellContext`\[Beta])
         Cosh[$CellContext`c\[Phi] $CellContext`\[Delta]] + \
((($CellContext`cf^(-1)/$CellContext`cg) $CellContext`rp^(-4)) \
($CellContext`B^2 $CellContext`cg^2 + $CellContext`ca^2 $CellContext`rp^2)) 
        Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]])}, -2, 0, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", "\[Beta]", " ", "\[Delta]", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["B", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["ca", "2"], " ", 
             SuperscriptBox["rp", "2"]}], 
            SuperscriptBox["cg", "2"]]}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
         RowBox[{"Tanh", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
        RowBox[{"4", " ", 
         SuperscriptBox["rp", "4"]}]]}], ")"}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "2"],
      SeriesData[$CellContext`r, 1, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     1, {(((-4) $CellContext`\[Beta]) $CellContext`\[Delta]) 
       Sinh[$CellContext`c\[Phi] $CellContext`\[Delta]] + ((((
           Rational[
            1, 4] $CellContext`rp^(-4)) ($CellContext`B^2 - \
($CellContext`ca^2 $CellContext`cg^(-2)) $CellContext`rp^2)) $CellContext`\
\[Gamma]) Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]]) 
       Tanh[$CellContext`c\[Phi] $CellContext`\[Gamma]]}, 0, 2, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68329540300939*^9, 3.683329627459629*^9, {3.683451681192114*^9, 
   3.683451704292131*^9}, 3.683458553677826*^9, 3.6834610538609877`*^9, 
   3.683461093768413*^9, 3.683461953304493*^9, 3.6834622182417517`*^9, 
   3.683464834606646*^9, 3.683537778308454*^9, 3.6835395128719*^9, 
   3.683540225141984*^9, 3.683545417272458*^9, 3.683545501192215*^9, 
   3.683546099764945*^9, {3.683546879773863*^9, 3.683546909475985*^9}, 
   3.683630938822303*^9, 3.6839727270948887`*^9, 3.683972835117325*^9, 
   3.68397292067686*^9, 3.6847672309162445`*^9, 3.6847673734134483`*^9, 
   3.684767605012554*^9, 3.6850898818128443`*^9, 3.6850910749701934`*^9, 
   3.6850912679617114`*^9, 3.685093677919509*^9, 3.68509399796661*^9, 
   3.68509413087712*^9, 3.6850942199928007`*^9, 3.685094290787603*^9, 
   3.685096390885758*^9, 3.6851056315519705`*^9, 3.685106080159524*^9, {
   3.6851065198662276`*^9, 3.6851065242460155`*^9}, 3.6852912220894012`*^9, 
   3.689330442429494*^9}]
}, Open  ]],

Cell["\<\
Replacing Cosh, Sinh... by the appropriate exponentials (for large c\[Phi]), \
and adding an extra condition for having AdS2 x R2 in the IR...\
\>", "Text",
 CellChangeTimes->{{3.6832900177302027`*^9, 3.6832900527770576`*^9}, {
   3.683362909416469*^9, 3.683362968150182*^9}, 3.6893301912497187`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol0a", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "eqsexp0", "]"}], ",", "AdS2xR2cond"}], "]"}],
        "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"ca", ",", "cf", ",", "cg", ",", "B"}], "}"}]}], "]"}], "]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.6833629784834423`*^9, 3.683362997818604*^9}, {
   3.6834517140464163`*^9, 3.683451764145718*^9}, 3.68345179853874*^9, {
   3.683458533131317*^9, 3.683458535212371*^9}, 3.683461041909955*^9, 
   3.68346108299785*^9, {3.683461929519169*^9, 3.683461935206012*^9}, 
   3.6834621284075403`*^9, 3.683462204898849*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ca", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"Sech", "[", 
        RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Delta]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "-", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}]}]]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox["\[Beta]"], " ", 
       SqrtBox["\[Gamma]"], " ", 
       SqrtBox[
        RowBox[{"Sech", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]], " ", 
       SqrtBox[
        RowBox[{"Tanh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]]}]]}]}], ",", 
   RowBox[{"cf", "\[Rule]", 
    FractionBox["1", "rp"]}], ",", 
   RowBox[{"cg", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Sech", "[", 
       RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], 
      RowBox[{"4", " ", "rp", " ", "\[Beta]"}]]}]}], ",", 
   RowBox[{"B", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["rp", "4"], " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "-", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], " ", 
            RowBox[{"Tanh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}]}], ")"}]}]]}], 
      RowBox[{
       SqrtBox["\[Gamma]"], " ", 
       SqrtBox[
        RowBox[{"Sech", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]], " ", 
       SqrtBox[
        RowBox[{"Tanh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]]}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.683458554503189*^9, {3.683461052239493*^9, 3.683461057510405*^9}, {
   3.683461088408986*^9, 3.683461094504155*^9}, 3.683461977160429*^9, {
   3.683462103691766*^9, 3.683462129611136*^9}, 3.683462219276874*^9, 
   3.683464837154245*^9, 3.683537830893412*^9, 3.68353951420152*^9, 
   3.68354022612083*^9, 3.683545418294477*^9, 3.683545502600203*^9, 
   3.683546101026785*^9, {3.6835468807418423`*^9, 3.683546910400631*^9}, 
   3.683630939882032*^9, 3.683972728030966*^9, 3.68397283603701*^9, 
   3.683972921600945*^9, 3.6847672332056103`*^9, 3.684767375341319*^9, 
   3.68476760683309*^9, 3.685089883207879*^9, 3.6850910763604593`*^9, 
   3.685091269406101*^9, 3.685093679378213*^9, 3.6850939994148207`*^9, 
   3.685094132271098*^9, 3.6850942214324536`*^9, 3.685094292180897*^9, 
   3.6850963972259035`*^9, 3.6851056380090384`*^9, 3.6851060863218613`*^9, 
   3.685106532077712*^9, 3.6852912235507774`*^9, 3.6893304437537804`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", "\[Gamma]0"}], ";", 
  RowBox[{"\[Delta]", "=", "\[Delta]0"}], ";", 
  RowBox[{"B", "=", "B0"}], ";", 
  RowBox[{"Q", "=", "Q0"}], ";", 
  RowBox[{"\[Beta]", "=", "\[Beta]0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rp", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        SuperscriptBox["B", "2"]}], 
       RowBox[{"2", " ", "\[Beta]", 
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "\[Gamma]"}], ")"}]}]], ")"}], 
     FractionBox["1", "4"]], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Delta]"}], ")"}]}], 
       RowBox[{
        SuperscriptBox["B", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "+", "\[Delta]"}], ")"}]}]], ")"}], 
     FractionBox[
      RowBox[{"\[Delta]", "+", "\[Gamma]"}], 
      RowBox[{"8", " ", "\[Gamma]"}]]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6834525832801*^9, 3.6834525842678337`*^9}, {
   3.683458563767395*^9, 3.683458585623329*^9}, {3.6835377329177237`*^9, 
   3.683537734811674*^9}, {3.683538223690406*^9, 3.683538225153145*^9}, {
   3.683540198536656*^9, 3.683540199118517*^9}, 3.683546722046295*^9, {
   3.68354680005637*^9, 3.683546816474186*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["B", "2"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["rp", "4"], " ", "\[Beta]", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "+", 
       RowBox[{"\[Delta]", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"c\[Phi]", ",", "6", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6835378462201023`*^9, 3.683537859997733*^9}, {
  3.6835379047351522`*^9, 3.683537907309964*^9}, {3.683538234360202*^9, 
  3.683538236065577*^9}, {3.6847675402105894`*^9, 3.684767570163647*^9}, {
  3.685106544147766*^9, 3.6851065566714544`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVy3840wkAx/Gdll9XWanHxsa+SeHReKRbubLPEHW32ab52UNJS9TlKYTC
5SlEj1JXuiui4U7p8Pix/Oq+5MqQH9dQ3S0JieXy6xJ1zq0/Ps/7ef3xIfZH
est0KBSKULvP3dBjRqVQ6PBWiSYS2jQkLSfuqymtrX7Md9FXasi50N5Dg1/Q
0fFniuzyQw3ZNnOh4/cldARxurgFjRryqLHOtXQ9OnQjdF4qFBqyynvUxtiI
joyP0Q1Fcg3p+keVaL05Hfk+W5S58RoyqFN4Q7CNjkYbxlifpYaMq20pKEmk
44dS5cosvzFy2KGkpLqOjsCvw1+0fD9KWvu6cjJn6Tgb0ECpv/SGlBwh1sZy
Gejh92VQj46Q7Ssi1iyLZmAyammr0Pk1aSv/GF9ZzYBkIb3eoGmIDBlyCbCe
ZYA6Z2h1ijlIjpWPc3c6mkLn5In++JAB0jdyMO1klCmU52eoS1LU5Oo6/lO/
clMcssvbf9bwGXmnQnpLZ9wU7+qjHm82VZFWOWVq0s4MDd15tHWmbeTUymgT
63Az7MwefCMqqyML4k43y++YARXpPjLZZZ5dJjQajRkaJa2+D+qaebqcCFr/
eiaOXL8QzDNU8R6Rf/0yFMaEHbdrd/fOft7TFwqXK4VM6G6xqrI0fs3rGH/u
4TfCxOqsTa67AsZ5N26Xt75Zz0JMa+2TTudpXt305LeWoSwc4x17Tp6e5f1m
F887VshC5TzDr+D+J57xTIRjxCsW6DZNxa/kFCCMlu/AMofi4NPw12VL4P14
Ickg2BycEMnWd0f0UH1fGpR53RzZ1wxi+MFfYiFv5q6l2hwXI1N+7mHQwHLw
iE1jWqC0pkP0XfsqXBDo8LP9LVCWajtZemsNhgN0E+79ZIGznhKJ0oyB8zNR
ijN9FgiQ1jvsbmEiNbeteoUBG7UlPa354WzUbF1UHrBhI2Rw63LX4bUwzhnd
k+XJRs5pj1ynZCsMzMZs2HGIDfED9/Nbqq3RZ1JzvCuVDc7E6HCaiR1qjKSn
GgvZaCcVHB+VPZZRrjQ4P2SjpDcuUbzJEemKc4kZQ2x0cjqdbXOdEC8jYkOp
BFoOuknLL3MhfWvMKVhHoCJwKJb70hn+3PoDNa4EXoTpXZ3wd0HXKd0e31AC
zl0Pp2qFfBxN1W1uS9b+zd09T2S6YT5sX2RRHgG3S6Nhh/U98IEfLDVoJNDw
wcjh+KpdYA3Sal37CTzzCaju9hBg/OC60latBU4qb4qvAA1vuQXilwQ2GvXP
cGUCBL4PzgweINBTJJeQZwTI1v815OQggceMymlOkwA0+12GFSMEljK3Z1zd
LgQ1IXkPMUFgaM9C0s1tXlBRroqLPztNOt4n8II8pXiH/SQB4SPDMZMgL/Av
dtlvnyJA3IyUVyZ6IUnOogbMEGBnn7viTXphTll7N+sDgb3zK084uovQIuy4
ZTJHoMij99N7qQjZTwayb2ptUbE38IFMhM1qveS78wRG/nGvikkT4fiEj4/y
E4FutTrYs10EfnT4N6J/CWSxbm/0VotAm0/g9Wk9a6n+KPtbhDKdQpvhBQI5
+bclPXpiJKXdMz/8HwFV72LzYZoYXsvajae1dty3nNRjiMG61K8fv0gg0mnz
jmJCjPE10wuLWjdlqPyFtmL8D0eYMe0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{6., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{6, 9}, {-0.8372177766856146, 64.66097088488006}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683537847100615*^9, 3.683537860868246*^9}, 
   3.6835379079588623`*^9, {3.683538229520266*^9, 3.6835382365888433`*^9}, 
   3.683540204206168*^9, 3.6835402392663383`*^9, 3.683540322079054*^9, 
   3.683545420707947*^9, 3.683546103447171*^9, {3.683546880836499*^9, 
   3.68354691048759*^9}, 3.68363094016518*^9, 3.683972728126704*^9, 
   3.683972836123343*^9, 3.683972921689389*^9, 3.684767234240012*^9, 
   3.68476737691938*^9, {3.684767541457506*^9, 3.6847675704789453`*^9}, 
   3.684767608008133*^9, 3.68508988414754*^9, 3.685091077180751*^9, 
   3.68509127022171*^9, 3.6850936802008343`*^9, 3.685094000223176*^9, 
   3.685094133107834*^9, 3.685094222269134*^9, 3.685094293052575*^9, 
   3.685096400280655*^9, 3.6851056411291895`*^9, 3.685106089346289*^9, {
   3.6851065395208197`*^9, 3.685106557244131*^9}, 3.6852912246296053`*^9, 
   3.6893304439338894`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol0\[Phi]", "=", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", " ", 
       SuperscriptBox["B", "2"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["rp", "4"], " ", "\[Beta]", " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "+", 
         RowBox[{"\[Delta]", " ", 
          RowBox[{"Coth", "[", 
           RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"c\[Phi]", ",", "8"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "prec"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol0", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sol0a", "\[LeftDoubleBracket]", 
         RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], "/.", 
        "sol0\[Phi]"}], ",", "sol0\[Phi]"}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683452151209835*^9, 3.6834521839920597`*^9}, 
   3.68345256083182*^9, {3.683452719370914*^9, 3.68345273061279*^9}, {
   3.683460941133319*^9, 3.6834609769698877`*^9}, {3.683461582115798*^9, 
   3.683461582817834*^9}, {3.6834622356551037`*^9, 3.683462252182148*^9}, {
   3.684767575446702*^9, 3.6847675755996876`*^9}, 3.6850936724428377`*^9, 
   3.6851065611811686`*^9, 3.689330206321249*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "8"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "4"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "4"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6850938771691103`*^9, 3.685093892331853*^9}, {
  3.6850939734588146`*^9, 3.6850939735757246`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqsexp1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "/.", 
     "sol0"}], "//", "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             ",", "2"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
             ",", "0"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
             ",", "6"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}],
             ",", "0"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
             ",", "2"}], "]"}]}], "}"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"cf1", ",", "cg1", ",", "c\[Phi]1"}], "}"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.68346160320432*^9, 3.68346160689494*^9}, {
  3.6834648528364153`*^9, 3.683464855805862*^9}, {3.68346517406071*^9, 
  3.683465181302178*^9}, {3.683546560106258*^9, 3.6835465865370626`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"cf1", "\[Rule]", 
    RowBox[{
    "-", "3.130153392638488131470696029675153388250683125447660355539673072909\
944553272366481616532682687319874364567734476508321866028510208339589`111.\
12522778543683"}]}], ",", 
   RowBox[{"cg1", "\[Rule]", 
    RowBox[{
    "0.00104341259899816041555213048761218539639099510726963232874412181238166\
9927708085950202723460250882578822710511164369932739236844002409`111.\
38846938472685", "+", 
     RowBox[{
     "0.0012779085969362676688880590484092814031435649023243311274973271014209\
85210031294378625582653329526156904224286845242698575010442251312`111.\
21237819806436", " ", "ca1"}]}]}], ",", 
   RowBox[{"c\[Phi]1", "\[Rule]", 
    RowBox[{
    "-", "1.999997999766942112393027791170924260352058285978333549978534071666\
2824263188420209075637443977324071157825222263244096778671546417721`111.\
29155932828289"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683465181633463*^9, 3.683539530240959*^9, 3.6835402653646107`*^9, 
   3.6835403280955553`*^9, 3.683545429645554*^9, 3.683545512788775*^9, 
   3.683546112805333*^9, 3.683546588393732*^9, {3.683546881546039*^9, 
   3.6835469114057827`*^9}, 3.683630940949793*^9, 3.683972729115109*^9, 
   3.6839728370469227`*^9, 3.683972924198996*^9, 3.684767239900592*^9, 
   3.684767420273074*^9, 3.684767650088786*^9, 3.685090008885344*^9, 
   3.6850911149953833`*^9, 3.685093517657646*^9, 3.68509382505268*^9, 
   3.685094106332283*^9, 3.6850941478574038`*^9, 3.6850942321641006`*^9, 
   3.68509434246159*^9, 3.6850965616908073`*^9, 3.685105793935664*^9, 
   3.685106251930044*^9, 3.685106724057559*^9, 3.685291262073711*^9, 
   3.689330482078144*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"cf2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "10"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"cg2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"ca2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"c\[Phi]2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683462896885921*^9, 3.683462941496567*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqsexp2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "/.", 
      "sol0"}], "/.", "sol1"}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqsexp2b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
        "2"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",",
        "8"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",",
        "2"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.68346295201285*^9, 3.6834629530044394`*^9}, {
  3.683465323384304*^9, 3.6834653256817217`*^9}, {3.68346541095725*^9, 
  3.6834654376162653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sol11", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "eqsexp2b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", "c\[Phi]2"}], "]"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "//", "Simplify"}]}], ";", 
  RowBox[{"coef2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "eqsexp2b", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.",
      "sol11"}], "//", "Simplify"}]}], ";", 
  RowBox[{"sol12", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"coef2", "\[Equal]", "0"}], ",", "ca1"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    "Simplify"}]}], ";", 
  RowBox[{"sol13", "=", 
   RowBox[{
    RowBox[{"sol11", "/.", "sol12"}], "//", "Simplify"}]}], ";", 
  RowBox[{"coef3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "eqsexp2b", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"sol12", ",", "sol13"}], "]"}]}], "//", "Simplify"}]}], ";", 
  RowBox[{"sol14", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"coef3", "\[Equal]", "0"}], ",", "cg2"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    "Simplify"}]}], ";", 
  RowBox[{"sol15", "=", 
   RowBox[{
    RowBox[{"sol13", "/.", "sol14"}], "//", "Simplify"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{
    "eqsexp2b", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "/.", 
    
    RowBox[{"Join", "[", 
     RowBox[{"sol15", ",", "sol14", ",", "sol12"}], "]"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.683465425840819*^9, 3.683465669123294*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], ":", 
  " ", "\<\"Solve was unable to solve the system with inexact coefficients. \
The answer was obtained by solving a corresponding exact system and \
numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.683465626838546*^9, 3.683465648073781*^9}, 
   3.683539550469952*^9, 3.683540350124279*^9, 3.6835454529915247`*^9, 
   3.683545525123539*^9, 3.683546127742755*^9, {3.6835468818771133`*^9, 
   3.6835469117660427`*^9}, 3.6836309415455933`*^9, 3.683972729808926*^9, 
   3.683972837821697*^9, 3.6839729254798117`*^9, 3.684767242437455*^9, 
   3.684767425080309*^9, 3.6847676545665016`*^9, 3.6850911190523643`*^9, 
   3.685094351181925*^9, 3.6850965783705883`*^9, 3.685105809898451*^9, 
   3.685106266479498*^9, 3.685106739620023*^9, 3.685291266318919*^9, 
   3.689330486103511*^9}],

Cell[BoxData[
 RowBox[{"0``94.00461449531714", "+", 
  RowBox[{"0``94.57873788303819", " ", "ca2"}], "+", 
  RowBox[{"0``94.56028664855623", " ", "cf2"}]}]], "Output",
 CellChangeTimes->{{3.6834656268640337`*^9, 3.683465648079483*^9}, 
   3.6835395504785023`*^9, 3.6835403501293573`*^9, 3.683545452998685*^9, 
   3.6835455251328983`*^9, 3.6835461277514763`*^9, {3.683546881896359*^9, 
   3.683546911784431*^9}, 3.683630941546502*^9, 3.683972729823559*^9, 
   3.683972837822233*^9, 3.683972925499556*^9, 3.684767242437455*^9, 
   3.6847674260986843`*^9, 3.6847676545665016`*^9, 3.685091119054847*^9, 
   3.6850943511839256`*^9, 3.6850965783765917`*^9, 3.6851058099124827`*^9, 
   3.685106266487503*^9, 3.685106739643044*^9, 3.685291266320919*^9, 
   3.689330486104514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "eqsexp2b", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"sol15", ",", "sol14", ",", "sol12"}], "]"}]}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol16", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"coef5", "\[Equal]", "0"}], ",", "cf2"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol2", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"sol16", ",", 
       RowBox[{"sol15", "/.", "sol16"}], ",", 
       RowBox[{"sol14", "/.", "sol16"}], ",", "sol12"}], "]"}], "//", 
     "Simplify"}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6834656608814096`*^9, 3.683465707985173*^9}, {
  3.683546619847641*^9, 3.683546647080908*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"cf2", "\[Rule]", 
    RowBox[{
    "1.95635317431934173589063025470240622677898823691190868261339795329641737\
70329922231353824936073939541509949164516648`94.45370889538692", "-", 
     RowBox[{
     "1.9168099306634189671565226253877428761696081303008128198382403501204005\
477710125191035205011620856306159028135629143`94.45370889538692", " ", 
      "ca2"}]}]}], ",", 
   RowBox[{"c\[Phi]2", "\[Rule]", 
    RowBox[{
    "-", "0.999993666249173310816038110010338448554596516863868652111047206578\
546866291361688910880898275719440447714889720887`93.84833302229677"}]}], ",", 
   
   RowBox[{"cg2", "\[Rule]", 
    RowBox[{
    "0.00052169934307186426716816217387589947547961409269062393650698373138515\
4111530903858252709592553437350311850135463313894872206857994037`93.\
52186077914888", "+", 
     RowBox[{
     "0.0019168628954044015033320885726139221047153473534864966912459906521314\
7781504694156793837397999428923535633643026786401689456969923732`93.\
64353082064623", " ", "ca2"}]}]}], ",", 
   RowBox[{"ca1", "\[Rule]", 
    RowBox[{
    "-", "0.408250089857541030648707055385246545053504911590332701650727701594\
20729713346849302059784620827381870380775501385154336228570999954517`96.\
22992284631421"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683465708937669*^9, 3.6835395522576838`*^9, 3.683540351643076*^9, 
   3.683545454713027*^9, 3.6835455273599577`*^9, 3.683546129662179*^9, {
   3.683546881926663*^9, 3.683546911811686*^9}, 3.683630941631686*^9, 
   3.683972729852594*^9, 3.683972837849057*^9, 3.6839729255277987`*^9, 
   3.684767242437455*^9, 3.6847674278012624`*^9, 3.684767654582127*^9, 
   3.6850911223642015`*^9, 3.685094353134141*^9, 3.6850965784146614`*^9, 
   3.6851058099294806`*^9, 3.685106266494508*^9, 3.6851067397799106`*^9, 
   3.6852912663289385`*^9, 3.6893304861155586`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"cf2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    RowBox[{"cf3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "10"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "12"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"cg2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cg3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"ca2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"ca3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "10"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"c\[Phi]2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"c\[Phi]3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683465745383808*^9, 3.683465790666314*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqsexp3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "/.", 
       "sol0"}], "/.", "sol1"}], "/.", "sol2"}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqsexp3b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
        "6"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",",
        "10"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",",
        "6"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.683465821279518*^9, 3.683465826196104*^9}, {
  3.683465873471815*^9, 3.683465893256887*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"eqsexp3b", "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"ca2", ",", "cf3", ",", "cg3", ",", "c\[Phi]3"}], "}"}]}], 
      "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683465839355351*^9, 3.6834658997118473`*^9}, {
  3.683546658132766*^9, 3.68354667212663*^9}, {3.6850911825699577`*^9, 
  3.6850911953206625`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "ca2", "\[Rule]", 
    "1.90521561134592073683843692756247461119604079393684114976687759243623542\
15780317880255578511588456158680681297`86.06489608124919*^-6"}], ",", 
   RowBox[{"cf3", "\[Rule]", 
    RowBox[{
     RowBox[{
     "-", "0.39125952245932441339177693864341710490564580989789427510301809976\
61027279184506014600971181038797103346282849900923`89.42088132364194"}], "-", 
     
     RowBox[{
     "3.8336198613268379343130452507754857523392162606016256396764807002408010\
955420250382070410023241708696892719394301721`89.57239334706692", " ", 
      "ca3"}]}]}], ",", 
   RowBox[{"cg3", "\[Rule]", 
    RowBox[{
    "0.00052169169100153137793089953630608235832428895025511814749263976938146\
3946754929617262227803116121855860383002824`90.1058247436834", "+", 
     RowBox[{
     "0.0025558171938725353377761180968185628062871298046486622549946542028419\
704200625887572511653066586724916976155516468`89.98089380432766", " ", 
      "ca3"}]}]}], ",", 
   RowBox[{"c\[Phi]3", "\[Rule]", 
    RowBox[{
    "-", "0.666655332677425288140639635398914132144656843688195428613515259266\
4074700846906036683372982152197413296016484936553`89.78043974270255"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.683465862043627*^9, 3.683465900117424*^9, 3.683539568231749*^9, 
   3.683540365174651*^9, 3.6835454645729837`*^9, 3.683545542843767*^9, 
   3.683546145027647*^9, {3.683546882379355*^9, 3.6835469122754602`*^9}, 
   3.683630942287342*^9, 3.683972731044148*^9, 3.6839728389214363`*^9, 
   3.683972927323249*^9, 3.684767246284833*^9, 3.6847674353453074`*^9, 
   3.6847676556004715`*^9, 3.6850912025693235`*^9, 3.685094356863858*^9, 
   3.6850965817688203`*^9, 3.685105812969928*^9, 3.685106269429812*^9, 
   3.6851067424844575`*^9, 3.685291267162734*^9, 3.6893304867625575`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solexp", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"sol0", ",", 
     RowBox[{"sol1", "/.", "sol2"}], ",", 
     RowBox[{"sol2", "/.", "sol3"}], ",", "sol3"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6834660852706738`*^9, 3.683466145677018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"cf2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "10"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"cg2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"ca2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"c\[Phi]2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"fh", "[", "r", "]"}], ",", 
    RowBox[{"Gh", "[", "r", "]"}], ",", 
    RowBox[{"Ath", "[", "r", "]"}], ",", 
    RowBox[{"\[Phi]h", "[", "r", "]"}]}], "}"}], "/.", "solexp"}]}], "Input",
 CellChangeTimes->{{3.68346595911378*^9, 3.683465991896831*^9}, 
   3.683466106293023*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{
     "1.5650787832078439479397455535792128560423494191735701568371601259889318\
945879887624226614954703339649090207930459040792534461613469065814882864333132\
436721`120.", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "-", 
     RowBox[{
     "3.1301533926384881314706960296751533882506831254476603555396730729099445\
53272366481616532682687319874364567734476508321866028510208339589`111.\
12522778543683", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
     RowBox[{
     "1.9563495223831378530529238002761334815252081069090598268987322139601726\
679149934523625526516907091905259685533560993`91.79287000804729", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "10"],
      SeriesData[$CellContext`r, 1, {}, 4, 10, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     1.56507878320784394793974555357921285604234941917357015683716012598893189\
458798876242266149547033396490902079304590407925344616134690658148828643331324\
36721`120., 
      0, -3.130153392638488131470696029675153388250683125447660355539673072909\
944553272366481616532682687319874364567734476508321866028510208339589`111.\
12522778543683, 0, 
      1.9563495223831378530529238002761334815252081069090598268987322139601726\
679149934523625526516907091905259685533560993`91.79287000804729}, 4, 10, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
    "0.00052170734300495714939516737020290143635880683254876661264951353887039\
042704535520865899224940332769908913754622666255731120114256113054596990501472\
14724`119.14522665869704", "+", 
     RowBox[{
     "0.0005217062994692049571091877059578577500179178190132527322235074200339\
70891468957663198201962827627099691011581465233028353482581602171`96.\
22992284626446", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
     RowBox[{
     "0.0005217029951089774013766896305897875077491459267888418682336804800041\
334572493387529904359998993182607254221798812`91.21762337138527", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "6"],
      SeriesData[$CellContext`r, 1, {}, 0, 6, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     0.00052170734300495714939516737020290143635880683254876661264951353887039\
042704535520865899224940332769908913754622666255731120114256113054596990501472\
14724`119.14522665869704, 0, 
      0.0005217062994692049571091877059578577500179178190132527322235074200339\
70891468957663198201962827627099691011581465233028353482581602171`96.\
22992284626446, 0, 
      0.0005217029951089774013766896305897875077491459267888418682336804800041\
334572493387529904359998993182607254221798812`91.21762337138527}, 0, 6, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{
     "0.8165018128146702362924469280043995911326606972733754486214081514099240\
167247959211351142486421386094637928360821688368568677371910271318159674621685\
19793`118.8441979270311", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "2"]}], "-", 
     RowBox[{
     "0.4082500898575410306487070553852465450535049115903327016507277015942072\
9713346849302059784620827381870380775501385154336228570999954517`96.\
22992284631421", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     RowBox[{
     "1.9052156113459207368384369275624746111960407939368411497668775924362354\
215780317880255578511588456158680681297`86.06489608124919*^-6", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "8"],
      SeriesData[$CellContext`r, 1, {}, 2, 8, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     0.81650181281467023629244692800439959113266069727337544862140815140992401\
672479592113511424864213860946379283608216883685686773719102713181596746216851\
9793`118.8441979270311, 
      0, -0.408250089857541030648707055385246545053504911590332701650727701594\
20729713346849302059784620827381870380775501385154336228570999954517`96.\
22992284631421, 0, 
      1.9052156113459207368384369275624746111960407939368411497668775924362354\
215780317880255578511588456158680681297`86.06489608124919*^-6}, 2, 8, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
    "6.90773355532814477895097590608043700997557553248415172668520655599587900\
414158833865104634724344291346643066290501370180201999187934915678569832888245\
11815`120.", "-", 
     RowBox[{
     "1.9999979997669421123930277911709242603520582859783335499785340716662824\
263188420209075637443977324071157825222263244096778671546417721`111.\
29155932828289", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "2"]}], "-", 
     RowBox[{
     "0.9999936662491733108160381100103384485545965168638686521110472065785468\
66291361688910880898275719440447714889720887`93.84833302229677", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "6"],
      SeriesData[$CellContext`r, 1, {}, 0, 6, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     6.90773355532814477895097590608043700997557553248415172668520655599587900\
414158833865104634724344291346643066290501370180201999187934915678569832888245\
11815`120., 
      0, -1.999997999766942112393027791170924260352058285978333549978534071666\
2824263188420209075637443977324071157825222263244096778671546417721`111.\
29155932828289, 
      0, -0.999993666249173310816038110010338448554596516863868652111047206578\
546866291361688910880898275719440447714889720887`93.84833302229677}, 0, 6, 1],
    
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68346599272618*^9, {3.683466107242277*^9, 3.683466140366234*^9}, 
   3.683539599416132*^9, 3.683540379698029*^9, 3.683545558782559*^9, 
   3.683546154320381*^9, {3.683546882417692*^9, 3.683546912305667*^9}, 
   3.683630942426305*^9, 3.683972731086526*^9, 3.683972838955473*^9, 
   3.683972927357112*^9, 3.6847672463160877`*^9, 3.684767437415538*^9, 
   3.6847676556317463`*^9, 3.6850943630385284`*^9, 3.685096581881923*^9, 
   3.68510581298794*^9, 3.6851062694718423`*^9, 3.6851067426095552`*^9, 
   3.685291267192293*^9, 3.6893304867801275`*^9},
 Background->RGBColor[1, 0.9, 0.8]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NDSolve", "Subsubsection",
 CellChangeTimes->{{3.682628202575428*^9, 3.682628204732593*^9}, {
  3.682985081534309*^9, 3.682985091286105*^9}, {3.6835008806497283`*^9, 
  3.6835008820484695`*^9}}],

Cell["From the final set of eqs derived above:", "Text",
 CellChangeTimes->{{3.689329674609786*^9, 3.689329683393112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqssimple", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Atn", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Atn", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["fn", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["fn", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["G", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["G", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}]}], "}"}], "//", "Expand"}], "//", "Simplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.683501666730343*^9, 3.683501754843915*^9}, 
   3.684767273249482*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]h", "=", 
   RowBox[{"1", "-", 
    FractionBox["75", "10000"]}]}], ";"}]], "Input"],

Cell["These are the Boundary conditions for this case:", "Text",
 CellChangeTimes->{{3.689329687312942*^9, 3.689329697793213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"fh", "[", "r", "]"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", "1"}], ")"}], "^", "4"}]}], "/.", "solexp"}], "//",
      "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"AtBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Ath", "[", "r", "]"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", "1"}], ")"}], "^", "2"}]}], "/.", "solexp"}], "//",
      "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]BC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]h", "[", "r", "]"}], "/.", "solexp"}], "//", "Normal"}], 
    "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"fpBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fh", "[", "r", "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "-", "1"}], ")"}], "^", "4"}]}], ",", "r"}], "]"}], "/.",
       "solexp"}], "//", "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"AtpBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Ath", "[", "r", "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "-", "1"}], ")"}], "^", "2"}]}], ",", "r"}], "]"}], "/.",
       "solexp"}], "//", "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]pBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Phi]h", "[", "r", "]"}], ",", "r"}], "]"}], "/.", 
      "solexp"}], "//", "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"GBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Gh", "[", "r", "]"}], "/.", "solexp"}], "//", "Normal"}], 
    "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}]}], "Input",
 CellChangeTimes->{{3.683541120412137*^9, 3.6835411966026487`*^9}, {
  3.683546168204804*^9, 3.6835462215117493`*^9}}],

Cell[BoxData["1.\
564902718269520193647747440102810340475463912136117501709108127925350605940226\
023882854535872822052656222334259412151513624034368932398`100.19566585075687"]\
, "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.684767267735897*^9, 
   3.6847674466843996`*^9, 3.684767664084139*^9, 3.6850943827104807`*^9, 
   3.6850966086530037`*^9, 3.6851058389468966`*^9, 3.6851067994792395`*^9, 
   3.6852912749849777`*^9, 3.689330492871402*^9}],

Cell[BoxData["0.\
816478848747121777830743212434865573881342553264422979879764863763159776825464\
481308520426754493693678129179180905765266929627079628619`100.09610378957893"]\
, "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.684767267735897*^9, 
   3.6847674466843996`*^9, 3.684767664084139*^9, 3.6850943827104807`*^9, 
   3.6850966086530037`*^9, 3.6851058389468966`*^9, 3.6851067994792395`*^9, 
   3.6852912749849777`*^9, 3.6893304928744116`*^9}],

Cell[BoxData["6.\
907621052276615428840628869513313063031344231825787403783435856384237473690174\
459662358702963236448818011858096540577796481568210826779`103.18741922387989"]\
, "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.684767267735897*^9, 
   3.6847674466843996`*^9, 3.684767664084139*^9, 3.6850943827104807`*^9, 
   3.6850966086530037`*^9, 3.6851058389468966`*^9, 3.6851067994792395`*^9, 
   3.6852912749849777`*^9, 3.6893304928774195`*^9}],

Cell[BoxData["0.\
046948999549758300426933413636214334848510173093034496294637204483038110507708\
390672797128432710070043709503445213836410477293933106833`95.94580612008147"],\
 "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.684767267735897*^9, 
   3.6847674466843996`*^9, 3.684767664084139*^9, 3.6850943827104807`*^9, 
   3.6850966086530037`*^9, 3.6851058389468966`*^9, 3.6851067994792395`*^9, 
   3.6852912749849777`*^9, 3.689330492879423*^9}],

Cell[BoxData["0.\
006123751344648064115584364587363835860540897767461671684992496083681503519765\
880121396039050830978406726564348430408186853547514618583`95.2915483034182"], \
"Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.684767267735897*^9, 
   3.6847674466843996`*^9, 3.684767664084139*^9, 3.6850943827104807`*^9, 
   3.6850966086530037`*^9, 3.6851058389468966`*^9, 3.6851067994792395`*^9, 
   3.6852912749849777`*^9, 3.6893304928814287`*^9}],

Cell[BoxData["0.\
030001657485815927165857418931874506351412810171297211028028448467155337692619\
496986463493277481826383292493352271270141991282558974231`98.09823724013707"],\
 "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.684767267735897*^9, 
   3.6847674466843996`*^9, 3.684767664084139*^9, 3.6850943827104807`*^9, 
   3.6850966086530037`*^9, 3.6851058389468966`*^9, 3.6851067994792395`*^9, 
   3.6852912749849777`*^9, 3.6893304928834352`*^9}],

Cell[BoxData["0.\
000521736690635003175136003571054793600145244876663618142096021084870896981671\
078854605533046397538159044931849954651092699421676504539`99.64817695626289"],\
 "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.684767267735897*^9, 
   3.6847674466843996`*^9, 3.684767664084139*^9, 3.6850943827104807`*^9, 
   3.6850966086530037`*^9, 3.6851058389468966`*^9, 3.6851067994792395`*^9, 
   3.6852912749849777`*^9, 3.6893304928844376`*^9}]
}, Open  ]],

Cell["Now we integrate from the horizon to the boundary", "Text",
 CellChangeTimes->{{3.6893297036653357`*^9, 3.689329715601733*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"solm", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
          SuperscriptBox["r", "4"], " ", "\[Gamma]", " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["rp", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Atn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["Atn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
              "2"]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "16"}], " ", "\[Beta]", " ", "\[Delta]", " ", 
             RowBox[{"G", "[", "r", "]"}], " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"\[Delta]", " ", 
               RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                    ")"}]}], " ", 
                   RowBox[{"fn", "[", "r", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
                   RowBox[{
                    SuperscriptBox["fn", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
                RowBox[{"fn", "[", "r", "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Atn", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "\[Gamma]", " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["Atn", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"24", "-", 
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "\[Gamma]", " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{"8", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["Atn", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", "0"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          SuperscriptBox["r", "4"], " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["rp", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Atn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["Atn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
              "2"]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "5"], " ", 
          SuperscriptBox["r", "5"], " ", "\[Gamma]", " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["rp", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Atn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["Atn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
              "2"]}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"32", " ", "\[Beta]", " ", 
             RowBox[{"G", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                RowBox[{"Cosh", "[", 
                 RowBox[{"\[Delta]", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
                "\[Delta]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"\[Delta]", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
             RowBox[{"fn", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"32", " ", 
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
                SuperscriptBox["r", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                 ")"}], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Phi]", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["fn", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "8"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"8", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
                   SuperscriptBox["r", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["\[Phi]", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
                 ")"}]}], "+", 
               RowBox[{"8", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
                RowBox[{
                 SuperscriptBox["fn", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], 
          RowBox[{
           SuperscriptBox["G", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "2"]}]}], "\[Equal]", 
        "0"}], ",", 
       RowBox[{
        RowBox[{"fn", "[", "\[Epsilon]h", "]"}], "\[Equal]", "fBC"}], ",", 
       RowBox[{
        RowBox[{"Atn", "[", "\[Epsilon]h", "]"}], "\[Equal]", "AtBC"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "\[Epsilon]h", "]"}], "\[Equal]", "\[Phi]BC"}],
        ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["fn", "\[Prime]",
          MultilineFunction->None], "[", "\[Epsilon]h", "]"}], "\[Equal]", 
        "fpBC"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Atn", "\[Prime]",
          MultilineFunction->None], "[", "\[Epsilon]h", "]"}], "\[Equal]", 
        "AtpBC"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "\[Epsilon]h", "]"}], "\[Equal]", 
        "\[Phi]pBC"}], ",", 
       RowBox[{
        RowBox[{"G", "[", "\[Epsilon]h", "]"}], "\[Equal]", "GBC"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"fn", ",", "Atn", ",", "\[Phi]", ",", "G"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Epsilon]h", ",", "0"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6835008919589252`*^9, 3.6835009167801123`*^9}, 
   3.6835009966862893`*^9, {3.6835011694761*^9, 3.6835012179204955`*^9}, {
   3.683501292685239*^9, 3.683501304063984*^9}, {3.6835015006213694`*^9, 
   3.683501501108497*^9}, {3.6835015312651343`*^9, 3.6835015399520435`*^9}, {
   3.6835015715884857`*^9, 3.6835015893431196`*^9}, {3.683501887922593*^9, 
   3.6835019053865433`*^9}, {3.6835020461073995`*^9, 
   3.6835020744801903`*^9}, {3.6835023039436407`*^9, 3.683502311950193*^9}, 
   3.6835411422873163`*^9, {3.683541204296666*^9, 3.683541279668929*^9}, {
   3.683545574782873*^9, 3.683545635348016*^9}, {3.683546229230727*^9, 
   3.68354626590003*^9}, 3.6893303095872946`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], ":", 
  " ", "\<\"At \[NoBreak]\\!\\(\\*RowBox[{\\\"r\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.3731352627336652`*^-12\\\"}]\\)\[NoBreak], \
step size is effectively zero; singularity or stiff system suspected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", \
ButtonNote -> \\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6847674552766223`*^9, 3.6847676642221746`*^9, 
  3.68509439585449*^9, 3.685096664986528*^9, 3.68510588994053*^9, 
  3.6851068591424017`*^9, 3.6852912889324274`*^9, 3.68933049295767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Atn", "[", "r", "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "r"}], ")"}], "^", "2"}]}], "/.", "solm"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "\[Epsilon]h"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4", ",", "0.6", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.2", ",", "0.3", ",", "0.4"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6852914387599783`*^9, 3.6852914477592053`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1:eJwV0Wk0lYvbBnDJMc+hbGOllDqZypDhokTIdkSmVDoK0UEhoROxlVlKRCoN
pjJHlIxtHBJl3lskKsXez2PI/FZ/74d73ev35VrXWtfGv30Pn+bk4OB4sXr/
/z/7r91QVHfEcPvzTvs6LSYcI/mtzWY1EfRgwcBq1Ta2RZ0ys/txeUVw1+Ae
Jqh6HKLcs7YYCQjYtrCbiUOq29VWZtxwIp47TlWTCct8g/q5GX/8dtwt8VB1
1V/NeGdnIpGTMTFxbRsT7kFtsbE3aNj1foiyftXhvFZCmzSikHYqPjpHmYly
lcPiNueuYtr48e7mrUzI+7rIFpPRUG+LOsy3hYmpBT81b1YCDuZzyWZtZOIN
l1XB9MxNjA48CpqlMMFpZvTM3zwFap0mumGr3huj+XLufgqkRi8X8a86T4jy
39KhW/iqbxWrKM3EVanxsTW5qejoafphup4Jo21XZMSPpiPzhzxX0DomLnoF
bEopTUe731DDkjgTxQUe26V4M1B56GxJ6Krl1analIoMXPxUwvevGBMrujK2
m0QyoWg4IB8owsRzy4pYjdf3QH//j5y2ABNEQl5yufR9cHBG05/wM7Hl3Z3b
Wn73kaDu7CK3agsVY9u7wllI4lWw+83LRFWR8skH1Vnw4O9Qes7NRGrlj0v5
kg9RMiyTx16zuk9rYvmL1sfIacwwC11gwCS3hy078xjUaa+K3nkGdKIoyuGU
bGSu3Sihump545x0U+9srImffzj8gwFWVc3lbsEcpMh7/FKbYSA6j3WQbZ0L
2pbOSw9ZDNRfsxhS7MvHmXD/D5UjDJSfvi5F+5UPidAkqamPDOTu77Me3/oE
yXrxhsqrTvx9srEw6AkW8gMdbwwx4BIUnLtX+il+Wf79/CiTgUX3vHN2LgV4
8dVAo7qbAVVTbu7o0SIsyD7aVNTEwGPLFh9F/mIoK1ey/6MzQLGJ7q9SL4bE
YnnF6GsGuFz487+HF0Nu/Q6DdY2r/XV4crJFShBwkarqWbvalypgzlNUAr50
l/ZPzxnwDFmX1DZRihIhvmOSuQxUvd8sY3OqHDHKLKdYGgNDXVMjbcHlaNqQ
pmcVyQBnT02OSVI5BK00fgpHMHCoz0FD52U5Om2DNyaFMTDCjDNXEK2AgrPQ
wpUQBvg+zwaxqysgvaFZVsOPAef51z0x6yox+DMtttaZgf+jnEpsbHyB0+nq
I+k7GdD9vaM6pKkWWSHJvu5vBiBYF/PgjXQjjLTXWr87PIBb86pDO+l0HKs7
mGbQ0Y+MlfTAUqMW6KZFXPhl2o/ptzf1vs20otCG1jmY14emf2yO7wtqx9wD
RtK/An0ojWq4SBId+Jz28zLfmV4EVbi6Kne8Q2BTuV52SQ96EhvLvgl14ZR5
wr3xn91gUlkykZ7dyLN0MfqypxssC5Kj5VUPeN3FLXTOdqHmT7sU2eVeoCh0
wrjgPbQWwg0tD/cjSeyxXd3AO/jkiqTF3RzAPY7oZkGxd6AaunNnkwzM1zoy
lX06oCeWOu1xYBBz255KltW342ubcpw+7QNUqshb+9XeYK/3Fb2JoSFoWyzG
EWGtODSjn5Gv+BGVJ8PPnyZbUMH03BuzawT0ojVik17NSFddr6nCHIGqCi0n
+g0dH4LmOe1CPmE3V1doJ/U1/J/pHp9QHgX5qyCRt7oBoglngo50jaKvKZky
pFMPIec2D/NzYzCQtrrQXlGD45SksXy5zzA9G+xg3f8Swh00rZu1nyHp5d5U
sq8KdAUPMxuXL1DiPG9p0lOBzlOFY6E8XyF+3fbDBPUZdO8qOajmfkW4aH5V
pngpFv77fcTabhxyWTXi/dcLIfFNYOfi3DhOBl9w/SshH9rZXPWBKd+QIrKZ
dfljNoqPnPx4wug7Tu3vqGb/+RBXl4jerpHviJqdrKPw30Pp9RGHssQJ6IpW
qin2pWGsqTbNXXcSAap9u528biCAeFv0aGASQnxamTJTcfj80uGI/eAk7KuS
Duxoj4PttU8rvMOTKMiwi7DJi4OG4txBn7FJLKk5vPrkGocpG9kxHWISZ7xj
jol1x+KfCq/1HWtZQF3m06LqGLhf4glf3MUCJ7fM0uTda3DiN7aximLB2reJ
0pgTidQMZZmuayy41c9XR8ZGokdF+It9LAsT0lrOTj6RoFoOXnRNYiFngnLD
SCsS++IDs/zTWTD+NSf4uzkCKsJPyPRCFrqGNTYYsK5gRWxd4tdeFnZouubQ
D4TjrvSXtrCtbPDUNVD9vEJw2OX1+MI2Nn772EpN6oeA9/4DLr8dbFxS2l0f
LxKC80rHDV3V2AhaOtNgUhEMU9X+UqO9bAwIC+Re4wzGlEnr7TVUNt7P3Drt
/DgI+/wK3SMD2ah7W3Hb8I9ALJTFRa4EsdG2ub/q9ocAFMydyfIPYeMQRztL
ujwAUqFbmW5hbMTFrklNdgvAZNR9K5MYNujfuKTs6f5IuZO8+4+7bOiO8Ans
STiP8eZAzmt0NnKVTPzt9P3glX7l/e4WNhYjXCXjJf3A8k7IGm1l4/CjzN6x
IV9MiWYbGnayMct94Ox1E18sO/eEzDHYsHJ6sWAo5QNhUmPWjWRjPlfb6keb
N7TWT40ZUQjsz2qz7Q32QNX3lTJClsA/V7nP92t7QO8VT0SmAoGZ2GwHrXl3
GJ1UUFxUIrDznSyNP8AdFk+pLsWqBMxzI4oEA07jOAp75A4QiMntyAqJcsNV
D6+mZV8CiSF83XIfTqDvZ1dlyHkCnrEbfty9cAJbU/SeLAcQ4C7r16wXO4Hm
esGk5WACE3+oyk+aHwc3pdhxOZJA0RY/rsEGF1xtn51cSiPw5bnYnq3vnND3
t8twcAaB/BWzqdYAJ2xdor9byiRQ032HU5TihOYtqRVLDwg8OvFVN9LdEdxh
OmFLTwnYC9RRuXkcEKX+r/hS3Wp/xYeDV9zt0NPyhSu4kcCbLqm4Q5J2UDpO
XVikE9h+tqn5Bd0W9FiFD4utBKa1BD6FbrEF1+eG7MVuAuPenbz3CRvQUrl1
F8cJ8IQ6aLcYWqNnp++OixMEblTx+JeUUKH0ul9ukUXgUnYb5eNmKuhkHufi
NAGK26bXgsJW4DK3bF9YWd2jooTrybQFaCtJJxZESEyFt1yfmjOF2Ih9XYM4
Cd8Aa1cFH1Pco8spxEuSyJVXlvw8fgCVCU+HFWVIDLzVNlMdMcGEQssxi60k
NjsR/m/H9iGIK7FGYjuJ5FdRkgWe+8D13U7u4w4SxdE+bxRJY8iXjX7wVyfh
7mcX285hDBuTX0fv6pPwK6f1HfUxxPC2pmoPkLAs9E0ITTaAl1C8jMY+EssO
VQ0tlfqg9UkPNpuR0Hnyq/WLkB6qPPc4Tx0mIa8W6a47og35hLOO+8+QUD/6
rNZUTgNPz2lWCZ0lcWvP8EMNf3Xo2C+vH/AhcW6e84ZluxpsFKL7zwaQYG2U
OcEnqgpa6SP71DAS76fveWy3VIFYqtdz1wgSD+Mng7u3b8e9EHWpHVEkft4l
1g0Ib0Pl/rreulgSe7wviE9PbsFEL9Pu+63VvPJP191mNiLo5YPyZ7dJrIwb
7h1buxFc9z0lLt8hkaJJa6uRUYSc53y3+AMSY0UvbvLUyOLJoRrNoUck5tsj
MobFZaClTruZm0OCY8m13jtQGn8ti9nqF5BoD0Z5nqsUhoYHyriLSXiuGOQ4
fpeA1+v74u9LSbBHrX7XXl4HWvyfXacrSTw6qb+tuFMUYud+qKu9JHG8+fuu
81IiuHekOnn5FYlawy+OszmCUNkbMU2vI3HKZ3ji01/8qJQ3t0lqJHEs/BaH
oQQv/gfbcK+z
     "]]}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 18],
  GridLines->{{0.2, 0.4, 0.6, 0.8}, {0.1, 0.2, 0.3, 0.4}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685291433366093*^9, 3.6852914486484327`*^9}, 
   3.6893304929907956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "solm"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0.01", ",", "\[Epsilon]h"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4", ",", "0.6", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "4", ",", "6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.685291468824806*^9, 3.6852914915873795`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1: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
     "]]}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 18],
  GridLines->{{0.2, 0.4, 0.6, 0.8}, {0, 2, 4, 6}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685291465299369*^9, 3.6852914922028213`*^9}, 
   3.6893304930158615`*^9}]
}, Open  ]],

Cell["\<\
The solution at the boundary needs to be rescaled by a parameter, which is \
given by\
\>", "Text",
 CellChangeTimes->{{3.6893297342892666`*^9, 3.689329754193317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]b", "=", "0.0000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"4", 
        SuperscriptBox["r", "2"]}], 
       SuperscriptBox["rp", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"fn", "[", "r", "]"}], 
        RowBox[{"G", "[", "r", "]"}]}], 
       SuperscriptBox[
        RowBox[{"g", "[", "r", "]"}], "2"]]}], "/.", 
     RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", 
    RowBox[{"solm", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6836311602778397`*^9, 3.683631162702759*^9}, {
  3.683632309935358*^9, 3.683632311043631*^9}, {3.683879105805613*^9, 
  3.6838791385872507`*^9}, {3.689330355809862*^9, 3.689330356050598*^9}}],

Cell[BoxData["0.01427723491055543`"], "Output",
 CellChangeTimes->{
  3.683631163016198*^9, 3.683632311919469*^9, {3.6838791117068243`*^9, 
   3.683879139643214*^9}, 3.683972733024457*^9, 3.683972840982106*^9, 
   3.6839729389316883`*^9, 3.684767666427532*^9, 3.6850944224126496`*^9, 
   3.685096667289092*^9, 3.685105892381531*^9, 3.685106861493988*^9, 
   3.6852912897541304`*^9, 3.6893304930659995`*^9}]
}, Open  ]],

Cell["\<\
And we can check that we obtain AdS asymptotics, as expected:\
\>", "Text",
 CellChangeTimes->{{3.689329757889497*^9, 3.689329775089388*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", 
      SuperscriptBox["r", "2"]}], 
     RowBox[{
      SuperscriptBox["\[Lambda]", "2"], 
      SuperscriptBox["rp", "2"]}]], 
    FractionBox[
     RowBox[{
      RowBox[{"fn", "[", "r", "]"}], 
      RowBox[{"G", "[", "r", "]"}]}], 
     SuperscriptBox[
      RowBox[{"g", "[", "r", "]"}], "2"]]}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", 
  "solm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["r", "2"], 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "2"], 
      RowBox[{"G", "[", "r", "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"g", "[", "r", "]"}], "2"], 
      RowBox[{"fn", "[", "r", "]"}]}]]}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", 
  "solm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", 
      SuperscriptBox["r", "2"]}], 
     SuperscriptBox["rp", "2"]], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"g", "[", "r", "]"}], "2"]]}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", "solm"}]}], "Input",
 CellChangeTimes->{{3.683502530601581*^9, 3.6835026423985167`*^9}, {
   3.683502675071043*^9, 3.683502688512497*^9}, {3.6835027513728456`*^9, 
   3.683502760353875*^9}, {3.683502799335139*^9, 3.6835028370012007`*^9}, {
   3.6835028768208857`*^9, 3.683502882053205*^9}, {3.6835039947759624`*^9, 
   3.683504020473978*^9}, 3.6835237788912983`*^9, {3.683523899233607*^9, 
   3.6835238996363945`*^9}, {3.6835253087377996`*^9, 3.683525308875884*^9}, 
   3.683632340511036*^9, {3.689330353617532*^9, 3.689330354017153*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"{", "1.`", "}"}]], "Output",
 CellChangeTimes->{
  3.6835025428067055`*^9, {3.683502574934665*^9, 3.683502644506261*^9}, 
   3.683502689519638*^9, {3.68350275815197*^9, 3.6835027610594244`*^9}, {
   3.6835028005315022`*^9, 3.683502837593258*^9}, {3.6835028785617094`*^9, 
   3.6835028826583652`*^9}, {3.6835039899322643`*^9, 3.683504021323454*^9}, 
   3.683523780443833*^9, 3.6835239010819225`*^9, 3.6835253099239335`*^9, 
   3.683536397180172*^9, 3.683546883847045*^9, 3.6835469148431473`*^9, 
   3.6836309447428303`*^9, 3.6836321775555468`*^9, 3.6836323418214273`*^9, 
   3.6838791406910686`*^9, 3.6839727330588493`*^9, 3.683972841014535*^9, 
   3.683972938942863*^9, 3.6847676665278*^9, 3.6850944241018515`*^9, 
   3.685096667330904*^9, 3.6851058924115615`*^9, 3.685106861522522*^9, 
   3.685291289762136*^9, 3.689330493076028*^9},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"{", "0.9999995009728807`", "}"}]], "Output",
 CellChangeTimes->{
  3.6835025428067055`*^9, {3.683502574934665*^9, 3.683502644506261*^9}, 
   3.683502689519638*^9, {3.68350275815197*^9, 3.6835027610594244`*^9}, {
   3.6835028005315022`*^9, 3.683502837593258*^9}, {3.6835028785617094`*^9, 
   3.6835028826583652`*^9}, {3.6835039899322643`*^9, 3.683504021323454*^9}, 
   3.683523780443833*^9, 3.6835239010819225`*^9, 3.6835253099239335`*^9, 
   3.683536397180172*^9, 3.683546883847045*^9, 3.6835469148431473`*^9, 
   3.6836309447428303`*^9, 3.6836321775555468`*^9, 3.6836323418214273`*^9, 
   3.6838791406910686`*^9, 3.6839727330588493`*^9, 3.683972841014535*^9, 
   3.683972938942863*^9, 3.6847676665278*^9, 3.6850944241018515`*^9, 
   3.685096667330904*^9, 3.6851058924115615`*^9, 3.685106861522522*^9, 
   3.685291289762136*^9, 3.689330493080035*^9},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"{", "1.0000001009727915`", "}"}]], "Output",
 CellChangeTimes->{
  3.6835025428067055`*^9, {3.683502574934665*^9, 3.683502644506261*^9}, 
   3.683502689519638*^9, {3.68350275815197*^9, 3.6835027610594244`*^9}, {
   3.6835028005315022`*^9, 3.683502837593258*^9}, {3.6835028785617094`*^9, 
   3.6835028826583652`*^9}, {3.6835039899322643`*^9, 3.683504021323454*^9}, 
   3.683523780443833*^9, 3.6835239010819225`*^9, 3.6835253099239335`*^9, 
   3.683536397180172*^9, 3.683546883847045*^9, 3.6835469148431473`*^9, 
   3.6836309447428303`*^9, 3.6836321775555468`*^9, 3.6836323418214273`*^9, 
   3.6838791406910686`*^9, 3.6839727330588493`*^9, 3.683972841014535*^9, 
   3.683972938942863*^9, 3.6847676665278*^9, 3.6850944241018515`*^9, 
   3.685096667330904*^9, 3.6851058924115615`*^9, 3.685106861522522*^9, 
   3.685291289762136*^9, 3.6893304930820403`*^9},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[Gamma] = ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"-", 
    SqrtBox["3"]}],
   FontWeight->"Bold"]],
  CellChangeTimes->{{3.6835016686130066`*^9, 3.683501693239908*^9}, {
    3.6835017316366673`*^9, 3.683501756209921*^9}, 3.683536340367855*^9, 
    3.683539624101475*^9, 3.683540390137639*^9, 3.6835455637434473`*^9, 
    3.683546157572565*^9, 3.6835468833078833`*^9, 3.6835469134603148`*^9, 
    3.683630943368526*^9, 3.6839727319664516`*^9, 3.6839728400128736`*^9, 
    3.683972938349395*^9, 3.6852888708348455`*^9, 3.685291571571175*^9, 
    3.686309124033318*^9, 3.6863095187650013`*^9, 3.6863111687127132`*^9, 
    3.6863113223642764`*^9}],
 ", \[Delta] = ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    RowBox[{"-", "1"}], "/", 
    SqrtBox["3"]}],
   FontWeight->"Bold"]],
  CellChangeTimes->{{3.6835016686130066`*^9, 3.683501693239908*^9}, {
    3.6835017316366673`*^9, 3.683501756209921*^9}, 3.683536340367855*^9, 
    3.683539624101475*^9, 3.683540390137639*^9, 3.6835455637434473`*^9, 
    3.683546157572565*^9, 3.6835468833078833`*^9, 3.6835469134603148`*^9, 
    3.683630943368526*^9, 3.6839727319664516`*^9, 3.6839728400128736`*^9, 
    3.683972938349395*^9, 3.6852888708348455`*^9, 3.685291571571175*^9, 
    3.686309124033318*^9, 3.6863095187650013`*^9, 3.6863111687127132`*^9, 
    3.6863113223642764`*^9}],
 " case"
}], "Subsection",
 CellChangeTimes->{{3.63984465219278*^9, 3.639844654825638*^9}, {
  3.68262818287681*^9, 3.682628186922513*^9}, {3.6835467342306433`*^9, 
  3.6835467373864727`*^9}, {3.689324216497491*^9, 3.6893242173281045`*^9}, {
  3.6893255905947976`*^9, 3.6893256176327524`*^9}, {3.6893257785078125`*^9, 
  3.6893258160837684`*^9}, {3.689330167569809*^9, 3.68933017092943*^9}}],

Cell["\<\
This is the choice of coefficients for this section.
\[Epsilon] is just there to improve performance.\
\>", "Text",
 CellChangeTimes->{{3.6893258389928665`*^9, 3.689325868656777*^9}, {
  3.6893259523375115`*^9, 3.689325974816899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"1", "/", "1000000"}]}], ";", 
  RowBox[{"\[Gamma]0", "=", 
   RowBox[{"-", 
    SqrtBox["3"]}]}], ";", 
  RowBox[{"\[Delta]0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     SqrtBox["3"]}], "+", "\[Epsilon]"}]}], ";", 
  RowBox[{"B0", "=", "100"}], ";", 
  RowBox[{"Q0", "=", "1"}], ";", 
  RowBox[{"\[Beta]0", "=", 
   RowBox[{
    RowBox[{"-", "3"}], "/", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683629795615467*^9, 3.683629801061123*^9}, {
  3.683972704311513*^9, 3.6839727164343643`*^9}, {3.683972817158331*^9, 
  3.683972817949442*^9}, {3.68397289618172*^9, 3.683972907627047*^9}, {
  3.6893259772203274`*^9, 3.689325983394212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"prec", "=", "60"}], ";"}]], "Input",
 CellChangeTimes->{{3.6834609529679003`*^9, 3.683460955474189*^9}, 
   3.6835363229021053`*^9, {3.683537756298938*^9, 3.68353775682097*^9}, {
   3.6850942734070134`*^9, 3.6850942738300867`*^9}, 3.689324226032526*^9}],

Cell[CellGroupData[{

Cell["Bdry conditions", "Subsubsection",
 CellChangeTimes->{{3.682628202575428*^9, 3.682628204732593*^9}, {
  3.682985081534309*^9, 3.682985083101622*^9}, {3.683452015458109*^9, 
  3.6834520203724327`*^9}, {3.683539896831193*^9, 3.683539897392523*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Gamma]", ",", "\[Delta]", ",", "B", ",", "Q", ",", "rp"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.683336239375785*^9, 3.683336252592824*^9}, {
  3.6834525947567463`*^9, 3.683452595196653*^9}}],

Cell["\<\
Here we check the result obtained from the attractor equations, and find the \
BC that we need to impose to our ansatz.
Notice that for the extremal case, the expansion of f[r] starts at the 4th \
power, like it happened in the RN solution.\
\>", "Text",
 CellChangeTimes->{{3.6833624131671333`*^9, 3.683362515094975*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "6"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "2"]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "4"]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6826191990829983`*^9, 3.682619218600519*^9}, {
   3.6826192893847837`*^9, 3.682619293623053*^9}, {3.682619455429295*^9, 
   3.6826194808968487`*^9}, 3.6826195827695*^9, {3.682620023332851*^9, 
   3.682620044116284*^9}, {3.6826260178281*^9, 3.68262601883239*^9}, {
   3.683031436290341*^9, 3.683031490261662*^9}, {3.68328491398149*^9, 
   3.68328491578511*^9}, {3.6832853293549128`*^9, 3.683285335479884*^9}, {
   3.683285974051516*^9, 3.6832859757669992`*^9}, {3.68328621891416*^9, 
   3.683286220186427*^9}, {3.6833627591960917`*^9, 3.683362770833465*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdS2xR2cond", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cf", " ", "cg", " ", 
      SuperscriptBox["rp", "2"]}], "-", 
     FractionBox["cg", "cf"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683461892662215*^9, 3.6834619119828672`*^9}, 
   3.6834621003153257`*^9}],

Cell["\<\
We have solutions for v and w. Let\[CloseCurlyQuote]s see if they match what \
we get from plugging in that expansion into our EOM.\
\>", "Text",
 CellChangeTimes->{{3.683362849865858*^9, 3.683362894741521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqsexp0", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6834516904132032`*^9, 3.683451703837459*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["rp", "2"], " ", "\[Beta]", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["B", "2"], " ", 
            SuperscriptBox["cg", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["ca", "2"], " ", 
            SuperscriptBox["rp", "2"]}]}], ")"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
        RowBox[{"8", " ", 
         SuperscriptBox["cg", "2"], " ", 
         SuperscriptBox["rp", "2"]}]]}], ")"}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "2"],
      SeriesData[$CellContext`r, 1, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     1, {(((-2) $CellContext`rp^2) $CellContext`\[Beta]) 
       Cosh[$CellContext`c\[Phi] $CellContext`\[Delta]] + (((
          Rational[-1, 
            8] $CellContext`cg^(-2)) $CellContext`rp^(-2)) ($CellContext`B^2 \
$CellContext`cg^2 + $CellContext`ca^2 $CellContext`rp^2)) 
       Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]]}, 0, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", "-", "1"}], "]"}], "0"],
    SeriesData[$CellContext`r, 1, {}, 0, 0, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cf", " ", 
         SuperscriptBox["rp", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"cf", "+", 
           RowBox[{"2", " ", "cg", " ", "\[Beta]", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"cf", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox["cg", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["ca", "2"], " ", 
             SuperscriptBox["rp", "2"]}]}], ")"}], " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
         RowBox[{"8", " ", "cg", " ", 
          SuperscriptBox["rp", "2"]}]]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "6"],
      SeriesData[$CellContext`r, 1, {}, 4, 6, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     1, {($CellContext`cf $CellContext`rp^2) ($CellContext`cf + ((
           2 $CellContext`cg) $CellContext`\[Beta]) 
         Cosh[$CellContext`c\[Phi] $CellContext`\[Delta]]) + ((((
           Rational[-1, 
             8] $CellContext`cf)/$CellContext`cg) $CellContext`rp^(-2)) \
($CellContext`B^2 $CellContext`cg^2 + $CellContext`ca^2 $CellContext`rp^2)) 
       Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]]}, 4, 6, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "8"}], "-", 
       FractionBox[
        RowBox[{"16", " ", "cg", " ", "\[Beta]", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "cf"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["B", "2"], " ", 
            SuperscriptBox["cg", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["ca", "2"], " ", 
            SuperscriptBox["rp", "2"]}]}], ")"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
        RowBox[{"cf", " ", "cg", " ", 
         SuperscriptBox["rp", "4"]}]]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "-", "1"}], ")"}], "2"]}]], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "0"],
      SeriesData[$CellContext`r, 1, {}, -2, 0, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     Rational[1, 
        2] (-8 - (((16/$CellContext`cf) $CellContext`cg) $CellContext`\[Beta])
         Cosh[$CellContext`c\[Phi] $CellContext`\[Delta]] + \
((($CellContext`cf^(-1)/$CellContext`cg) $CellContext`rp^(-4)) \
($CellContext`B^2 $CellContext`cg^2 + $CellContext`ca^2 $CellContext`rp^2)) 
        Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]])}, -2, 0, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", "\[Beta]", " ", "\[Delta]", " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["B", "2"], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["ca", "2"], " ", 
             SuperscriptBox["rp", "2"]}], 
            SuperscriptBox["cg", "2"]]}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
         RowBox[{"Tanh", "[", 
          RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}], 
        RowBox[{"4", " ", 
         SuperscriptBox["rp", "4"]}]]}], ")"}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "2"],
      SeriesData[$CellContext`r, 1, {}, 0, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 
     1, {(((-4) $CellContext`\[Beta]) $CellContext`\[Delta]) 
       Sinh[$CellContext`c\[Phi] $CellContext`\[Delta]] + ((((
           Rational[
            1, 4] $CellContext`rp^(-4)) ($CellContext`B^2 - \
($CellContext`ca^2 $CellContext`cg^(-2)) $CellContext`rp^2)) $CellContext`\
\[Gamma]) Sech[$CellContext`c\[Phi] $CellContext`\[Gamma]]) 
       Tanh[$CellContext`c\[Phi] $CellContext`\[Gamma]]}, 0, 2, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68329540300939*^9, 3.683329627459629*^9, {3.683451681192114*^9, 
   3.683451704292131*^9}, 3.683458553677826*^9, 3.6834610538609877`*^9, 
   3.683461093768413*^9, 3.683461953304493*^9, 3.6834622182417517`*^9, 
   3.683464834606646*^9, 3.683537778308454*^9, 3.6835395128719*^9, 
   3.683540225141984*^9, 3.683545417272458*^9, 3.683545501192215*^9, 
   3.683546099764945*^9, {3.683546879773863*^9, 3.683546909475985*^9}, 
   3.683630938822303*^9, 3.6839727270948887`*^9, 3.683972835117325*^9, 
   3.68397292067686*^9, 3.685091020747882*^9, 3.6852888289494066`*^9, 
   3.685291540639804*^9, 3.6863090839281874`*^9, 3.686309486581993*^9, 
   3.68631113938206*^9, 3.686311292266591*^9, 3.6893273472861996`*^9}]
}, Open  ]],

Cell["\<\
Replacing Cosh, Sinh... by the appropriate exponentials (for large c\[Phi]), \
and adding an extra condition for having AdS2 x R2 in the IR...\
\>", "Text",
 CellChangeTimes->{{3.6832900177302027`*^9, 3.6832900527770576`*^9}, {
  3.683362909416469*^9, 3.683362968150182*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol0a", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "eqsexp0", "]"}], ",", "AdS2xR2cond"}], "]"}],
        "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"ca", ",", "cf", ",", "cg", ",", "B"}], "}"}]}], "]"}], "]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.6833629784834423`*^9, 3.683362997818604*^9}, {
   3.6834517140464163`*^9, 3.683451764145718*^9}, 3.68345179853874*^9, {
   3.683458533131317*^9, 3.683458535212371*^9}, 3.683461041909955*^9, 
   3.68346108299785*^9, {3.683461929519169*^9, 3.683461935206012*^9}, 
   3.6834621284075403`*^9, 3.683462204898849*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ca", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"Sech", "[", 
        RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Delta]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "-", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}]}]]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox["\[Beta]"], " ", 
       SqrtBox["\[Gamma]"], " ", 
       SqrtBox[
        RowBox[{"Sech", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]], " ", 
       SqrtBox[
        RowBox[{"Tanh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]]}]]}]}], ",", 
   RowBox[{"cf", "\[Rule]", 
    FractionBox["1", "rp"]}], ",", 
   RowBox[{"cg", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"Sech", "[", 
       RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], 
      RowBox[{"4", " ", "rp", " ", "\[Beta]"}]]}]}], ",", 
   RowBox[{"B", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["rp", "4"], " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "-", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}], " ", 
            RowBox[{"Tanh", "[", 
             RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]}]}], ")"}]}]]}], 
      RowBox[{
       SqrtBox["\[Gamma]"], " ", 
       SqrtBox[
        RowBox[{"Sech", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]], " ", 
       SqrtBox[
        RowBox[{"Tanh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}]]}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.683458554503189*^9, {3.683461052239493*^9, 3.683461057510405*^9}, {
   3.683461088408986*^9, 3.683461094504155*^9}, 3.683461977160429*^9, {
   3.683462103691766*^9, 3.683462129611136*^9}, 3.683462219276874*^9, 
   3.683464837154245*^9, 3.683537830893412*^9, 3.68353951420152*^9, 
   3.68354022612083*^9, 3.683545418294477*^9, 3.683545502600203*^9, 
   3.683546101026785*^9, {3.6835468807418423`*^9, 3.683546910400631*^9}, 
   3.683630939882032*^9, 3.683972728030966*^9, 3.68397283603701*^9, 
   3.683972921600945*^9, 3.685091022182827*^9, 3.685288831127452*^9, 
   3.685291542216593*^9, 3.686309085542834*^9, 3.686309488079636*^9, 
   3.686311140937651*^9, 3.6863112937819724`*^9, 3.6893273485919137`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", "\[Gamma]0"}], ";", 
  RowBox[{"\[Delta]", "=", "\[Delta]0"}], ";", 
  RowBox[{"B", "=", "B0"}], ";", 
  RowBox[{"Q", "=", "Q0"}], ";", 
  RowBox[{"\[Beta]", "=", "\[Beta]0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rp", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        SuperscriptBox["B", "2"]}], 
       RowBox[{"2", " ", "\[Beta]", 
        RowBox[{"(", 
         RowBox[{"\[Delta]", "-", "\[Gamma]"}], ")"}]}]], ")"}], 
     FractionBox["1", "4"]], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Q", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", "\[Delta]"}], ")"}]}], 
       RowBox[{
        SuperscriptBox["B", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "+", "\[Delta]"}], ")"}]}]], ")"}], 
     FractionBox[
      RowBox[{"\[Delta]", "+", "\[Gamma]"}], 
      RowBox[{"8", " ", "\[Gamma]"}]]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6834525832801*^9, 3.6834525842678337`*^9}, {
   3.683458563767395*^9, 3.683458585623329*^9}, {3.6835377329177237`*^9, 
   3.683537734811674*^9}, {3.683538223690406*^9, 3.683538225153145*^9}, {
   3.683540198536656*^9, 3.683540199118517*^9}, 3.683546722046295*^9, {
   3.68354680005637*^9, 3.683546816474186*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["B", "2"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["rp", "4"], " ", "\[Beta]", " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "+", 
       RowBox[{"\[Delta]", " ", 
        RowBox[{"Coth", "[", 
         RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"c\[Phi]", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6835378462201023`*^9, 3.683537859997733*^9}, {
   3.6835379047351522`*^9, 3.683537907309964*^9}, {3.683538234360202*^9, 
   3.683538236065577*^9}, 3.6893273618755894`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVz3s0lHkYB/B33rm8Q+ooU6tJjkubKW2xupAz9aRoydQUu3TZzTUsGwq7
ZA/VlMqs7KzkZEIRKaXLuO2Ymd+4zXUpl9gm2lW5baUY2iXs2x/P+Z7POd8/
vo9tSOy+cBzDMB55n5LtKvsUcLPsKr96qx5VLZpuLSId+J9Gq96iR/w3rvnb
KBjYXfljmYGrRxnXJS6ncQzqi7kec+56ZDSrCGPQMbA8byz0dNWj1r+vtJiZ
YjD7/Js8rZMencz86cJSFgYM9THvKls9GupzWeTCwaB/oNPMjKpHe1aeaVD5
YYB97PbiynXIQ2e1PDkVgyHPp1LshA6xXz6x/q4Eg67kWmuHjTqUeTVaWdKG
QeimHThzSIsyJF4LmP9ikJb0KEyRr0VWMR+n9fYUCBvMz3b11KLcy53Zzbsp
EES3MKx9rUH5NuNtT5MoIJlbc4R3SYPcfF5X7r1OgVn/o6a1X2pQ6GPHza+0
FHA/eHAypF2Njul/ia4Yo8DidPVaaawasSO13K7lOLwdce+Qz6kQL5j3O9sL
hz4pOh0uUqGl07e6lfE4NFjoJvlLVEjLdBSLxTj41QmFBbktiJHw3jSnCQcn
5+2ZdHYLMqSJ2G9GcbAe+jY+V9iM3IeTO0MsqZB16rEsFG9G68fd123eQQVv
fnqqKLwJLYq3cfaMpcLO+e0xVk2NKNV3V2/MZSrgTMWGpJWNKE3NXz3ZQAVe
K9tw6ngDmn9dbCv+hwqyF4Ga801KlD5qihItaNCpLKBvW6hEwl6/uXtbaJBc
OT1Q4YmQ/aoXQ8wIGticTOdmzsiR32Le8QYRDXCpiXDWTYYiE/8sqZTRgKZL
9jGLkiITl4r0ulc0mOoNirMprkPbf90/s2IhHd6NmDhVF9YgJo+34o4bHS5E
KZtay6rQg9TQschgOqQs+G3PieKHaMLXP/iskA5fjU8lUPffR40pmSlIQof6
bG6lo+tdtNr76vpDf9HB/H5/v519OVqeOJHHMmGA74G6cwdXl6AJVlwJ5syA
2rbAjAD7AnTk62b+7kMMKOJ0W5deFKGQ8aCyWgEDwOJ21LapVPTBubtAcI/0
Le7nrd8nQfzLWK7AwACkEyeMPRFBknH32SIqAe/eb7Q/1lQIrBvMOOt1BDCd
Kkyy3Mpgy0MmrS6AgKKdy3pUEXeBt8Fxa0YaAYfOOWjw/gcwEcBZVnOLgHo6
29TfvAY4PdHXqB0ECCZq8aiVUhh0MYhqSD+yP2tp4SaF0os+guhO0ocdhtEu
KazYuSqio4uAMP6gzCFeCjbVA2uKewjIUR71sauXgmVOcK1HH2l+eZ5uXz0Q
/IC2k8Nk/2ePA8ZTMmi53YI2jBDwLGuJx2e5MhAQGx8Mk2b1Wcxwy2WAK1iX
9r4mIGF94Whumwxmv2g/YDtKgPGHnGdJVnKYnMcbQEYC4rT7T49Wy6Eqor47
YYL8x/vC1B6tHBIaHTWcSXKvnc9eSa8cxlJMK7I/ENAzmFt0jqaAt8Oq+KAp
AszlXs8O71PAHc9NoaxpAmjv28Ofhysg5lqpv5o054ZTV0iyAkYCz2xymiHg
ZqkgMrFIAeUSI+cl6c6w+Vk0iQIizcPYebME8M8IxZdVCnCI6ZjnO0eAf6ku
Z61BAQMqj5k50uKsnB81bxXwPy+rRXg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{2, 3}, {-14463.42433520018, 8174.78698090059}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.683537847100615*^9, 3.683537860868246*^9}, 
   3.6835379079588623`*^9, {3.683538229520266*^9, 3.6835382365888433`*^9}, 
   3.683540204206168*^9, 3.6835402392663383`*^9, 3.683540322079054*^9, 
   3.683545420707947*^9, 3.683546103447171*^9, {3.683546880836499*^9, 
   3.68354691048759*^9}, 3.68363094016518*^9, 3.683972728126704*^9, 
   3.683972836123343*^9, 3.683972921689389*^9, 3.685091023077419*^9, 
   3.685288832279289*^9, 3.6852915432174797`*^9, 3.6863090867897606`*^9, 
   3.6863094890923853`*^9, 3.686311141847525*^9, 3.68631129464962*^9, {
   3.689327352167665*^9, 3.6893273622120743`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol0\[Phi]", "=", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", " ", 
       SuperscriptBox["B", "2"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["rp", "4"], " ", "\[Beta]", " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], " ", 
          RowBox[{"Cosh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}], "+", 
         RowBox[{"\[Delta]", " ", 
          RowBox[{"Coth", "[", 
           RowBox[{"c\[Phi]", " ", "\[Gamma]"}], "]"}], " ", 
          RowBox[{"Sinh", "[", 
           RowBox[{"c\[Phi]", " ", "\[Delta]"}], "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"c\[Phi]", ",", "2.8"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "prec"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol0", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sol0a", "\[LeftDoubleBracket]", 
         RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], "/.", 
        "sol0\[Phi]"}], ",", "sol0\[Phi]"}], "]"}], ",", "prec"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683452151209835*^9, 3.6834521839920597`*^9}, 
   3.68345256083182*^9, {3.683452719370914*^9, 3.68345273061279*^9}, {
   3.683460941133319*^9, 3.6834609769698877`*^9}, {3.683461582115798*^9, 
   3.683461582817834*^9}, {3.6834622356551037`*^9, 3.683462252182148*^9}, {
   3.689327366529539*^9, 3.6893273667220545`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "8"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "4"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "4"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683330885465488*^9, 3.683330936201069*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqsexp1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "/.", 
     "sol0"}], "//", "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             ",", "2"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
             ",", "0"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
             ",", "6"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}],
             ",", "0"}], "]"}], ",", 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{
            "eqsexp1", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
             ",", "2"}], "]"}]}], "}"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"cf1", ",", "cg1", ",", "c\[Phi]1"}], "}"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.68346160320432*^9, 3.68346160689494*^9}, {
  3.6834648528364153`*^9, 3.683464855805862*^9}, {3.68346517406071*^9, 
  3.683465181302178*^9}, {3.683546560106258*^9, 3.6835465865370626`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"cf1", "\[Rule]", 
    RowBox[{
    "-", "0.471394687179665519884179614238621836408771268701464009316922486383\
6888974861`52.75451666649289"}]}], ",", 
   RowBox[{"cg1", "\[Rule]", 
    RowBox[{
     RowBox[{
     "-", "0.21628790080696809160974901358719753327983211604821235669388432240\
746411781664`53.2349644710078"}], "+", 
     RowBox[{
     "0.0234578611614813201811629571949365744041321545365418289410308781376678\
2007255`52.97244409429579", " ", "ca1"}]}]}], ",", 
   RowBox[{
   "c\[Phi]1", "\[Rule]", 
    "3.21125478199481733895419246882163631278706893303290635913143288795794394\
873581`53.199593172373035"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683465181633463*^9, 3.683539530240959*^9, 3.6835402653646107`*^9, 
   3.6835403280955553`*^9, 3.683545429645554*^9, 3.683545512788775*^9, 
   3.683546112805333*^9, 3.683546588393732*^9, {3.683546881546039*^9, 
   3.6835469114057827`*^9}, 3.683630940949793*^9, 3.683972729115109*^9, 
   3.6839728370469227`*^9, 3.683972924198996*^9, 3.6850910271617827`*^9, 
   3.6852888387819166`*^9, 3.685291548287908*^9, 3.6863090920785823`*^9, 
   3.686309494037114*^9, 3.6863111460414686`*^9, 3.6863112987596216`*^9, 
   3.6893274372852535`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"cf2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "10"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"cg2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"ca2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"c\[Phi]2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683462896885921*^9, 3.683462941496567*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqsexp2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "/.", 
      "sol0"}], "/.", "sol1"}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqsexp2b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
        "2"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",",
        "8"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",",
        "2"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp2", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.68346295201285*^9, 3.6834629530044394`*^9}, {
  3.683465323384304*^9, 3.6834653256817217`*^9}, {3.68346541095725*^9, 
  3.6834654376162653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sol11", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "eqsexp2b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", "c\[Phi]2"}], "]"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "//", "Simplify"}]}], ";", 
  RowBox[{"coef2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "eqsexp2b", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.",
      "sol11"}], "//", "Simplify"}]}], ";", 
  RowBox[{"sol12", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"coef2", "\[Equal]", "0"}], ",", "ca1"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    "Simplify"}]}], ";", 
  RowBox[{"sol13", "=", 
   RowBox[{
    RowBox[{"sol11", "/.", "sol12"}], "//", "Simplify"}]}], ";", 
  RowBox[{"coef3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "eqsexp2b", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"sol12", ",", "sol13"}], "]"}]}], "//", "Simplify"}]}], ";", 
  RowBox[{"sol14", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"coef3", "\[Equal]", "0"}], ",", "cg2"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    "Simplify"}]}], ";", 
  RowBox[{"sol15", "=", 
   RowBox[{
    RowBox[{"sol13", "/.", "sol14"}], "//", "Simplify"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{
    "eqsexp2b", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "/.", 
    
    RowBox[{"Join", "[", 
     RowBox[{"sol15", ",", "sol14", ",", "sol12"}], "]"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.683465425840819*^9, 3.683465669123294*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], ":", 
  " ", "\<\"Solve was unable to solve the system with inexact coefficients. \
The answer was obtained by solving a corresponding exact system and \
numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.683465626838546*^9, 3.683465648073781*^9}, 
   3.683539550469952*^9, 3.683540350124279*^9, 3.6835454529915247`*^9, 
   3.683545525123539*^9, 3.683546127742755*^9, {3.6835468818771133`*^9, 
   3.6835469117660427`*^9}, 3.6836309415455933`*^9, 3.683972729808926*^9, 
   3.683972837821697*^9, 3.6839729254798117`*^9, 3.685091029345333*^9, 
   3.685288842214878*^9, 3.68529155088339*^9, 3.6863090954574785`*^9, 
   3.6863094965103683`*^9, 3.6863111484333982`*^9, 3.6863113009713025`*^9, 
   3.6893274392146864`*^9}],

Cell[BoxData[
 RowBox[{"0``39.56475660198846", "+", 
  RowBox[{"0``45.784897534374345", " ", "ca2"}], "+", 
  RowBox[{"0``39.99955123468792", " ", "cf2"}]}]], "Output",
 CellChangeTimes->{{3.6834656268640337`*^9, 3.683465648079483*^9}, 
   3.6835395504785023`*^9, 3.6835403501293573`*^9, 3.683545452998685*^9, 
   3.6835455251328983`*^9, 3.6835461277514763`*^9, {3.683546881896359*^9, 
   3.683546911784431*^9}, 3.683630941546502*^9, 3.683972729823559*^9, 
   3.683972837822233*^9, 3.683972925499556*^9, 3.685091029347336*^9, 
   3.6852888422283897`*^9, 3.6852915508853908`*^9, 3.6863090954754915`*^9, 
   3.686309496514872*^9, 3.686311148440404*^9, 3.686311300977307*^9, 
   3.6893274392167397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coef5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "eqsexp2b", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"sol15", ",", "sol14", ",", "sol12"}], "]"}]}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol16", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"coef5", "\[Equal]", "0"}], ",", "cf2"}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol2", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"sol16", ",", 
       RowBox[{"sol15", "/.", "sol16"}], ",", 
       RowBox[{"sol14", "/.", "sol16"}], ",", "sol12"}], "]"}], "//", 
     "Simplify"}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6834656608814096`*^9, 3.683465707985173*^9}, {
  3.683546619847641*^9, 3.683546647080908*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"cf2", "\[Rule]", 
    RowBox[{
    "8.81408916298546024089514239275410180866334940126929661288413081391389672\
056387`39.842168823455246", "-", 
     RowBox[{
     "0.1868566673635757667394133511724647619292641030962001424635740007456186\
8252816`39.842168823455246", " ", "ca2"}]}]}], ",", 
   RowBox[{
   "c\[Phi]2", "\[Rule]", 
    "0.7066380266175049793334634403169953650899004746106582875274`38.\
3391774283679"}], ",", 
   RowBox[{"cg2", "\[Rule]", 
    RowBox[{
     RowBox[{
     "-", "1.20676289797233837443081126264051693552220713368389997077254284975\
226998992115`38.92681583187628"}], "+", 
     RowBox[{
     "0.0351867917422219802717444357924048616061982318048127434115463193930660\
043636`38.94456728480571", " ", "ca2"}]}]}], ",", 
   RowBox[{
   "ca1", "\[Rule]", 
    "13.4943912805409955651415950532310489683502820556552701349187580167688024\
2693537`44.027899290557286"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683465708937669*^9, 3.6835395522576838`*^9, 3.683540351643076*^9, 
   3.683545454713027*^9, 3.6835455273599577`*^9, 3.683546129662179*^9, {
   3.683546881926663*^9, 3.683546911811686*^9}, 3.683630941631686*^9, 
   3.683972729852594*^9, 3.683972837849057*^9, 3.6839729255277987`*^9, 
   3.6852888422544084`*^9, 3.685291550894396*^9, 3.686309095501009*^9, 
   3.6863094965248785`*^9, 3.6863111484474077`*^9, 3.686311300986314*^9, 
   3.689327439225764*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"cf2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    RowBox[{"cf3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "10"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "12"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"cg2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cg3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"ca2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"ca3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "10"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"c\[Phi]2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"c\[Phi]3", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"fh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Gh", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"At", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Ath", "[", "r", "]"}]}], "]"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{"\[Phi]h", "[", "r", "]"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683465745383808*^9, 3.683465790666314*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqsexp3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eqs", "/.", "potentialschoice"}], "/.", "subs"}], "/.", 
       "sol0"}], "/.", "sol1"}], "/.", "sol2"}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqsexp3b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
        "6"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",",
        "10"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",",
        "4"}], "]"}], ",", 
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
       "eqsexp3", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",",
        "6"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.683465821279518*^9, 3.683465826196104*^9}, {
  3.683465873471815*^9, 3.683465893256887*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"eqsexp3b", "\[Equal]", "0"}], "]"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "18"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683465839355351*^9, 3.6834658997118473`*^9}, {
  3.683546658132766*^9, 3.68354667212663*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "ca2", "\[Rule]", 
    "37.7981763363979284312627542904208174262955751881942927431644`34.\
65068189539309"}], ",", 
   RowBox[{"cf3", "\[Rule]", 
    RowBox[{
    "29.2419137267261282225048870645430997522752386529928942425976`34.\
65068189539309", "-", 
     RowBox[{
     "0.373713334727151533478826702344929523858528206192400284941`34.\
65068189539309", " ", "ca3"}]}]}], ",", 
   RowBox[{"cg3", "\[Rule]", 
    RowBox[{
     RowBox[{
     "-", "3.6181898550031815844325706554688333766440686954429769065322`34.\
65068189539309"}], "+", 
     RowBox[{
     "0.046915722322962640362325914389873148808264309073083657882`34.\
65068189539309", " ", "ca3"}]}]}], ",", 
   RowBox[{"c\[Phi]3", "\[Rule]", 
    RowBox[{
    "-", "1.7918386594928923980533202980514539773824561317759446842288`34.\
65068189539309"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.683465862043627*^9, 3.683465900117424*^9, 3.683539568231749*^9, 
   3.683540365174651*^9, 3.6835454645729837`*^9, 3.683545542843767*^9, 
   3.683546145027647*^9, {3.683546882379355*^9, 3.6835469122754602`*^9}, 
   3.683630942287342*^9, 3.683972731044148*^9, 3.6839728389214363`*^9, 
   3.683972927323249*^9, 3.6852888465459595`*^9, 3.6852915537452307`*^9, 
   3.68630909917762*^9, 3.686309499697134*^9, 3.6863111515407333`*^9, 
   3.686311303782638*^9, 3.6893274416651154`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solexp", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"sol0", ",", 
     RowBox[{"sol1", "/.", "sol2"}], ",", 
     RowBox[{"sol2", "/.", "sol3"}], ",", "sol3"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6834660852706738`*^9, 3.683466145677018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fh", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"cf", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"cf1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{"cf2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", ",", "1"}], "]"}], "10"]}]}], ";", 
  RowBox[{
   RowBox[{"Gh", "[", "r_", "]"}], ":=", 
   RowBox[{"cg", "+", 
    RowBox[{"cg1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"cg2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], ";", 
  RowBox[{
   RowBox[{"Ath", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ca", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"ca1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{"ca2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "8"}]}]}], ";", 
  RowBox[{
   RowBox[{"\[Phi]h", "[", "r_", "]"}], ":=", 
   RowBox[{"c\[Phi]", "+", 
    RowBox[{"c\[Phi]1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
    RowBox[{"c\[Phi]2", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
    RowBox[{
     RowBox[{"O", "[", 
      RowBox[{"r", ",", " ", "1"}], "]"}], "^", "6"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"fh", "[", "r", "]"}], ",", 
    RowBox[{"Gh", "[", "r", "]"}], ",", 
    RowBox[{"Ath", "[", "r", "]"}], ",", 
    RowBox[{"\[Phi]h", "[", "r", "]"}]}], "}"}], "/.", "solexp"}]}], "Input",
 CellChangeTimes->{{3.68346595911378*^9, 3.683465991896831*^9}, 
   3.683466106293023*^9},
 Background->RGBColor[1, 0.9, 0.8]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{
     "0.6195773333516110499764072573912860887617928997838171441175223531516093\
76379428959346288360924938`60.", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "-", 
     RowBox[{
     "0.4713946871796655198841796142386218364087712687014640093169224863836888\
974861`52.75451666649289", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
     RowBox[{
     "1.7512479003453716056674187814928345845253258355664942076197`34.\
045043795638676", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "8"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "10"],
      SeriesData[$CellContext`r, 1, {}, 4, 10, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     0.61957733335161104997640725739128608876179289978381714411752235315160937\
6379428959346288360924938`60., 
      0, -0.471394687179665519884179614238621836408771268701464009316922486383\
6888974861`52.75451666649289, 0, 
      1.7512479003453716056674187814928345845253258355664942076197`34.\
045043795638676}, 4, 10, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
    "0.03889066221084719769653350540808947638695627265615749502140312409999962\
2795195098358347942122997`59.83362322424496", "+", 
     RowBox[{
     "0.1002616563106667061818930763913684966077317000399468038108480510685327\
5251064`43.52859245446984", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
     RowBox[{
     "0.1232336610122785171748497493272927445296581990793650888653`33.\
617517790742745", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "6"],
      SeriesData[$CellContext`r, 1, {}, 0, 6, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     0.03889066221084719769653350540808947638695627265615749502140312409999962\
2795195098358347942122997`59.83362322424496, 0, 
      0.1002616563106667061818930763913684966077317000399468038108480510685327\
5251064`43.52859245446984, 0, 
      0.1232336610122785171748497493272927445296581990793650888653`33.\
617517790742745}, 0, 6, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{
     "3.3157892736365163918271556564791048232894680610745523369927720696423672\
22584645726555575298223987`59.33641415692769", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
     RowBox[{
     "13.494391280540995565141595053231048968350282055655270134918758016768802\
42693537`44.027899290557286", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     RowBox[{
     "37.7981763363979284312627542904208174262955751881942927431644`34.\
65068189539309", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "6"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "8"],
      SeriesData[$CellContext`r, 1, {}, 2, 8, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     3.31578927363651639182715565647910482328946806107455233699277206964236722\
2584645726555575298223987`59.33641415692769, 0, 
      13.494391280540995565141595053231048968350282055655270134918758016768802\
42693537`44.027899290557286, 0, 
      37.7981763363979284312627542904208174262955751881942927431644`34.\
65068189539309}, 2, 8, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
    "2.82698995582478019026765934269711048619209984889327099787304222653416929\
7191343081469400187255581`60.", "+", 
     RowBox[{
     "3.2112547819948173389541924688216363127870689330329063591314328879579439\
4873581`53.199593172373035", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
     RowBox[{
     "0.7066380266175049793334634403169953650899004746106582875274`38.\
3391774283679", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", "1"}], ")"}], "4"]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", 
        RowBox[{"r", "-", "1"}], "]"}], "6"],
      SeriesData[$CellContext`r, 1, {}, 0, 6, 1],
      Editable->False]}],
    SeriesData[$CellContext`r, 1, {
     2.82698995582478019026765934269711048619209984889327099787304222653416929\
7191343081469400187255581`60., 0, 
      3.2112547819948173389541924688216363127870689330329063591314328879579439\
4873581`53.199593172373035, 0, 
      0.7066380266175049793334634403169953650899004746106582875274`38.\
3391774283679}, 0, 6, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.68346599272618*^9, {3.683466107242277*^9, 3.683466140366234*^9}, 
   3.683539599416132*^9, 3.683540379698029*^9, 3.683545558782559*^9, 
   3.683546154320381*^9, {3.683546882417692*^9, 3.683546912305667*^9}, 
   3.683630942426305*^9, 3.683972731086526*^9, 3.683972838955473*^9, 
   3.683972927357112*^9, 3.685288846580988*^9, 3.6852915537637305`*^9, 
   3.686309099205646*^9, 3.6863094997306585`*^9, 3.686311151574744*^9, 
   3.6863113038106623`*^9, 3.6893274416801662`*^9},
 Background->RGBColor[1, 0.9, 0.8]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Integration", "Subsubsection",
 CellChangeTimes->{{3.682628202575428*^9, 3.682628204732593*^9}, {
  3.682985081534309*^9, 3.682985091286105*^9}, {3.6835008806497283`*^9, 
  3.6835008820484695`*^9}, {3.6893274027050323`*^9, 3.689327404544297*^9}}],

Cell["From the final set of eqs derived above:", "Text",
 CellChangeTimes->{{3.689329674609786*^9, 3.689329683393112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqssimple", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Atn", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["Atn", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["fn", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["fn", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["G", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["G", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], "/.", "repl"}], 
         ")"}]}]}], "}"}], "//", "Expand"}], "//", "Simplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.683501666730343*^9, 3.683501754843915*^9}, 
   3.689327408257268*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]h", "=", 
   RowBox[{"1", "-", 
    FractionBox["75", "10000"]}]}], ";"}]], "Input"],

Cell["These are the Boundary conditions for this case:", "Text",
 CellChangeTimes->{{3.689329687312942*^9, 3.689329697793213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"fh", "[", "r", "]"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", "1"}], ")"}], "^", "4"}]}], "/.", "solexp"}], "//",
      "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"AtBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Ath", "[", "r", "]"}], "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", "1"}], ")"}], "^", "2"}]}], "/.", "solexp"}], "//",
      "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]BC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]h", "[", "r", "]"}], "/.", "solexp"}], "//", "Normal"}], 
    "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"fpBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"fh", "[", "r", "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "-", "1"}], ")"}], "^", "4"}]}], ",", "r"}], "]"}], "/.",
       "solexp"}], "//", "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"AtpBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Ath", "[", "r", "]"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "-", "1"}], ")"}], "^", "2"}]}], ",", "r"}], "]"}], "/.",
       "solexp"}], "//", "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]pBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Phi]h", "[", "r", "]"}], ",", "r"}], "]"}], "/.", 
      "solexp"}], "//", "Normal"}], "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"GBC", "=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Gh", "[", "r", "]"}], "/.", "solexp"}], "//", "Normal"}], 
    "]"}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]h"}]}]}]}], "Input",
 CellChangeTimes->{{3.683541120412137*^9, 3.6835411966026487`*^9}, {
  3.683546168204804*^9, 3.6835462215117493`*^9}}],

Cell[BoxData["0.\
61955082294151500347744111834505240460066683399961646336410885505841027911046`\
42.093528052656275"], "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.6852888710610123`*^9, 
   3.6852915717822204`*^9, 3.686309124312498*^9, 3.686309518983655*^9, 
   3.686311168824428*^9, 3.686311322535411*^9, 3.6893274816359763`*^9}],

Cell[BoxData["3.\
31654845274183913721176529824315756682855540232852631483386563244947544504272`\
42.09365118507044"], "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.6852888710610123`*^9, 
   3.6852915717822204`*^9, 3.686309124312498*^9, 3.686309518983655*^9, 
   3.686311168824428*^9, 3.686311322535411*^9, 3.689327481638994*^9}],

Cell[BoxData["2.\
82717059114211427983742486469576836986268726887551731930352935751386288086934`\
47.44108738470657"], "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.6852888710610123`*^9, 
   3.6852915717822204`*^9, 3.686309124312498*^9, 3.686309518983655*^9, 
   3.686311168824428*^9, 3.686311322535411*^9, 3.6893274816410017`*^9}],

Cell[BoxData["0.\
00706796507686314998367813044438555838777018254317444168077847907709654332076`\
37.42374678150908"], "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.6852888710610123`*^9, 
   3.6852915717822204`*^9, 3.686309124312498*^9, 3.686309518983655*^9, 
   3.686311168824428*^9, 3.686311322535411*^9, 3.6893274816430044`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  "0.2024796536306826049813516816963308196546611046179591298927854602061866079\
047`38.152348078131176"}]], "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.6852888710610123`*^9, 
   3.6852915717822204`*^9, 3.686309124312498*^9, 3.686309518983655*^9, 
   3.686311168824428*^9, 3.686311322535411*^9, 3.689327481645031*^9}],

Cell[BoxData[
 RowBox[{"-", 
  "0.0481700141815921771239655122518800796214846232025445008728316958505421356\
9906`42.94551341641013"}]], "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.6852888710610123`*^9, 
   3.6852915717822204`*^9, 3.686309124312498*^9, 3.686309518983655*^9, 
   3.686311168824428*^9, 3.686311322535411*^9, 3.6893274816470027`*^9}],

Cell[BoxData["0.\
03889630231893367824541873264218452584577765705265638755367108579065377551734`\
41.61645093267743"], "Output",
 CellChangeTimes->{{3.683541127041914*^9, 3.68354113120737*^9}, {
   3.6835411694832706`*^9, 3.683541197228714*^9}, 3.6835455661457376`*^9, 
   3.6835461863185987`*^9, 3.683546222682675*^9, 3.683546883416297*^9, 
   3.683546913537631*^9, 3.683630943658793*^9, 3.683972732013879*^9, 
   3.6839728400808496`*^9, 3.683972938428801*^9, 3.6852888710610123`*^9, 
   3.6852915717822204`*^9, 3.686309124312498*^9, 3.686309518983655*^9, 
   3.686311168824428*^9, 3.686311322535411*^9, 3.68932748164902*^9}]
}, Open  ]],

Cell["Now we integrate from the horizon to the boundary", "Text",
 CellChangeTimes->{{3.6893297036653357`*^9, 3.689329715601733*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"solm", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
          SuperscriptBox["r", "4"], " ", "\[Gamma]", " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["rp", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Atn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["Atn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
              "2"]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "16"}], " ", "\[Beta]", " ", "\[Delta]", " ", 
             RowBox[{"G", "[", "r", "]"}], " ", 
             RowBox[{"Sinh", "[", 
              RowBox[{"\[Delta]", " ", 
               RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                    ")"}]}], " ", 
                   RowBox[{"fn", "[", "r", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
                   RowBox[{
                    SuperscriptBox["fn", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
                RowBox[{"fn", "[", "r", "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Atn", "[", "r", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "8"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "\[Gamma]", " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["Atn", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"24", "-", 
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "\[Gamma]", " ", 
             RowBox[{"Tanh", "[", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "r", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}], 
         "+", 
         RowBox[{"8", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
          RowBox[{
           SuperscriptBox["Atn", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", "0"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
          SuperscriptBox["r", "4"], " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["rp", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Atn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["Atn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
              "2"]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], "5"], " ", 
          SuperscriptBox["r", "5"], " ", "\[Gamma]", " ", 
          RowBox[{"Sech", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"Tanh", "[", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["B", "2"], " ", 
             SuperscriptBox[
              RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["rp", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Atn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["Atn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
              "2"]}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["rp", "4"], " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"32", " ", "\[Beta]", " ", 
             RowBox[{"G", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                RowBox[{"Cosh", "[", 
                 RowBox[{"\[Delta]", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
                "\[Delta]", " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{"\[Delta]", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Phi]", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
             RowBox[{"fn", "[", "r", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"32", " ", 
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
                SuperscriptBox["r", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                 ")"}], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Phi]", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["fn", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "8"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"8", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
                   SuperscriptBox["r", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["\[Phi]", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
                 ")"}]}], "+", 
               RowBox[{"8", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
                RowBox[{
                 SuperscriptBox["fn", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "r"}], ")"}], 
          RowBox[{
           SuperscriptBox["G", "\[Prime]",
            MultilineFunction->None], "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
          RowBox[{"G", "[", "r", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}], "2"]}]}], "\[Equal]", 
        "0"}], ",", 
       RowBox[{
        RowBox[{"fn", "[", "\[Epsilon]h", "]"}], "\[Equal]", "fBC"}], ",", 
       RowBox[{
        RowBox[{"Atn", "[", "\[Epsilon]h", "]"}], "\[Equal]", "AtBC"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "\[Epsilon]h", "]"}], "\[Equal]", "\[Phi]BC"}],
        ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["fn", "\[Prime]",
          MultilineFunction->None], "[", "\[Epsilon]h", "]"}], "\[Equal]", 
        "fpBC"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Atn", "\[Prime]",
          MultilineFunction->None], "[", "\[Epsilon]h", "]"}], "\[Equal]", 
        "AtpBC"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "\[Epsilon]h", "]"}], "\[Equal]", 
        "\[Phi]pBC"}], ",", 
       RowBox[{
        RowBox[{"G", "[", "\[Epsilon]h", "]"}], "\[Equal]", "GBC"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"fn", ",", "Atn", ",", "\[Phi]", ",", "G"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Epsilon]h", ",", "0"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "10"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6835008919589252`*^9, 3.6835009167801123`*^9}, 
   3.6835009966862893`*^9, {3.6835011694761*^9, 3.6835012179204955`*^9}, {
   3.683501292685239*^9, 3.683501304063984*^9}, {3.6835015006213694`*^9, 
   3.683501501108497*^9}, {3.6835015312651343`*^9, 3.6835015399520435`*^9}, {
   3.6835015715884857`*^9, 3.6835015893431196`*^9}, {3.683501887922593*^9, 
   3.6835019053865433`*^9}, {3.6835020461073995`*^9, 
   3.6835020744801903`*^9}, {3.6835023039436407`*^9, 3.683502311950193*^9}, 
   3.6835411422873163`*^9, {3.683541204296666*^9, 3.683541279668929*^9}, {
   3.683545574782873*^9, 3.683545635348016*^9}, {3.683546229230727*^9, 
   3.68354626590003*^9}, {3.686309657407078*^9, 3.6863096916103563`*^9}, {
   3.6863098147201233`*^9, 3.686309818677721*^9}, 3.6893274683227205`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], ":", 
  " ", "\<\"At \[NoBreak]\\!\\(\\*RowBox[{\\\"r\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"5.5661935650923795`*^-11\\\"}]\\)\[NoBreak], \
step size is effectively zero; singularity or stiff system suspected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", \
ButtonNote -> \\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.686311791764025*^9, 3.689327483555094*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Atn", "[", "r", "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "r"}], ")"}], "^", "2"}]}], "/.", "solm"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "\[Epsilon]h"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4", ",", "0.6", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5", ",", "10", ",", "15", ",", "20"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.685289071475913*^9, 3.685289115334608*^9}, {
  3.6852914011239967`*^9, 3.685291412731295*^9}, {3.6852918065735235`*^9, 
  3.6852918150493917`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1:eJwV1nk41U0bB3CVJFmi0mOJFrQpUc4R8R0qhVKkyGMrPSQkUZYSWaOELKHs
ZEkkRFSWRElCkpSsJcs5P0uWQ8v7e/+a63PNct0zc99zzZqTTob/zefi4lox
j4vr/22/y4J/8iqOapjaZyapZjCJiR/foX0T2yHwYyO3Em2DI3nvJCZ2I+dx
oPlG2vpqXEt5Jo7AeYHji5W0V9csl6mmTDDkJPFUkPbEgY0qV0bMIZBbe3Uh
7QMKG7fNjVvjYm+34Xg6kxS7bFc97myD1pp+/R+0pUrV95RQp/Hh19RMJ+0x
YmjiMuKIj5M5u17R1stWr5wcd8ERCb/227R93mi9lFG6AO3k8NgQ2kWsffVH
nC+C54Vx++X/r6dk2FpAuWPK/8MLS9qGRsafurd64tWgns1h2kEXzb4Knb0E
I+/JC4T2aJnND8cRLyzRrnkjRVu20551d7M3msSTFgvQfuCtwvlP2Qd/fZen
z6YxSW+K+p8o16toPUy63tPW+76Pd2LcD3o6QjxXaNu41YeE3PLHh/7QChva
PrwHBdYqBcD8qUOpPu2iTYYiBs6BuCT72VSStpSTmWQ+dQ3R/25alJfKJCpc
XYnaYcFYRqYsw2kbRpxY83VrCHJXu391ph1UaCMncPY6BBkRRIn26PS5bfYj
oTii+1A7K4VJ+IInHs2/cRO3xL09/WjLil9Ujt8chmONdU/NaW9JVE84pRyO
Sjw9IUT7ZKVWaqRrBLSCrXtskpmE4vW3tqyJgBfhUlelfdngpczm5bfwaSg3
gp92TO++zOrCW6h4PSmRl8Qkb7gP5o6NR+KxSJljfyKTzN9HCl10orD5vWht
Dm3V4O1lk0lRcBYvb3ainSUg/opzIBrfU9OmJhOYJFB0oG9eZgwuafauHb/L
JM9MOob8fsfAr1ul6gHtn/FvxxYa3YaXutCcLW1r6aK/i+fF4k1IvXL7HSYh
G65KiPwbB4mXae6Z8UzifsZ1bVRBHFbtmU4zpp2fa7tRlDceu1o9jHhoSynq
M8WL4+HurqNqGcckczsljqwVuouNAp8b/9xmksd6xSFKLxKxdv+vT+NRTMIO
zYooEkuC3O546RDask13YhnnkiC2PLRKmrbuJs0jCYLJ0J79tFQ7kklK89af
SClPhtPTz/FXIujzKvl5OXtFKgaEzU0SQpnkkclZnyGSCrux9QfEaDdyBvw2
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
Af8DoopXDw==
     "]]}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 18],
  GridLines->{{0.2, 0.4, 0.6, 0.8}, {0, 5, 10, 15, 20}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6852890760231047`*^9, 3.68528911589005*^9}, 
   3.685291653220152*^9, {3.68529181109381*^9, 3.685291815585903*^9}, 
   3.6863092088880243`*^9, 3.6863095953586245`*^9, 3.68631048941831*^9, 
   3.6863117952906847`*^9, 3.6893275003901796`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "r", "]"}], "/.", "solm"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "\[Epsilon]h"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4", ",", "0.6", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6852889799389043`*^9, 3.6852890584190784`*^9}, {
  3.685289393238826*^9, 3.6852893992905498`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1: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
7P8Byzc0GQ==
     "]]}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 18],
  GridLines->{{0.2, 0.4, 0.6, 0.8}, {1, 2, 3, 4}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.685288986735936*^9, 3.685289058798913*^9}, 
   3.6852893997980375`*^9, 3.6852916532842035`*^9, 3.686309208959575*^9, 
   3.6863095954416914`*^9, 3.6863104917912245`*^9, 3.6863117953625956`*^9, 
   3.6893275016843147`*^9}]
}, Open  ]],

Cell["Curvature check:", "Text",
 CellChangeTimes->{{3.683536526343794*^9, 3.683536529233213*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotricci", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"G", "[", "r", "]"}], "3"]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "r"}], ")"}]}], " ", "r", " ", 
            RowBox[{"G", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "r"}], "+", 
                 SuperscriptBox["r", "2"]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["f", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}], " ", 
               RowBox[{
                SuperscriptBox["G", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}], "+", 
              RowBox[{
               RowBox[{"G", "[", "r", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "12"}], "+", 
                    RowBox[{"26", " ", "r"}], "-", 
                    RowBox[{"13", " ", 
                    SuperscriptBox["r", "2"]}]}], ")"}], " ", 
                  RowBox[{
                   SuperscriptBox["f", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}], "+", 
                 RowBox[{"r", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "-", 
                    RowBox[{"3", " ", "r"}], "+", 
                    SuperscriptBox["r", "2"]}], ")"}], " ", 
                  RowBox[{
                   SuperscriptBox["f", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"f", "[", "r", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "48"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
               SuperscriptBox["r", "2"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["G", "\[Prime]",
                  MultilineFunction->None], "[", "r", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
               SuperscriptBox["r", "2"], " ", 
               RowBox[{"G", "[", "r", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["G", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
                  RowBox[{
                   SuperscriptBox["G", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "/.", 
        RowBox[{"f", "\[Rule]", 
         RowBox[{"Function", "[", 
          RowBox[{"r", ",", 
           RowBox[{
            RowBox[{"fn", "[", "r", "]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"r", "-", "1"}], ")"}], "4"]}]}], "]"}]}]}], "/.", 
       "solm"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "\[Epsilon]h"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Thick"}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.6893311520502825`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plotricci", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.7"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.4", ",", "0.6", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", 
        RowBox[{"-", "40"}], ",", 
        RowBox[{"-", "20"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", "Dashed"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6852893541751857`*^9, 3.68528936754885*^9}, {
  3.6852894137454557`*^9, 3.6852894208989377`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->0.7,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 18],
  GridLines->{{0.2, 0.4, 0.6, 0.8}, {-60, -40, -20, 0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5], 
    Dashing[{Small, Small}]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6852893549812255`*^9, 3.6852893685240555`*^9}, 
   3.6852894213854494`*^9, 3.6852916533552585`*^9, 3.686309209054661*^9, 
   3.6863095955342627`*^9, 3.6863104947180185`*^9, 3.686311795571348*^9}]
}, Open  ]],

Cell["\<\
The solution at the boundary needs to be rescaled by a parameter, which is \
given by\
\>", "Text",
 CellChangeTimes->{{3.6893297342892666`*^9, 3.689329754193317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]b", "=", "0.0000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"4", 
        SuperscriptBox["r", "2"]}], 
       SuperscriptBox["rp", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"fn", "[", "r", "]"}], 
        RowBox[{"G", "[", "r", "]"}]}], 
       SuperscriptBox[
        RowBox[{"g", "[", "r", "]"}], "2"]]}], "/.", 
     RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", 
    RowBox[{"solm", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6836311602778397`*^9, 3.683631162702759*^9}, {
  3.683632309935358*^9, 3.683632311043631*^9}, {3.683879105805613*^9, 
  3.6838791385872507`*^9}, {3.689327586226993*^9, 3.6893275870258236`*^9}}],

Cell[BoxData["0.16918420648508553`"], "Output",
 CellChangeTimes->{
  3.683631163016198*^9, 3.683632311919469*^9, {3.6838791117068243`*^9, 
   3.683879139643214*^9}, 3.683972733024457*^9, 3.683972840982106*^9, 
   3.6839729389316883`*^9, 3.6852889375010557`*^9, 3.6852916533893003`*^9, 
   3.6863092090946984`*^9, 3.68630959555756*^9, 3.686310497300682*^9, 
   3.686311795592388*^9, {3.6893275788455224`*^9, 3.6893275877136517`*^9}}]
}, Open  ]],

Cell["\<\
And we can check that we obtain AdS asymptotics, as expected:\
\>", "Text",
 CellChangeTimes->{{3.689329757889497*^9, 3.689329775089388*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", 
      SuperscriptBox["r", "2"]}], 
     RowBox[{
      SuperscriptBox["\[Lambda]", "2"], 
      SuperscriptBox["rp", "2"]}]], 
    FractionBox[
     RowBox[{
      RowBox[{"fn", "[", "r", "]"}], 
      RowBox[{"G", "[", "r", "]"}]}], 
     SuperscriptBox[
      RowBox[{"g", "[", "r", "]"}], "2"]]}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", 
  "solm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["r", "2"], 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "r", "]"}], "2"], 
      RowBox[{"G", "[", "r", "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"g", "[", "r", "]"}], "2"], 
      RowBox[{"fn", "[", "r", "]"}]}]]}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", 
  "solm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", 
      SuperscriptBox["r", "2"]}], 
     SuperscriptBox["rp", "2"]], 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"g", "[", "r", "]"}], "2"]]}], "/.", 
   RowBox[{"r", "\[Rule]", "\[Epsilon]b"}]}], "/.", "solm"}]}], "Input",
 CellChangeTimes->{{3.683502530601581*^9, 3.6835026423985167`*^9}, {
   3.683502675071043*^9, 3.683502688512497*^9}, {3.6835027513728456`*^9, 
   3.683502760353875*^9}, {3.683502799335139*^9, 3.6835028370012007`*^9}, {
   3.6835028768208857`*^9, 3.683502882053205*^9}, {3.6835039947759624`*^9, 
   3.683504020473978*^9}, 3.6835237788912983`*^9, {3.683523899233607*^9, 
   3.6835238996363945`*^9}, {3.6835253087377996`*^9, 3.683525308875884*^9}, 
   3.683632340511036*^9, {3.68932758478649*^9, 3.6893275898411846`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"{", "1.`", "}"}]], "Output",
 CellChangeTimes->{
  3.6835025428067055`*^9, {3.683502574934665*^9, 3.683502644506261*^9}, 
   3.683502689519638*^9, {3.68350275815197*^9, 3.6835027610594244`*^9}, {
   3.6835028005315022`*^9, 3.683502837593258*^9}, {3.6835028785617094`*^9, 
   3.6835028826583652`*^9}, {3.6835039899322643`*^9, 3.683504021323454*^9}, 
   3.683523780443833*^9, 3.6835239010819225`*^9, 3.6835253099239335`*^9, 
   3.683536397180172*^9, 3.683546883847045*^9, 3.6835469148431473`*^9, 
   3.6836309447428303`*^9, 3.6836321775555468`*^9, 3.6836323418214273`*^9, 
   3.6838791406910686`*^9, 3.6839727330588493`*^9, 3.683972841014535*^9, 
   3.683972938942863*^9, 3.685288937508562*^9, 3.6852916534063125`*^9, 
   3.6863092091127014`*^9, 3.6863095955665674`*^9, 3.6863104981445417`*^9, 
   3.6863117956023717`*^9, 3.6893275905313225`*^9},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"{", "0.9999995009178428`", "}"}]], "Output",
 CellChangeTimes->{
  3.6835025428067055`*^9, {3.683502574934665*^9, 3.683502644506261*^9}, 
   3.683502689519638*^9, {3.68350275815197*^9, 3.6835027610594244`*^9}, {
   3.6835028005315022`*^9, 3.683502837593258*^9}, {3.6835028785617094`*^9, 
   3.6835028826583652`*^9}, {3.6835039899322643`*^9, 3.683504021323454*^9}, 
   3.683523780443833*^9, 3.6835239010819225`*^9, 3.6835253099239335`*^9, 
   3.683536397180172*^9, 3.683546883847045*^9, 3.6835469148431473`*^9, 
   3.6836309447428303`*^9, 3.6836321775555468`*^9, 3.6836323418214273`*^9, 
   3.6838791406910686`*^9, 3.6839727330588493`*^9, 3.683972841014535*^9, 
   3.683972938942863*^9, 3.685288937508562*^9, 3.6852916534063125`*^9, 
   3.6863092091127014`*^9, 3.6863095955665674`*^9, 3.6863104981445417`*^9, 
   3.6863117956023717`*^9, 3.6893275905332994`*^9},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{"{", "1.0000001009727915`", "}"}]], "Output",
 CellChangeTimes->{
  3.6835025428067055`*^9, {3.683502574934665*^9, 3.683502644506261*^9}, 
   3.683502689519638*^9, {3.68350275815197*^9, 3.6835027610594244`*^9}, {
   3.6835028005315022`*^9, 3.683502837593258*^9}, {3.6835028785617094`*^9, 
   3.6835028826583652`*^9}, {3.6835039899322643`*^9, 3.683504021323454*^9}, 
   3.683523780443833*^9, 3.6835239010819225`*^9, 3.6835253099239335`*^9, 
   3.683536397180172*^9, 3.683546883847045*^9, 3.6835469148431473`*^9, 
   3.6836309447428303`*^9, 3.6836321775555468`*^9, 3.6836323418214273`*^9, 
   3.6838791406910686`*^9, 3.6839727330588493`*^9, 3.683972841014535*^9, 
   3.683972938942863*^9, 3.685288937508562*^9, 3.6852916534063125`*^9, 
   3.6863092091127014`*^9, 3.6863095955665674`*^9, 3.6863104981445417`*^9, 
   3.6863117956023717`*^9, 3.6893275905353217`*^9},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EOM checking", "Subsubsection",
 CellChangeTimes->{{3.682628202575428*^9, 3.682628204732593*^9}, {
  3.682985081534309*^9, 3.682985091286105*^9}, {3.6835008806497283`*^9, 
  3.6835008820484695`*^9}, {3.6863092665182505`*^9, 3.6863092690866923`*^9}}],

Cell["A few numerical checks", "Text",
 CellChangeTimes->{{3.689329780528724*^9, 3.689329788241742*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"constr", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/.", "potentialschoice"}], "/.", 
     "solm"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6863127766154404`*^9, 3.686312798277113*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwUV3c8198XtiokKxFJhZTRokRxj4wSZUZmZfOxZ/Ze2RllFLJn9ubao8zP
x2yYIdJA8Y2Un99f79f7dd733HOf57nnOe9ThrZqJhRkZGQWB8nI/v9sXZ3e
/OQeCFNk+kpG12mb1boGV1yPBoG8wjHVL0TK5rmU5plD1UHAxeP81JbvQLOD
fclohnowSBp7vHRaJm+muJX29upaMIw9Kl5VUKRqjuWMbu6LCgHj/MdjK5lk
zdzr3pUGQqFgJDFL68hN0VzebZO/+SYUfrWUZXh67WLplw9Sw82egJvqs0x1
MrJmkoNS3Ml9YeCXyi+gNf0PG8qj0KqMMJBulsjfciVvXj9+3ktBKhwaHi2a
8an+wf4/jztMT4ZDfWxIg7jyFmZ+c8jMySMCuixHpYYu7OCM1L+6NOyRsPD4
UYNn9jYWdvqmklodCWw928HqRRu47faknMi9KLi1qhFDfW4Dq53ov9azFgWc
1H63q4T+w3O/Gi/oR0dDJSfDk8w3G1jcRJPZjTUGet8cPbh4cR2TqwxEyJjE
wFVz9cvMV9fxm2s3D9BXxgD7xBmBDZGf+Olp7DdB8RS2vosKFx/+ibUZRXcy
VJ/CNn28WKPIOj71p9jFOv0pFP63Fqjks4qXF06vXf3xFCQCNyoMGL/jsqGX
lhQoFo44sFGlJa5gt4Yji30RsSBd8G+SNW4Z38iJfPT8Qyz4+AfIafz+jGme
7vtgIBAHSgoBq/HNi5jo4aUh5BYHlavJNyNnFnCS6cbgZncc6CH/NVq5BWyg
aq3QyhoPSqtyVy0m5zG/xEJHuEk8WFyLKnBNncdrfPqgWRkPwo2MDtKm87iO
abTuJGUCOPWFhLymmcd+O3cur6gmgDp1nqKd2yd8+3PH66r0BGhWcDsqc+0T
ZiJJ8Pv+SIAxr4HKWNp5/K6xMlMBPYNHIaYJ3i3z+FWuENeRyGdgyXPEn3dw
BlvEZiVOf3gGTHQHSuv5JvElL87DBQLP4cTB9JtHfKbwlll8pJPbc6gOVtn3
8eUMblWjo4ae57Bp+2bpFuUsfiIZ6E/Dlghc8V5Pr/6Zxqpnd3aGTRIhnnS/
8tD8B8x+2OlxamUidORE2EmHjuPZvytr5pRJQBL9ExAoNorzl4ysRNSSYD0s
Wurp1TFsP/xh8W96EjTnxSnVTY1jcaxu0PMjCU7cnsqhvjaByfN7P8SiZFBt
VbYqJxvHb+JkNPUjk+F7d37/fuIIfurdMHTmYzKk6pZduK5MwtoWIorrAimg
PNW7lflrCJ+6V9jZ6JYCDkbBli8wES8jHqmQnhT4tlsjlRlLwmX8KfWqbC+g
Kl/rye4wCbuxHL7CafoCnp58e/vT3WF8YzesZLHyBSQGDDuU7ydhmi8UAmWU
L8FvOboszqYfE0fcszzUXkLyrxDBoCESTmpe57r56iUoK8Z8a7xBxAYFhCTG
1Zewpic4jcp68Au26CoPuVQotmnke3ynF08EVhAXk1Nhabbbd41tEB9eH/+m
upoKt7vrk3jXerHSwx2aJrk0iPtF7159txM/6TvJdzYlDapv61E18XbiDnE5
6bjVNJCUqXKh6+zBvsOXL+xyp4OYDf/i3Ew3Pk57q6nybjpQlRbzytO343op
bUWCazrQdbQsbAu0Yq3Hlu9OZKaDidL2TApzB94s9jIb7U+HSLX3JX6uHTh+
Pnoj7Hc6NF20fUmn1IqFj2UESPG8ApG6N/ERIU14ULWSafPuK6g64kd9JacF
W4V2pRW6voKGbO3syi+tmLZ54pxB5iuwjC8WufunGedtfGlgHXgF+XMybofS
6rGc0N/bfb9fwdtiY7vsm414zpBhwo8nAx5XN7t/2sXYN+mU6VWlDJi59Ce4
IxVjriGRX19dMyDbtOX4L+M63LD/pn9GZgZ0P+qx/y8YYy1JLUatgQwwePh6
znkR401HQuqhrQz4RZlumDRYieMLPIXaeTKhwvrwgPuzRnxpNqreVSkTvFL+
1l34UoMH2F7Jn3fLhEZqsnb2hgpspVQx9ikzE3q8P9JWutRh2qBO46SBTKjx
aBG6q1mO8xrG15W2MqHefK1TLLEC31xf9qXizYIBwYcPq1Oq8KezO/T1SlkQ
2xzKcSijGPs+pH9p65YFcSpknhSHKzDXs5OCp7OyoPo+HlTIKsONfcJ17wey
YMqESaxOrBDrUMrditnKAumbdivobRn+LX5/VI43GybsA6pF5Ipwgp2F0R+l
bOjhm1F+e7oQC+d6rJW6ZUPtxyvPXrSW4KHJSB/TrGy44CwTvk80F9uwpB/i
HMyG4EmFaDORQnxQsTyFuJUNXRWc020PC3GeXwd/CG8O6Phxiap0ZuGbtWM1
Eso5EGOES7U0CvD89yW5dbccYI0Ra27YzsF+p/8M52blALVKmsiwVRbm0jtk
qD+YA36XGLTPJOfhxtgTq8zbOfDz00730chMrPPmkncPby4srfcGz/3Kwv/t
ytB5K+eCRPyd7vrcHBwvqpks4p4LT86Z6fVffoWFrc3PLmflwrMaqzefhvLx
UKZ7depgLpx4smy9cD0d27yPkL23nQtZvyUVF37m4PxbZY+alfMgWskw7tfZ
vfq92787uedBfKZ0w5mvqXi+ctRTIDsPuCNzOOcCXmH/lc+0M4N5sCTlZZFs
m4pPcm8nJmznwUHdb/+cLuwJTovujOLpfEhrawhNGXmJdaO5qshU8oH+RuXC
hYUk/Lvzoky1ez74c0npxP99gZ/tSBMts/MhQ5Cuyvv6MzwTRTZ8pz8fNi9N
ZaTxp2CBU3jk3EY+SDNtVROvJGCnCo8x+uMFcDbMVUe3JRFjOfGJH7IFYJvp
otJ/Ix5TT2y+G7IqAJdBqbRbL59hNULlh7L4AhA5PztywzwOL0ZdmHacL4Au
72qCbmksvnjq28w9ukJQ1OO/YcMYh90rCuauXC4EnYCz+UUUsZh+4vTifwGF
8J/X9U/1V55iLcKnzxOFhdBXfWu4czgaZ+ykL9cNF8KsavCPdxox+GvUg5Xk
P4XQ1oTX/LUjsegpzm8ePEVgtj+h8m9gNPatePddT7EITJ3mzpp6h+O3cs9X
JR2L4NJiePKRu9GYZeLeOldKEeTKFYtT4Cf4AYH5125bEUhYComlx0bhvJ3B
jZkvRXBi+s8PoeAQvB4V+V8rczGU8cj0p7KFY4lTilsZ14qhWPL1QZqqYBxc
Qf0nwLAY+oVRb032Uzwk17VjHFYMS5yI+gRZAOaYCPgnV14MTNSSdbpXI7Ex
4QbZmffFwHOz5aeRWyh+vfOPnJriNdzspp5J++uPf0c1Ui7zvwaBzmXf6thw
LH3Kfd9b1ddQFCMTsVLrgSMqrh4odHsN4k8Yk5/SheJxuQ3qiFevQW6b8Zlz
ux/mniintX7zGki6FBds6XyxFcGOTmntNfCU+Neuqgbh6p1z9BfYS+D8/fjd
n/lOmCx6hYHxRgl81It8yNEagBVO5TOtmZcA7b0P4iSCG46vMD1MiimBiLm7
W933PfCUHO+RitoS0HMPSQjX8MVnJ2ZZ42dK4JKySv+dXVssXqUccY2qFHQ7
HRToyHzxA+/zhwSPlgIvcwxOqbfHAbcORR0TKoVJkasHyJkf4zzGr/R0UqXQ
EPzegfGqK+5/9zZ6R70UBF+OtfsUWeD1jHzGb2alEJ47dSSo2A2zWYU+nfQo
haOoUCqD1RxLXDFjHoguhXydO4mMNE7Y4J9cHM4sBcXq3x/eyjrg4G5elpKa
Umi1D9FYTjbBhTGUCWm9pbAsE2JlI+yMh7TnjsRMl8LNduYMTsFHeIO79Znv
z1K4KEYVeNzHDnN8TWOzP1AGGkesYh5JWmCo8k40OFYGSw3cEUdCDLCxtz67
2oUymPORJQhqWeMntySSpWXKQPDD7Z8XztzDrxmPHRO5XwbHOeY5rvwg4OF3
Wyk8lmVwRS3w5XTNI/w7Y4KTxacMiPqdTZX+Bvi4Vc1LqrgyiFjwIky6WGPp
K8+4NnLKQJfvYHStvAI2++eUtlBfBka9CeU39lvjiG71k2MDZdCYz7pydFUH
n6if9zGcKwMBr8PpGluquLzIefr7Rhlwp+kcLahTx7Jp+8GDphwcSsjHaa9L
4PGnz1MPHC+H/+bTEz27TDEh8Oy/uIvloFiSJ+5wwgDvuNTpn5Qth5WQQ7ud
02Qo2kKhqeh+OSQOto3Imhpgbr0PnOKW5WDeQ9dXoaKNq5SsPDu9y2Hkn5NK
gY0Ekr/x94NqbDmcrlqpSFDUxu9Foq5PZZcD4wP9/Qumqtia70QKoa4cPE83
0opk3UZk7KXbm33lgEq2InO/q+DYgzd0AmbKIdBHmcHggyw+/Y9Yx/CrHLRN
PLOYulVR7aoh+4sDFWBNlWZLfCqDFT/9dD17rAKGknlZPpIL46nRwInK8xXA
n6ApocKsiex6jojdkK6A8Bp/ZdXOc5iyIed5v0YFLOov/Gsj/JN8Vnz1P22L
CpAuvabz8o02Opveo7noWQHf3h1g6SJxooZY7WqHmAp4nkP8dOfcZaQU9OXI
bmYFoGpNvEumj2YfeziH11TAf5L/7mVPSCAnAt0oW28FPL43nUKrLoP267+8
nDVVAYGXLpUn9z1EScrn4y+uVwAni6zaAxF5JCTd/LNxXyWYrV3+pNauiPBl
FfXb7JVwhBjzJOe4AVI9M1s+KlQJtfzUFnUzSmie3YHZUKoSDnkIXvL3VUGP
6Sgdvqvvraf5IvLxrCGi3Y0juptVAnPjx6qpu6roxRrvpQMelSB4kB9ZB6ui
C/NVMXFRlWAkLbhFSWOE2sZurp7IqISWMG9+ulF1dO/NuHJRVSVktGRYmFmq
o88N5iVibyrB0U+5WqTHCLm/3qLv/FgJU3j6pMAPLXToVZiN6mol3PUmRton
aKH0uGMDk5RV8J3jmtIfV2MkHFx0jsBWBabKv7KTbjxAna6SkZsCVUCpP5VQ
Iv0AaVkOfPVHVWChrO0YxmWCvug/vMOgVgUr7QRbgvAD5KWyWphiUgXEApY4
rjv6iFHG7+BZtyrQZZSzEkoyQZlXmC0rI6qgyqjR1xRrIdGzmW+l0qugMVPL
P/mmBurhuCzQX1EFIufGTJWIJkj3UOcT7e4q8D73xV3SSht939VYXnhfBR0z
LzrkJTSQ7/qivMP3KiheM/o5zmCKDi88zvtHXg0HU1Uwzy8TlDNOTR1+pBrK
/HbfxfaZIvG3SWZs/NVAUGX8rjZrivoaBbozJaqBMf+zwavGR+hhSQPfRZVq
KEpK9G4jaKP1V3eCG42qgey9J+P4YyMUFD+5IP+4Gq75vDmhRGeGjobYyI2G
7eVv9l0oU3iECtx2swxSq+Fe50XybzQGSNIqhup7WTX8eByV+5+jGbLyiYjg
7q6GK3839RuETdCL2FCW+x/39g/8o7XZaYD6sgNfhK9VQ+GrcEur16Zop9aX
t2V/Dbxfsv5P9ao5EurzLPp1rAZ6S606aboNke6062X+SzUg500n46FmgsLW
nRr1b9YA1ej956ztFqh+n71srG4NvL3ceLWh2Rh9OWrd12VXA9zv1Vk1hYwR
u5DFvT9BNcDrdQEJuFogeTD5eCGlBpijqF6f0zNDrmoGxsalNaBsxLmi0WiE
8kz0vyZ21oAMd14F4ylzNO6q7dT/vgZ+egk2Fc5YoP0RGjvkqzWQkMTZ6+Zn
jETTVANF99XCWoZCl+ITU2RafpfOkqMWxL/e4vbYJaCEztvxaRdqgTPG+KyH
pynqmJDjHJGtBQaJ4mmXFBP0a+VGFrVOLeSl2U7KORIQ766kkKRtLUyXLRlc
njZH6szXKu0Da0FVhelEYKQJ8j8tKpGTVAvWZLQLHJcsULmYcMf717XwYftV
kPU7AppTPH+HoaMWDuuc/Mv91QQxPRQYkXlXC/cWeqUMvcyQlAOfnuv3WtjH
sdSWlW6J7IK454so6yBYW/rN2qopSk/kspo9Wge9Tedad0JN0GAhx68j5+vg
WOB/Khv1BPQPs3oqyNRBBs+mvsAFC3SexEzlo1UHZgcdKGv/GqMHC/QRFdZ1
kBLVq1z8xRxF/qZlWfKvgxafnJtBDyxR48EDLzgT62CRduzpBXoz9JWLkle1
eC8/D9/EZzBHnMK7hUFtdaCc2M2Ts2iJFOX+iNSP10GewsNQgosFctf6r+H7
1zqIdHn9oXbeHBVY/pThoaiH7DNpdsJelui994/e+2z1kDCxFT8gQkA0sSvq
EUL1ULe7cJ943QyJZX/+0HKjHk4K0FANrFgg89pPRhua9WB2ckeDX8ESJfZO
r/Bb1QP/tbkNzg9GqGfqg+MDv3rwFWYhJbGYoN9r439in9WDv7IZL2HKEp3Z
NxLQXVgP37zUBBM3TZDm0aGDOy31sC3BRq3FZoSCBfviLo7VwyCra8QvAQKq
Rj3HTFbqQUX5ZqK7shVaVO3ITCJrgE3XN5225daI1aRFcOBIA/y9mrRhKWSN
5FwbKygEG+B0WdK8QKolcgqvvX5VqgF8vWJbNNpMUVZqZbulRgNMFnK6j2IT
NFJWqphOaID2ogdS9HkWiLKzaHjEpwF0hSjalvf4Fp7I06VJaIAq92tPW6pM
keFK1ifJggYQruiokJY1QbH/0i0dmhvAo3iMuf6sBWplevkzZ6QB/DxYpTqf
WaJV3iSPD8sNcCjmiaHqUTN0UiyBknG3AT6ftXKZ8zBBfFumcu+ZG0GFtfHH
bsXefa4XC8niawSpxw8b2OL39vegfWNzrRH+pmgecWo2R1clPtKKKzXC2iku
pRWCKZL4W3yH0rAR/G2vawpfMEfS2Ceq37kRRgLLuy4JWiJ5H9Wh508aIdmJ
/MMlCQJSkuJhNnzZCCcUjdt7A83QPfINdaGyRrh9zL36La050mnrStjsaAQN
vf0c8i8I6FFA4njLRCMsUNzNk9vLZyJLYA//2gifOml8r7KaI8I+CV0Nsiaw
3ZdpW6Nmhuy6Dr08wdIElEYnkotTLZBLyPTU8pkmeL3D22+xpzdP+bKTldeb
wHXrkNZ3MgvkTxNg6K3cBPRjLewVP01R6Nt7WfJGTSC3Qb6a5GaOosL5Fpkf
N8Ev3hOip05Yorg7v89MhjVB7hvhwH8nCSjx0FuL3NQmiEzNsT8oZIZSB1IK
7cuboCO1YEEsyAxlRVt/u97VBOma2eMv7xJQgQpc2P++CRKyGjV2GS1RKROT
/dC3JmA3d7wkTmaOqklz5cnkGH5L/tsq2eOrMa7yl/ERDNUn5UTfae3xey9Y
9AI/hoTuydCs+5ao64iW65YEBkdNrY20Ixaob4y/vl0Fg5Sdr6UirxkiPf/z
J9IYgwEvTL10N0cTWv2SWq4YzkzVUtNvEtAUe5oPdwSGIpa1p2MMBDT/3q71
axqGL5L6z0+CGfqSIk1ZU4EhiTdl08LTDP3QY5Hz696rT+dokvne+X8dXwxW
/IDBrTX6MUwR0PZUTc+RHxgwr9+vTyFmiCz9Ce0MRTP8tQmg7H5oivYb6N4p
YG2GkZeD2LXXHNFxn4tyEmiGrZX1fd94LRHzp3+DCDUDB+d+x5AYc3Q0a4iJ
Rq0Z/F8ci+zjNUXHTTLUh02awfRHcA6KM0PcfE4JL9321hscA8tcAjr7WW7c
LLIZuM433ummJKDzeWzswq+agVayg2fA1wxdtljW2alshmsuOpLpr83QNYGG
F109zcCMfnj+oyEgqZWIqZiPzSBM95hwbYSAbhY9OKm72gwsjIrVyfssUI7o
0TJmihYI6eOJ0goxR/xs5KT/DraAjuba1ycTFqjov+X1j0daIKZGhIVzD9/z
E6TDbSdagKrjSqHA3v0sq224nMvfAn19ztFUe/q/nJSlESHSAkLpIQmZoXv8
u0W62Eu2QKy1Um51CgGJ67g817zVAoPCZ9UkkQVqvPaw9rpqC8hnBE470Zkg
OCb/7qRuC6hPKp9WpTBBbX8ubu8zaYEZ2U9eNH/MkdxH9mMrNi1wk4ye6a4l
AfU0UkgMubbAecYDLHMHTVHSuVP2TwJaoMCZm41V1RgRUiFHOqoFdv/dF37N
a44kGB58+JPYAlf5b8qQhgjokK8nY1VmCygoD/Tud7VEU6vJcjavW+BzYTHN
BLsVKjWocz9T1wJqid/DDd0tkR9pvGSmfQ8v0RU35SwCUpPZnE8aaAGXJWLd
I3FzxFPJwqH+rgWSWyrIrwyYol+8Isp08y0wa/rKU/y3GepKUA3s/N4CY25m
XiKHCej5frs6760WCP7zSlDuKgGZP476fpWqFeRrRMPya/f4XCriWaNvBeGe
AydHiKbooHavVgF7KzzueXxg9645+vhmOdKItxVW7v4c9t7rR8XXqNs5L7TC
zdXP90mlFsi7kO/3qHgr6F/UoNrUN0MqnHLnomVbwdVMe/vFX1N0KtLIUF65
FVwublSKvzZH63/9npPrtIKfncaXor373WGT3ldv3AoC69TaeI+vhGlM7mTb
CjxMlyqxrRkyVZkUPefeCoQv3X8X4vf8rfWP5WJgK7yx17HrFLVANMIcr9Ki
W4Hl1G1VCkUCep8hNqaV3AotjIuOyWx7+jp8/yBz9l7+m7zH26jNkVegs1Rv
SSu475d9UxhljpQ24pwD61uh0EJGXmfQAp00LS+Q7GyFz57XSybFCGhtbGh6
c7AVmO5vGvTzW6C2Wz9YSt+3gun6QkRQgzmKrz2kYLHQCqy9F06lGVkgE34h
H+7VVjhVe3k99DwBiSYrVH7YbgUZ+lgOJ24Coj5osRy/rw04/xaRr4lYoHce
IVxKjG1g0/iiKOqwBSr4mq1+4Fgb7Csavy7TZoE89TtCW063QSu50+tLagR0
d2Cuye1iG0RMiohf3Os/XED+U/h6GwiafzexMLZAqyUnzn6VawOrDqVI18C9
/ncS6WertEHWcW5o4SSg2Kd6sQ9028CYR4VkZEZAxhQe3WymbbDAdGkkYD8B
XXFM2hmyawOFGjvPj3t+sH++5lKYRxukBasdapm3QOP3xkxlgtug2WE3vl+b
gPI6f6XsxLSBhqDcyYcOBOQuephYldIGfVkNDF3kBKSYe2m/bU4b1FHTUqm9
sUCcR1Wuny1rg9xc6hun9/rh91Abu9mGNiAs5pCzuRFQ81ZEdnJXG7zTV+Ts
eExAMYTC9+rENrDLzR5fZCYggw9vGA59bAM1o3MME3QEJHxnSbZrsQ2+fij1
aTImIKqm/e4+a23gRPjz70kcAY2eO10ittMGA3ayD277ElBOqsz82v526Dq0
JJljT0CuDIbshUzt8Dxqpqy2lIBu+/oqGXO2g3V6vmTyXn/mWEsNOH6mHTBN
dPudYgLKcGHNy7rUDikqzssxOQQksBPZJyjRDolyaln5hy1Rud++tfKb7XBS
k8+BztcSXTvgdeSaajuUBErTyulaoraIX+Ktuu2wocvY9wcTkAKz1QN503ZQ
Px16d+MNYc9/PvkP2rXDbXOPIZaHlkj3uG6upkc7OAnSaIl0WaL5DFLvZFA7
dNxY8PnrZImsziqsGse0wynHh3irdc9filtZvia3w9uCxCu3mwnIU0Rc3DG7
Hc7tHluYo7FEVHWl+tsl7RDNLvFn4a4likBn/f3q2+H02EGGkDOWiKUjLYe6
sx1uXTwQX91JQC9us/VGD7YDm5OpPe9efbyDUT9Y37fDCy6uGoX9lqjo3n6W
1Pl2OFTAx/xD0hJdfu8ldvpHO3xKEBPgObY3Dz/c0CvaagfHVY4/AiQCkl2w
8hOh6oBwOsmmuhhL1EeYz66n74D+4IH/fAut0L1V3bc32Dvgh+6ljzZ9VmjS
efh7D89evFYyhaXWEpn+UTiscr4DBljyD7Uv7enHt+3quFgHxP46ecdt0Qq5
7L+m90CmA9YX/Mw3qG3Rv/Ay34W7HaA/Mimk1GmDgpn4s620OgAN/2ITuWOF
6J+nv/lp2AE92xuZF2gt0TPOo9/drTsgInao4c9PK8SVEc1M4doBXP6GTEdy
bVDOmQNXn/h3QLEy29VT/DbofLG3LmNkB3jKCehafrNE1cKbPs+fd0BZ6ajZ
0m8CQrXWWVwZHSB+wvP6y7cE1CW50JNd1AHXozXXegf35rt2vW9CNR0gnfHv
7eAfAhqTH2GqbO2AWvUTOh+YLNHDAUXR630dYP7M4tr5dQJaUm/XaRvrANsv
jL5udgRk9+6az+3ZPTyK33Wc3uunvx+UZw6tdMC/DXG6rWwC8p3n77m/2bHH
f9unQgZLRE149XWKrBO8NzQcVMOtUMyPo0ymBztBk/44pwG9PTrqHHPl25FO
KOUhvM5VcUDp2wd0nE52gorlVCl3gR066+vj/UegE87EeyrGTO/NY/v+y/C/
0glin+4+vOBnjcTCbbpppDqBmab2NFWkA2plXFyJUeiEEx3P1vSuOyOFZ/qM
RzU6obZPkP8WdkKkY6OX0x52Ql85a9LnR/ZI59UdbT5CJxi06tPFfbFEc3wd
XsVOnUD2IJ4oesEGEYquZ1z26QTJyHe/h/gd0fqliq6GJ50gX1RbvvrOGbnX
CKxIx3dC++Tzhu9czohCMoPhbWonRLstyWXY26OwNvbLqvmdMPPTkfRljy9m
+adaExWdcO2LwKrEnA1K7qf2eog7oYy/9LxCuSPiUfd9tdjTCajpeMjhey7o
WclcRi2pE7jT/9hWhjsjWjq5rLCPnZDwl8Zih94BeZnnZustdoLJfLK2/YAV
Wu2gyT2/2gkK93vGZiqskfEpqzyy7U441tNzyHHEAY17DeSTKLuAT4bw842Y
C1J4f7Ew61AXZBS+9XApdUFYNK7Iha0LRlVDh0dXHNGluI1i+VNdcKw27uk7
V1uU9eN+CYdgF1D0uecXq1uho3fqS79e7oL4kPP812PsUXgeZzlGXVAc7nPn
Z48z+kflUxEj3wXPY4ecSuMeIweD2UpDtS6oq6LBwoPOaKFJpvqyXhdc4xhO
6Npbr8WRU7PftAtcWu1ljR9boV4X6roJ2y7QWinRMrlih9Awob7ArQtWGngq
z8w7ofIL/Q2eAV3wgs3gUAeFKzodcaFJKbILkixzxD4HPUaJS0/xyeddsPpu
9C19pSOik/vVvJ7eBRWDrL3NTjbI55Vma0dBFxyq3HT8Q2mzNy/Utj2r7IJ9
X/ZF13k7IhOdYx3muAvu+C4fIzY9RhPVXp3Xerrga0jjnbU6V3Tn8EwXHakL
+KPJdk+OOqNmW+m9X9wusL98Vfb2ih0S7st6U7rQBZaN9P+6u61QztkDvf4/
umBrPpFo2GuP2IMs+u5tdYHZmmL+ao0Lipjt7eej7IbJiSbbBkE3tCt5fvA3
XTfUHs2oLUvawy85Zugtazf4lWzrkm06oMXNdeKLk91wsYuNqzjCGmmrawzb
CHRDq7Y69VMRO9RXUjMidbkbKPal0c8oOCMpOo4xZtQNhTrvKQRZ3FCFuef4
/K1uYEl7XBew3w3xdU5NVKt2w+0UIakmPmeUdOrG+1DdbiBXtLpbdsQO0Xln
ftAx6QbRtZil3ww2yPf9vkkh2264xEpGUuhwRD9Fzaf+uXaDjGZB8lyfKzKN
ezs95N8NZeTfdlMs3NH7H0KzGRHdICV19/V88mN09070nNOzbmCP0mvl5XNA
LXlrn26md0P2gtHBg7LWSGTfvYWjBd2gV9Nz8wSNA8oxqF78UtENF4TDVHOp
XBEHPrrU2NQNdinD0l9tPVAkh8dyVHc3mHpNFT/jcEdkjye/PCJ2g3iXFBol
OSGnYfgq/KEb5pIn+O9O26DPFzK+US3s4Zcw+51Z2A7pRFD9GPveDXUzFafe
HHNB/Uumq3m/u0ErbfYQPYUHkpJ7s+ZO0QOPCYYqmUEeqPKV4M87dD3w6P1W
au+9x+jMv8hfXKw9MJk0O/BFxB4l66xurJ7ogWPhS5qxa9aIvkbtvzb+Hli3
/p7rsKcvv8NVv+NFeqD94VxOwrYr+mXLtm0q2QNnHv76JHLJAz1IZ370dfEt
TKZpGqrL+aKDxglqk6tvwSCCGEI9aodqzxyVG9h+C8J9xCIvoj0yXkm+2kzV
C7qZHdH/3fFDTCXHBUrpe+GA2etU/jthCDukc7462gu0BxJC+GiiEUGUhyGW
uxf+FWpkP7eJRGzb2eQBQr1wo4cz8bxgMOpoOvvLUbQX0sXCPgzouiF7v8JF
Y6leWDpNdQE/2fMrufPvNBR6oeA81dNC3cfoLXVZ7817vcDKl6PpeS0IPe4T
wVcf9IIr9v6yfSwS8cZUl5417wWN5UrWdM9oNKQunsnu0As6vTPdBdrhyIut
MYHWsxfaZa8sX/DxRwIfUOifoF5gXBs78OeAIxpPbXX/Gt0LbE1vz1dn26BA
Q1nryaReaKyZt8p/4o0u8nU/HMjsBQvDV5ZZP0PR5PJttebiXshdtzsuxxiN
wor7ZEtreiHmohB11lgUErVXvvqqtRcEbPT5Cx+Gok+XSfyxvXv5nSRSs8W9
UMzve5wBo72QxekuelzZGkk2jtM7TfeCQg4tHXrliL746JCbLPfCPmPlp7zX
A9AzmcmfGj974Xig75FSvggkc+DR4s2/vUC0E038/S8arb6dm7h6oA+WR29R
h3NEohdRJr1nmfqgVOBe03ZVILqtttTEfqwPOG4LUppOOaPNI5altKf74Nul
7fbMXQLKfPct48/5Prhz9n6SBa87Unlpl/BVrA9wU3UlnA1BO49+hkxK94Ei
U0vBz+golM/r4j5wpw8ePY9MezgYjTSXfls1a/aBc39LRfbDMERR5PGw9FEf
qPOIN27m+qIS23+qrwh9UF/3wzV6zhbpifjJxjr1Qavp3OXnp+0QzX+UVwO8
+6DlfuK1pR++qLo+mN8ptA/28zHbbZSEIUNvGk6T2D74WXyiePBPNGKQjqDX
fNEHN7kYn73ziEKN+xjIb+X0AaH/oXcOKRiZv3n682ppH7hwS55IuuCGjkSy
LJ6t74OlIOXaA4p7/z8qzyfYO/rAiCjUJfnKGdmycPTSDvTBOv1y0PZGIOKc
eNH0Z7wPvpyPm2gNjEQ9KSdKv872wVezvAlj3hjk/DAjY3KlD06f5K0IOxyB
uHlOJwxs9EHFX5bc0mp/NLCYG9K82wcxc2LDQX/tkUeBgHspTT+ULVP8M3pE
QGdtiq1eHe6HrR7T1zFTnmj00sWHscf7YYHQRt6OQ5H/RrlqwJl+mO1EBwiW
0ehC3RVZp0v9QP+FmTGOEI0+etaKmlzvh/urYTb3GkPRE6nr/Jpy/fA1aLaD
rM8TiVLhY7eU+2HzSHSperkFmuuWohfT7ocwXfmiNCl7FB3eTsZv1A9+xvR8
5Pb+aN0obe6zVT98oPxTe3swHGlKeHTkuOzF3wVl3WePQfUs93NMfPtB/o+G
EF1nJOL6JhzKG9YPfS8cT1UHBCH/TnrCp7h+oLW+tS/JyQUtvPyimPGyH87P
Y8tnmyZI3qXrnEFuP1xdeEtxhM4ZFSllMJws64e/TCf+MnUGIsYz3mtT9f2g
f/Dm/l3VSOS0qz38sqMf0reubtIdjkET41eq9Ab6Ieh1r4IvWwS6Xsr0/NhE
P+z419E0Dfuj1NBvru9n++F25fGOc1X2iMLgjU7SSj+oEpPFgt6YIFPxbAmt
jX5gN3dOYOR0Q2+Z/LjYdvvhvyd8Dx1+B6PzX/TIxqgHoN1ohqPEPgo9bROb
i2cegBBa6/6p1Gj0K5mlQ51zAOgbjxZgqjCk5biazcw3ACfvcp27ReGLGhX7
QogXBuDXsxvSHucs0UnePIsY8QFYznn94ZC+OQrcCVBUlhkAidXgRUYfL/R5
5OE5+rsDEGp/52TKXj9RKL7O0K85AITmDI99p6LR6yC2tfBHAxAUYTXYlBKF
mB/8JCkQBuCasghrbmIIchEdrKRxGoDdstMUFip7/kdf+KzHawB+DP7UPNxh
jCQ/B7uGhAyAT+a4qjevNUpvNtS5+XQAtPJkSYfJ/BBVIpLYlzIAAQMzK39z
w5C5HQdXR9YA0IhmzMCDaNQrv7nr/3oAXuf8ZeY+E4nOnyLN3qgdAPlmljWD
pUAUu1XcTtY2AKlKssNu3U5ok/gku7l3ALJOJSkHdj1COgUmId6jA+Cux9p1
f8AeYf8bFpLTAxBbfkaAf6+fndI9rrizNABFfibgSB+BAkW2hBrW9/D+lC/q
ez4aLR0cpXffGYCFHVc6E5VwdGe+dFVs/yCMmEX2Pzjoj0obI0j/MQwCz7M5
eae7toglwbyymn0QqCpzznH6P0SPrWWfOfMMgpqsKdfTDGf0Xu6k6+Vzg/BM
7lt/lVYQQlw72j9FB2G3iTFHmy0SZWyOXy+XGoRvJUJFueFRaP9gxXF7hUHo
mxx7cp3zCSLkRu9euDcIz+XExEJ5vVG/j+Xsd/1BGMrXNShSMUUXtW61F5sN
ghwnH9WhOAMUf5En28p+EMxzO9evtLuh39S7wYIeg7Ckp2nfLRKC9Gbfm38J
3MtfVan6JCMStdRVK+RHDQJTW6V48KNIxBMbK2SeOAillw8nXQsORsEEG/oz
GYPwWT4w4Qy7K/oirbC6UDgIDx3dq0QkHiClY3ykrKpBiPWciVt+YYLKf5JX
GjUPgunc382aT16ItW8ygfvNIJzwf1fGXRyK3LLqHs+SBoE3Mbxn4kUkEjrU
a+00OQjGDyguSl0IR1POH40OLA0C4u//7/QHPxQz9U07eX0QTvNXXr73g4Ck
b+0qn/s7CH48oyWztppo+z41zwzlEPh/Ua2Z3JvP1emYUvlphiCEMqLq9WYQ
KmphZ3ekH4KFAzs/Z19GoH3O3PGNh4eAu6fb8rNdOHrAL8iwn30IsuMSF6/v
+KOaSZEwZa4hcL3+6JXikg1ijJXYl8QzBHnOp1dS1FSQxU0537mzQxBQNd1J
GWWP2rbv/hE8PwQnKQ7vhm8FoGMlmi7OIkPAoJinyJgajpyMHq5hsSE4IxB/
+3JpOOpnM7eiRkOQoRjiwMkTiPj67D6rygxB5sWyOOoKe+Tj62aYIj8EhzYL
2l2mbqOJy/6T83eHgDH61rbgnl9eWg7TOq8+BHJtnX7nvvuhsJdxw4+1hmCg
ac16yDcMfVJ9odSqPwT2c+RENByOJPZnv6E1GoILfyPnAAWhhPpi2XvmQ8Al
TSk5e8IJfbepbn5pPQS1+zz6JUAe3eJpvvbZYQjcebrctP8ZovTx7qqLrkNQ
kWAKDBw+aCt86KK71169Ve11dMRQpCb1rrDdfwj+UYdw6+/NO4W/ZvkOhQ5B
+inRQP/PQYgq/8srzcghkPpa9OqKmgvS1//JmR47BF+/z9ZzUCqiaqad58vP
hyD8J3PxzLwmYuyiOizycgjs/A7rs+a7IQv3Q1GeGUPAF3yALtciGLWdZ6Xp
yh2Cc6e+nj9HGYaOfeIKZCgegqqjPf2z74KQ0/Mzu1rlQzAKZwcsZh+jfsWL
7hk1Q/C5nyti1VIF8ZGJb6w0DoFoPrt5D8gin8obdlfahqD14o7FYoQTmjBX
WPHuHoJqyarFuwyB6NJxddOeviGIYVl4fOxVKAoj6s4ykYZg5ohS9cGKIPQp
yFhPd3wIyo7eoiGpuyGJa9bjWR+HIPCIvY3Mk3so4buz2vfZvbiad6ii/XTT
9wzv/qufhyCsYZ7tcKQdunU/RN7v6975tsS8vV76o/SDMe1v14ZgPC9HY0U1
FG01JyKW/4aAlurHjdNewUjN6VWd/s4QlFy8leb60wMVni24nEtOBNkkHZGe
TzqIarK8ZHU/EexLO5NW0A2s/7RB4BodEY4cMJ1o8bZA1XId2QFMRAgeqyhM
0vNDDNt9J/tZiaDFcKdxQC0Umb8eTWHlJMJypztizwpBrYZTrI9OEcHH4LfN
A3EfxMH2+Wk+HxHIq8kuLJQYIMfeH3Q/BYkwokUj3MCvhPt8fodIXCICaB9T
KTd+gE5fJqcMFiWCJNccy3EfT+S9ROM9eJ0IZbI5cjQNQegOdagZliLC0W2Z
d6ddgtGxs/tVi+WIkDXD4G3c6Yu+3Aq89kKBCLmlNo7W/lao1oyCN1yZCFe8
qi8eeCaDg0N8D7nfI0Lza62q4EsyWCP336a5NhESNdfosrlMEW+358z9B0SY
ZTr/JSXVDa0vbr+5aUSExgeyobbVvqhlv1vFFfO9/J9FyC1pfVA0338veK2J
QBC+N5Nn6Yge3HQOPuxAhHtG/EpjjMpIyPSnLcVjImz5DD23zb+P/wTZa695
EOH0/gyfU81n8NvsH9IzvkSgeLqvRHzFBCV2WgsNBhGhgIKDc3Avn9nCyhEc
RoQ3O6JH/pU6ItF9hN2iaCIY6xpayV0wQ1Snl5ZS4olgeW57u3bwMB6WNSWF
JRGhr0WrrPq7Ds4wnm9wSyVCaGjoqJ8vLbILNMw2z9zD6+LM4m99M7QHXNT9
PCJ49DqyS8w7IPqOB643i4mwoDP8IK/eHn389NHgSjkRBnrvljo8MUAFlLqK
vDVEWLOxZ9M9fxO78by7fLiRCF6thpFSFnpYXuY+F0UrEWxuWOsbvRBGrEaj
B9Y6iZDcQPS8qmOO5v3V16bfEuHLO1rtHQYHVJFBfD8wuHfelgPjXKy2yL9N
uaNpZE9fhx3m/V7dRypz/cVF74jwrFtb0YD+HuaiuPM8ZYoIAV/O3XcK0MPf
Tr31DftEhAmtP2OO0VKo8YY8wW2JCHcvt8/9GjFHYQZd6ubf9vj2LDUwWrND
2n6ykvfXifDLuKGSTGNvvn3VxnfzPyIwqi1+WrKXR5stUoxXdoggxWnvp/BL
F3fO4C0echJ8cTzDyJugi+PJJD8x7ydBa0noKdK+W8jwZEMf+UESUNUofRXt
MkeXpMSrVxn24ocbvCiO2iKyRzVp0ywk0Pj+jYlZ1gQN+Fx5MsBOghQO0u9O
D0b0Mq3CoYmLBCTjCFY1ZQNs1XxJr4iHBG83mY/2/9DG16ZL5FLOkiDgdq9k
gM4dRL177kLYORIc9Urm2eI3R+NcRUfdhElQXPLjJO1bS5SDBCjMr5Jg8GJL
vsT3h8jpQd6KpgQJ/HrfJPCEymBpb75RuRskgJyqZOZfRpgpNQtfvkkCmsHn
SybT9/FME3cejyIJJtzo5ixOqKDXk+lPmVVIMLcZlTW6Y4o8/3J5kGuQ4MAJ
/4sNFOZI8fhL41VtEoT42dkMkWsgDsljStMPSMDfvxi0tauOl/SSrg4YkWBa
PLz/1DsTXOPJdqrJnASOrnUjFXkaOPhFAm2RNQlOb1WkZV1XRfcaD/9KdiCB
uu/UMMsNE8Tz8enkk8cksIjldBIiGqGjHQLEOU8SvHSa7tsXew3RF7V3XPff
q2e+lGPX2wBTxevVxoeQYEPp7evGCyZ422Oj8FsECXxolIQWYq7hVaOotJux
JBi42fKPkkEfLSqeiUt7ToL0cT+X6K+G6KNIS/DvFyQo6uMIl99VRKRj2u6q
GSR4c7Ystve8Lu6hXLcuyCWBglqzkmCTOcYrYQaUxSTYt0/k40bsfVw5zKOh
V06CG4Vr+nc/30H5DY3yVTUk6I9NNC+4+gilZmpI0DeR4D9t2ca8ODUUH/79
glkbCWpjve635KvhMMcQnpZuEmyVvXzNpmmBfXVPsrH37+lrm/s4720j7CJT
R+tAIkHhjcyysfGj2EpQ7d/b8b3vp4ZYZ2rvI8PDK2s8kyQYkzhG37Ssju7/
CVjwnCOB9uBCdEWbHL7zifPd6GcSOP/dqClKMcPSvVV957+RgIdy4GHhNQss
VqHUErJOgs636iTnn6r4fMrnipn/SHCFUX77gb884g3wzRX/S4LnpmfsPo2r
Ig5L9pRYimH4IDGT8vq1CGZUL49aOTAMB0oNomSyjPG+64r+soeGoSngZCf5
EWu8zT3v/JJ5GAyvhR4VnXiEV2m9LDbZhuF+Nvzl6DuMF9eP6CsfHwaLHJVu
vn/y6OP71yp53MNQLHYix3zfUUxquyVLfnYY+NE4o4eaAe4pmLmqc24YsLmw
ynsLG4xj3QQrhIdhPE3rrOyUGa5wZz5BJ7ZXX1fGBjNJGecZFjKbSA7Dvs72
Tru1iyhVQXY/lh4Gh+X78lbMjDheeHKLVX4YUtUTBkPz9HAYh8s327vD8OP0
7H9JsdbYl4JhtkdtGCLWcyXnoq2xy5fckVNaw6DK4PshefIBtiJJ9bjrD4N5
WKIgY7Y4Nqh/1zBsOAzzx9RvXVETwpoZDiVC5sNww4WU81RZC98JO5gZZD0M
l4Zn61ljLLG0Q9azKYdhcFoz/ivVYofFdCTDrroOw3DYDyvt56b4vPSYV4zX
MJQciS3h6VHDvAK29sv+w1D9aIUvefsG5mCmNpEOHYZn3E6Vn25qYobtdK2U
yGHIX3XcIOzxSzUnfudX7DDwqu/QspXY4+03JLibOAxXH5eVpm1b4dUyS5Gc
l8NwRfPB/avUj/BiEtWZ3YxhIL0VD+7cUMEf/V5yaOUNQ/QLk0n+GU1MshCl
LysehrWhUyGvrpjhHtVBctqKYXi4+pFyNtceN4mbbxjWDkN8w18jCg57XH6K
fLmhaRimLpUEiJWa4jya5I8s7cMwYbIk3UTSwalrwkPWPcNwypTqOSeTDo5/
19ve1T8M9Se2Dz35boIXFJlK9g8Pw2D/96jXlPZYFGsm35wYhs/CbffTGB1x
6MUXQcGTwyDsrpTvH2+N32XM2nXNDYOUzyG1d75GWODIGb39S8PwdtDwBLvJ
Q+wZYnXr5rdh6KvhyOdONcb9W2XCwevDoEa13E1jbIu5rP473vXfnp4rVlxo
vjhi2ykJmv1/h0HgQmMRxX4H3KLi/0uOYgSuJU60/DAjYKb27umgAyOwJjus
TKAyxoZXDvV20o0A779zlPFnTXBFrlr1PuYRkFobdHS+bY2pOBJfybGNwPlR
hTfSwY5YM2IyIohzBH6zLjxJ03fCuf+4XTtPjUBvVIz5xUQ7/NvO3GjfmREY
PkIrn//CAit8KlaSExoB2w8GjlovzXCKxk/xoEsjcFzvppvTEyv8tVvsdKfo
CFiVCn6qqHPAkte8GfdJjMAB36euDgnOOKqo/Y/sjRF4bb+ryhLqiKe5aD4H
3hwBAR+y/PEGW3zxqRKpQ3EEssgGBZ6mWmI/yvgmKtURUPnL0NfkZI1Jzu/y
ZDVHwIJIOc/M64B5l7jiA3VHgAG/dFerdcbOOsY+HY9GoJuzi/zh3ntXXz6B
ynQEvicfs3nQ4YCPwg8NWcsRKLQJS16+Yoctyi7fCLQbAZmFhso/Xba4nsdd
qMN5BAr6H2/PMzjgWeuzCa3HR8GuY8pMjMkd5yl++p7DPQolEYyBg4/csQ1/
qnzEmVHgPs3xVSvBHV85oJ1hLzQKpLA/05EZ7nhn/vCO5qVRoOioy2lpd8ft
bQMaEqKj0HG1Pb3gizsOS39Scur6KDh8+y+G65AHVvWWpTkgNQqTLOz6R/k8
8FG9XcOvsqNgTnPMUf+yB54Wr28k3h6Fza+L8YfFPXAOmzNrjdIo6JnOfP/u
5YGtNi7YvVAfhZvpPRwThzyxyPCXN35aozBec6M1yc8Tb5dm85jpj4JN2OAX
10xP3BL1yOuO4Sict7t8UdrGE4dYHRu/ZDYKy8xH2AcPemIlhbGLbFajsPXe
2Kxi2AMfOfs0bMduFFJy88lO9njij/vuzM86j8Kj4d/6DmbeOOPTftTtPgp3
NobVZQN8sEVr6/Min1HQotUQPBHmgy+mea49DRwFYTedR3eCvPGm51XFx09G
4be0xHI3qxdu0lnP0osahVIbqiP6Hp44UKz43424Uagevi42bOKNFVnNtc4k
jsLXex06p5/7YuZf3OV0L0chPvvERwk7PzxBnDy4/moUlEXWfzAp+eG0kkST
8ZxRyHxBHX/6ti82jVRvbiwchX5Z6ylDCm8sZEnPnlE6CmYfQ1uXLnvhn/Jv
HEKqRmGaYolIpe+D6/kC+6zqR0Hff7H9DqMfjp2epjx6fwwEaqwlvuEg7BtU
ZWamNwZqUsx6Z6n8sI1geG+1wRgITsvKf7vrh/WIjy7sNxsDOa9xJslvwVjh
sWichtUYeMR+dhBkj8Rix+n+y7IfA+21yIMZN2IwX/uszi+XMWCA5af7qqMx
i0UNlvEcAxvV7+yDTOGYgiGSO85vDEKubLR+fROIVysNg+eCx+Ar0Yryxawv
ntIR+3IpYgx+L594trYcgPvI6JX8no7Bg2dMvW4/wnB9zqeyoWdjUE4RBPWe
MTjvTt2Rky/GgJvlXM+JqKf42XqUm+2rMSg5HqrvLhGDAxONJ3HOGKTExpUp
XgvD9ujaDfqiMVCMPu4T9jQAP5hnyNYvG4OLJxs90sr89vxlgbq4egwuy3A6
apmE4GsXG6x2GsZAOCi5uV00Gp8dixlSbB2Dw5ObZTduxGJWT9PLKV1jwN5T
IPLWMRZTcUskfukdgyc2M/cPccfg9W6mHXHiXjyfTVG0PBTPWH9++GRsDHI/
aaZNB/rjgcNN7RMfxoDE6MuZ1xmAG+tiz5ydHYOfP7juJYWH44KH5uGPF8eg
+AvIyzU9xYn70I+ulTG4plcb+qomDgcXHlZnXRuDIQOqluWPsdhJdbnaZHMM
zi29WFTmiMaG/2GOqj9jYIopf6Q0BWOVl/HeVOTjwHeBvFjimj9GMoQ59f3j
kB3OvJC1HYyFluFm5sFx+NsvlFR6MAZzRB8pWGcch0viPPKH9vajvrJySJp1
HJq/Z9461RqPN9+32D89Ng7LSYxSC42xeN732ejMyXFYOPHp2+iePkh8VuIX
+cbBopKiPKQ9ELf03XjpIzgO1DnJU2+0A/BrBzbywYvjINAQErzFHI5fHP1m
zCU6Dr4SbSf49WJxGG7rsb4+DgoGfrzjhgnY1ThRqElqHBz13vxHLpeATWlt
YuhujkN1MocgPXMsvlcq80tXcRxcaVQVZXzCsLQmu1ahyjikDId6M6kE4Is7
3xu2NcYh8cOEu9FqEObK6DihoDsOMaFfm9laojGdfHJA0qNxeNJEL8ESGY+3
v9l+XjIZhwfPY7VbU5/hpTg5RTHLcahyediDRRLwmPixkhC7cbhx7kPZraUY
3DG9yjzuPA5qQ+sMh/JDcHlQlwufxzg8TGS1FWANwOmCL947+47DzEGtbM+q
JziKaI86g8aByF27qncvFns+vpXBEj4Oq7rd/etOzzDh+PH9xjHjcPd2+t0f
Ss+xVvu6RUXCOHD2XfwbGBqPb1r09FOkjAOhT0GftTIKX2ZIvaSWPg7/PNO2
q48GYe4qx4RX2eOgbpPjIpYRiBl0b2+tFoyDGO23DAvlKOxgFd+7UDIOxug3
B7tJPB7zmn75vnIcUqM+pHhUPsfXogXsBuvGQf5rniKp7zlOTXeW7sDjcO88
zw+znHhMUd7CUtc+DrUZJ7tsfkZhk/aDn4t79upv+xn2zDMI94xo1mX0j4On
S4d48flALLT4Kvw5aRyKv03Tsb2LwPL228fR9jhUqkxJcImE/49i6w6n+vvj
ETIaSBmRmZAkpCLnLSlERDIrhIzsvTfZeyuJkpZKKvrWSbIyo4jr4m4kipCK
/O7vH89zns9xzvv9WuecPy5+GHfyh8o6k68oxzuDnnl4W3528162YdApaJ/Z
vlaE/e6M5otyDUNUt0frB+cSPPRC1oVv6zAc/vJ19rY0s94O36Mc24fBL0VY
1HVrLr4x8prnr+AwLIsoCdx+mow3zGwa/y46DDsmfxmKicdjp1WzJzTJYdhV
42d11DsFx1x7oJNmMAyfzSe5Sm5dw7TiZYEY42GYy1g2yXibg/XuH58MODcM
O5MTYg45FeH7/6U3ulkNg4RX2lOnI6V4a8+XtEsXhyHvS+GZJIUS7Dcudenc
5WEg+aaYdVzPx4PfPZX1XYbh+DvB4+Id6fgISyOrlscwDElfDGRkxOPr/GyD
B32HoXHlaVsCKRFvkDG5Kxs0DEnt6FbV02zseKg0dFc4c/3smF1irYW47RTd
kDeG2X8aAb4Yl2IFK+Xd7InD8KtOxoo8X4Iz3cJ//E4ZhrHprxuU+wrwfFhb
81zmMAQEdJoe4crC5ul8BdS8YQipsd3cZZmAG25ccBkuHobgHXb2sicSsOjj
u0d7bgyDoc7qgWy+LBzdtMDTXDkMryhHiYoLBZjSrzX+4u4wHPlsdMRyXyk+
RU1+8uDhMNzU5EmrTSnF9xc/xVU8HQaDo2cFg6YL8RYO8fMFL4bhU8EMdfBh
NvYRdN+b+t8wSJ67Pd8bmIg/yz3/HdXExCci4xwmxeEjGhu6/VuHobBffHqk
JB2XGRqWu3YOgzHv/DxjLh//u1Doc7FvGKbvV2Z97S7Bl73IOmafh2EmD2jC
s6W4LVpxh97IMDipjG/cTyvC8jnBk5rjw2C5bftA8uccnF7Z3KhMHQYbnMVX
Q0jCP55tSd8zNQzDskq7RfpjcXiGv2vCLJPvJ66+W3elYQ6XEV3qwjBIcz0S
bf2cj7O1QVJnZRhYH701IPOW4l0id9Yq1oahbSgycO59Ka7+yU1YZx2B6xqZ
v2WY+aHc4/PiEucI2CbPVCr/zsT/VQ/lvtkyAnXXjdxG++LwqZhj3qLbmd9v
TRt8lkjA/daVhuFCI3C/qHYQnmXjC6qccgSxEVDyitUNLyjCjM1ebEelR4C7
ruf02b+l2JfxiVQkNwKCYdEn+i6V4NW3R98s7x+BQdZ1rxov5nlRcrPkvCpz
vhhvw6xwMubzZw+qPzICE3kLLwSux+DrRlfNtqMRWOHz+sg7l4z3yvYr+Z0Y
AbWJu+LclDxct67O068/AuxXefKMc0rwsZHrkweMR+CylkX2p+ZS3F7H2pJ5
bgQiTKL37/9eiM3SXStmrUZg612LzLfZWZjo3BthdGkEbqk+ig/xjcMuoGb9
wHEE/IgzO1Rl4vCCUOkhbrcRmImZuwysWViP3iHEkj8C7w1jNChVuXgAKy3Z
lYzAad5vTzmfFuMLxfn9uHwErJS9VHfal+JJ3z+PxG6PQAv/0fGZ+ULsZ2if
GnFvBGp3u9C+dWfhVZm2K6O1zPEbvr9uv2LxtX/7TmjUj4CvQK155EbmfWw4
R7ykkYnfqenlWyrp+PrTX39/4RHgsa3unnUrwHvTLg5btIzAhcKgnOqGElzn
9L7++YcRODTt67iXh4kHks8R6BuBws0Rrzqr83C7YJan/+cRmNObGXMXT8Zm
84sGAyPM+sTj0obEmffPThvZgxMjcMaErlBYH49dbjexZtNG4PXuxi9lMjl4
IVJ2Ym56BFxzm6p6gopwpGX6f2e+j4AbRX9H0I0SzHlwoejhIrPens6cR1WF
OJfbKoDnzwiweNBfRNzOwmK0N2fd10fA5F+OXc3FWFzzRnr/BzYCLComuHDc
DMcqRSlcctwE2Ga6RU17awp+4/OdnrSNAJtXNJRvTuRh/dPnm+kCBBCVD/f/
L6UYf5L+r1xXhABaIjyKUdbF+NKaRHiVOAH8n7PrvbmYh6eGkixZ9xCYevbq
fIuvYf8n31QdFAgg13YksSIuFP9LMeNtOkCAw2SFE8IDMTjZseHb7kMEiM9h
yN6eyMTbtXZ/iNQggMkD4U/XZgpw+c6EO0QgQMCBrpQ90cU4IawwVOokAdru
i4qoijDPx/GaM66nCZBewNhrdCMLn9X5T7LWhABcBttL1Q1isXp1z9JPcwK4
0uQ+1r8KwqLcpA9HbQigEf3EINclAbN6LdyItiPA3lAplGCVg5m3Zr9WJwJw
y73bG1JRiPsOCZ7icSdA+ET7h6CiIvyiRF7E1JsAHkJZL1n78/D1Nc25wgAC
GOzzf5TRl4LjHIybiaEE+DvUqGuxGIpdW+0LpaIJwDjdK8z5NRgby/u7uyYQ
QGZxxDv0wTWslpGIalMIIBs6zih6lItF5ov4FzMJQCTZ8U+/KMQbzt9nHM0n
wKbzp99NyRZiRsPrV9ElBLjYoNeBVXJwt2hfZms5AQ5mzJ0T2Z2A62LIl3lu
E+Dmbz4xTuyPi2k/1U3vEeC/w19+1IeG4yh9Dp6iWgJk/jro605JxU4PhSaI
zwhwP2YqOaMsD5/m3fdMqpEAHy59DZvVLsQHA7SuuWICCBnYNvzRzMdCwya2
te8J8ImZpKdep+N/mpcPLHYQIPYyNXrjm0hMuxmwUaOXAOKZ5TuuPfPBnRuv
fYn+RIDvMYsX6o/F4CcuJQ9ahwkgIP7W6RnOwIVdD6J5xgngHVzQy8mXjyMO
4HOmVAL0bbzwL+F4Ab6c93Fv0RQBbM6LrmbM5GD9X5S/xFkmXsGEKvdvSVjJ
dqlP6icBRn8tnNYeCMACbzfddl0hwHqrxlLjLx/8R0okpHaNAClt7coW3PGY
lKRotMg6CmezMmwusWTjtq9IQoNzFNz4JnMG2PLxQ2PTxegto2Ct2aT9ozkP
59U5drTyj0L16zv9qzczcUv/suvisVFQLjtXwGD65f4hLi0NnVHY4DQVI7oj
BGeX7OKL0RuF24uCSsfJTjhobT+91WgUzkyvVT67FYwvOmg38piNwi39F3sG
VJOxbqtZhqnlKJyU7rycuyUHK8g7OxRdGIWwUJnT6VdyMW9G8KExh1FIV3n+
nE00Cy//SOGSdhkFtUu6RXxX4jHR/PqYq8coKNLM2z+e88LNDbVPa31HgV4i
OWSOHXGN6LvExaBRUBr8RHmgHYEzYz5Za0SMgp6PfPIunlQcQKPvj4kdhQcB
Py5kkLOxjf4KS1vSKAwYqCW+pmVj7YfcQzzpoxD3+hKf5JZUvJdX7L5pzih4
HFA5c2QwHMdN3P52rHAULIYmHxVoX8bjtYoH5MpGAbeeGg6wcsQaUfW+2ytG
4ctDlsCr6+G48Myx+n+3R4G3sjBVriIZL4i2LE/fGwV7sndXflwWPvPN8Ohg
7Sj44K6QvIUsXPPfp/CmZ6Mws0OI/cDrFMyWZosfNIxCfdz2uHrLKGxvQ91Q
9GYU3u2Ey8VHnfBr+asn4ppHwUquWPDuTXMs9Hsh0bN9FEhltOlA7gDs3xHW
YdU9Ct7rV5ZfeSTg3iJWHt1+Jt5+W7fdPZyOFVxSzxwYGgXJyYdGI0czcZI6
f7bI6CjUPjpzi/QoBVPYSwfYSaOgq/arjO1QDEaDkjvmaaOwi8jirXrRBZfe
vmdJnB4Fz4n9jxxUtfGy/8HS9jkmX8nqkgeL3LDpiUZi3U+mviiS99WZfnjI
f1y8fGUU+ll+bth1JxlzUjocUtZGQf+PDlsfdzp2enr2dgArEdoV7UxdpVNw
U8www24TEdaryXyDP2Kw6Fl7ecPNRAh7sfK1eeNVHCI+dVWdjwh1Ysu6x3p3
4s9z3rWSO4mgo/K0JeCVNT6Af/3YvIsIh/v8HbFJCE7NiFZdEScCJ4tqjiE5
ATMubAqiyhDhUs9A/kX/FKyjmNXQK0+Erdzzoaliybj8786/jUpEUEe7yvhN
YvGfznKtO6pEOEC6Pn/zuhe2KJWNyT5ChLI30iVFo0tadW61zeFaROjiS2YJ
jj2ItxxVZ3fRIYIQm1/i22wf7MqJ9cz0iHD3bF/hI7ZY3PLlZKqWERF+buLd
V5+YhCXu9nTLmRJBvOTf1veVSTgi6Pw2AQsilIxtqPx+MhYPnxwzXbchgsn5
0guxwz5YdYdz/lc7IrTWrWQZ/uDHmbRvQ4NORIjiUt56ekoffX0WIPzOjQj/
GpRKJPsu41Pxq7YPvYiQ7Ufoe24chivNEsqL/IngTpxOaTsfj/9JbibHhRBB
+ZXTsPabBGw9nyftFUmEOxcPnBz7GIPrm3ZdsY4jgl2sbGLqvC/mza6q0b1G
BPN/B9m5TFSwh92+mQPpROjQkH8SGmeFOpSe7d+VQwS5mqZPooN6WOafhg9H
IRF2SIRy3Gn2w9E9zXXzpUTYHHi+mmsxGhOun14i3iQCyaBrQ294HFb3GDjc
cZsIQeuT2QOUaJyraRP27B4RZKVMBWxD/PAcN+V1eS0RVFPtded1j+PTBLf1
lGdEsDl+8snbF3bozr3544ENRLDcvmUq450u2hAammD/hgjoxbhfnoQLvqDP
0m7YzPz/tHeirHyhuEEwhetwOxF8vUNiOMejscAkr5FUNxG8Rh8tSdhE4qKo
Z8XB/UTwg6NDZClfLLLTgt49RATr/er/sZtK4xuPVg5KEYnwm5dP7eV7RyRx
siwqmEyEBpd8rrlcY1RF1OrqZhDBLaE6MTjRGcsGkASlvhGhcpdVsPqhYFzD
E+8UPE8EFclz1fO64Xhf1Z6n3ctEOCSjdfeBcCDWsdPYGSw5Bk7v7oX/iXTF
rcvEy92yY3CvM1WHEXYM6WdGP5ZUHANO4Vv+v3zdUNceqdWgg2MwU+7Nsu+D
EzJ+06LfrT4G6uxb3d68VcP95i4FksfGIHyLYszrC27Y/BsXJej4GPQGV7rp
YF/8Jf6hUvepMcA0yu2Jix7YZpdJuKTRGNys4NP8dNkQ+35xJHUFjUHMprsi
h9jOoUUvjv2SEWMw0WMzySXnhYI47oUGxY7BTvmsJmVLb/T7hmFbV9IYpC9+
o+94a4siDs3xS6Yz19enr/4npofXu7PtgnLG4Fnrv6l9OfY4zkn1YVfhGDSK
nTFY5bTF7KuDKxLXxyCPRjpB4FVByXkhJ4NujYHHf1VdRpkuiGffrtyuamZ/
lSvG1GQ/lNn8Zlzi4RiQyj04Xz/2RHw29vuCno6B8Hrh8ScNlih/njWk68UY
VLaIKe3J1cCCKXdaJF6PwS+b7mXZy2dxqYQ+X9C7MfBZfrpEj9yGxRq+Xuxq
G4MH/RbfecrtUYVJxn2J7jFICrfNtz7li6QnD/wK7B8DyZpNGY1t/qg6auBE
19AYEK7sHnP9cBXJ7wzMliCOwdupwApXUSv08JHgWCB5DNLKanbpH1ZCB06+
ku9ijMFGxYlpzrfKqI54IUjiGxNPZ4KTYZQ1UgtYbw6cHwMR38WURwc80Uue
ym1dy2NwifWFGGwIRBpVuhckVsdAdBtbylinP3qtMVkTyDIORq43xPx+uiMY
SFnq5BiHe1v+1t+/cBE1uynqSGweh475p48e3TBDJ1n6MgP5xiFQU0FY6Y4N
6ij2He3cOQ4x/5n9NlBwQ4bKAnISouNw9cX8nVdl/qi3/UVAoOQ42NNjnmcz
glBbZ+8BH9lxWP9YmUcd90dvexhf3feNw6u9G4e993qiho//7jgrj8Pb2aQD
dn5O6MmnnQ72h8Yhh9t4609fB1QzpCRqqzEOjAeZyoKOzujWyKkv52EcLoU9
xuNfvVAp8VLuWd1x2NEqfSecOxDlTgSdMTQYB1Lg3scS8iHo/C91WUnfcRid
frQkdDQUGf8xJu8KGgfWu6undRRC0Km1K9d3ho9DrpmOtOF4AEIboi35YsbB
VOLlNtM6X6S+sYh/c+I4iMR7BHPt8UFKHI97OFLHYacVMWDbqA/ay9WezJI1
Dp9pJ2u0y/2RxOaJE6t54yC1h3Se+2IwEtr2699y8Tg0LLGcbpUPQ0TZl1+6
m8aBOMIeJ7A9HH2W78ttbx0H7t5Hwvs1w1GP4uSZ5s5x2HSrKmNBIgy1HVjn
fNM3Dmb/iKUi5BCEVQRbXn4eh22OdY9nZULQi0MHoutGxkFfU+N65fEQ9PiI
nsaj8XFoW+vfjg+HohpNu6W71HHI41mZCasLQxUo+Enl1DhMHz5yRmlTBHKy
OJwSwjsBKm/caF+WItAFaxNd/x0TwJ6cv7pZMRKdv+Cy7ikyAaUjexYvsEYi
Y7voV67iE3D/q3SqaFcEOnW5KNBRZgJO5ZWkcz2KQMj5sfIl+QmwcYj8Jv0m
Ah12bZ+xUpoA/RrxpQP/IpDy1Ynqc6oTsMf2y8uj9pFIzuuXg/ER5pjjrpFk
UySS8N0mZqA1Ae/5jMOWJiORcMDe4RM6E1AcW+q6jSsK8QdDHtJj7r9qouCs
F4W4wyyNjxpNgNHQoZr5hCjEGunNpWY6AdcGf3sRa6PQn+hrLUoWE9CeF/eE
+00UWoi7GS1vOwE+hwXNnj2NQjOJLzVk7Ceg1UOgYKk4CqHtEbPszhNQfmuE
PyY5CuVWaFdMuk1A4S9TvWTlaMTYz37ug9cE2G/6LzzVPAZp/PeB/YE/c7/P
z2X9OGJRpn5mQ3oIs36H3v5Rp1hEGTS76hU5AV/WXF0jz8YidUfB3WfjJuDS
zjxC/acYlPpj9OPBa8z6K+Oqz0vFoPHIivjt6Uy8dz1z+6USjVR4nNWXsicg
+vreOx3/RaOkYvnpoQLm/kI6J86rxiLCnrmyhtIJKItKf5/0KA4pPaszLr3J
/N4Vd3ixPB7FaQezRNxm1v/geZ/n43g01KNZf/HeBFQP/NlNG41DCrYbXKB2
At6qRAceCopFUVMtwpLPJkAsMqr5n0wMGghM6WZtmIAY94YTsa3RSHajcTTt
9QS4BR1PthSLRWHZ/Cpt7ybgEOLV8OuJQ71iX2h32ybg898jpzh2JCCpB2VF
KV0TYPletUg5MAEFHbE/ffXjBJTo9P7h7I1HH1pl1owGJ6CRduNi5KU4JHpu
+rESgfn9Fy1KviUG+ZAeXeadmIAB8tE3BsvRqMXTb8cCdQImGH3yPbkxSOiv
esenqQlgKRVpefQiFnkk/w17PsvsZ/+Yvv2rONS0o2l/0QLz+3b+qi6VeCRQ
lUAK+TUB5PwrYtuX45CrskGezeoE8AtNLyTvikPj4xzS5RtIYH1lpej63xiU
vMdtdetGEuj2BU9/PBCDVDy6BqPZSfAn0c04PSoGEev2P/6xiQTrrBYj5+ti
UdLvrGQHbhJEaFrKxS3GIWXtBYeBzSQI//jD3a4+HhGSzDVPbCNBXSk759sH
8Sih54VAPR8J9FJyy2bHmfwJCM/JCJCAu9jnx5PrsWjYJry9YCcJjvHLqGsz
94u7NVbBIUyC3y8/je+8HoMUpyAseBcJomWMTyiEMvlVqjw3Jcacb1CyrXP3
NRQTyLbfWoIE5paRe1xfpSCF11c4OqVIsPxuOnTNIBV9Zv0wobGHBD9F+VXG
y5JRlMG+xgd7SeBE+6iRYpyI5LIzckUVSDCkGCge8zEWDQx9v5qhSALPEyuN
hMsxKELM7OQ/JRLsIY9e/lwUj2Sd6nd7HyTBifeuZ5dyU9DH+ztXJlRJ4D+k
PWhdnoXC5kP6z6qTQPL+8NbeqRwkc2T0/rsjJNjiwCswkZyLeqO0ElQ0STBT
XB2ZmpyDQlpvXqzSIgFF3URAxSQTSW1mPSygTQJpgRrHAaFk1G3mxJuoQ4Ki
ZDnxtmtxKKikbXpJlwS+x8uWT8THIAmS3PsreiT4t2795yt/AuqUTbv+xYAE
45VCjkHpqcjfczZQ34gES3+bPmslZCNloYvmc8YksBJgMfYfy0Vzzd0q+aYk
2Plujep8Jg899DzGp2FOgjfPB78ynuUgd6GH3ycsSMBbr5drIZCB7N+7uwU7
kGBQXdDsInsK2u1F0BNzIsHfX0EyN+2z0ajQadn3V5h86xZqtKrloeL3jWxu
biSoTvk+vEk4H1l4yVO3epAgYZSr9kdnLhIQLnlX70WCeJU3amaWWaj/PWeF
jS8JQPeWGz36Gsr0ConaEEACNZu2NiP7WGQkPHWhOogEBOW8biFm/nC3WGoa
hZKgZWXvgycj11C7V7vwQjgJXmQfkOIUzEYJwodXiqKY/AtU5gW75yGdluoh
rVgSpHGbvYvuy0cbvHc+p8aTYG2yr+AXMQ+9EU7KS0li8rH3vyrV4WwU1rLk
eyCFBPdWs9N53VPQEW/ns4NpJPiqtDsta18cWhYeVArPJMHWyHnnS5kx6FmL
7hbJHBKU5/jZGvomIR/v+pm2PBLEre0kTR/JQkoiMp0ehUz9+jQ2x3rkoW8t
eTX8JSTQTqpTbbYtQPe8N15rKCNBw3ErUd2hfHRFxN/5UjkJeFIyVpVZcpFM
K+UE2y0SZKX/5bgTmIYo3mZS96tIIM7fnnTgUDy6KdK84Ww1CZoUT0pytkSj
C60HJ5ZqSFD7/obP9aYEJOJz603ZAxIcr45O/nA9Aw2L8F0/XsvU805X/4W1
XFTQGhM2+YQEqcHR3L99CpCZzw+rjGckCL5ivOOLawHi3WV/WPUFk2+fLeNn
GUw9t/btGGkggQyryZTSuQyU5gOLUf+R4IAa5WilUwLS3/V4QAaT4ObpOr3E
f1GIo233084mElyxf1D5bDYOtfhkZvm8Z66/8Kcau6ehuF3/PHe2MfXiuCtV
XjAXabd5Gr3uIMHjKKH56l/5aM1nTOFyFwlCB6XHOf0K0KtdZ7g4e5l48/m9
NnbIQyFtrycffSTBOZYHL6ua/v97LsW2c5+Y/k08kHErLxEt7rp++/cgCdoj
onKmyFGoro0n/uYwCc7bPSn/ALHI2zfc4eQoCRyXNohePpyCFEVnYGaMBNmx
Bm8F9uSgr202u3NIJDjT82z+plc+qvHtXFWnksDDdaPI7NUC5CyqMUqkk+DS
XZru4/48JNV+rzFuiqlHRmne+x3ZiOQrXCw3QwLSKSNa+HgSKhdNCeqdZepT
Na94yjoa2bavmAf8IMHpFKXfmcXRSMjPVVXkJwnIptpSGc7X0JDoMF/TEgm6
07weymZkI+PIuLtHVph6+MUgHVHNR21jilpP/5BAYVRMsmm6ACH0ZUB+jQSG
c6s271ABelke61q5ToLOJAkeYdtcpLy+758IKxmo7Gq3t7Gnoxq7obw8NjL0
1W25GLM3Hkk0xchv3kQG5zs393ZIRqBiiX1vE7jIYGZeLiCxEIN4YwfN13jI
UK3rfLEnJgWlkKO/Bm4lg++w/NdzmTmIVUchZo6XDLvLg171HipAYZWfd7hs
J4M63/mUc48L0QJr9IOJHWRQca7887O4ALk7yh+3EiJD9B4xymX1XER5/2no
owgZlOXwfTZKKrKVifIwECNDrNLbXPLjWPQ5QY61WZwMd574fj8fE4aM6ANF
GlJkkI2sZdzdF4taTkbufyZDhtwL1ztEv6agY9V73+/bS4bsha2hO3JyUD3H
gNVteTIs/vV78GA8H+13iZgTVSQDMZ5oxr9YgKrbZRMKlMjwOKC7WTAlH+2W
6xfeepAMbSv3+fb+ykaFyeGPk1SZ/e+7vvzILxltnd5zcv0QGTRc9m4de8q8
zxh8JAQfIUP7MnW5UzUUrd8L8/mhQYaDjtE006oYFMK9h8NNiwxcz+QU7vIk
ox/ufWVkIINkfFrUkFsWcu0KPWijQwat2TM5UUq5iLRPpn1AlwwRm28xTrbl
Iqv03guGemRw2DSoccg8B/V/C1l4b0AG2wbuQxJu6ej0GenkY0ZkOHPwk8yv
rATU/KhH7LkxGUrp4ddP9oYjja0hz/abkuFLDJsBwyEE1XlJGVSfY+I1pWAk
ZBCDFPq6x3dbkIFndM8qJzPPqg4EBxRZkaHn5E+tsdtpSDRbkpvXlolf/Scv
G5ZMlP+j62byRTKUfD1lJdSSjjabBh1isSdDQsR3rSrDZJTwVKIr9DIZhsq/
WVUIxqFVvi77BScyNIjs5CXnhKJAv8BldxcyOCqnddH4QtDcgHg61Y0MLppF
x89kxaArqp2SFzzIcHpY6v2f/5LQeF7Ay89eZNgsmOIm+ygNWSzuPnPGlww3
lh0fZ9/KQL3mHyit/mQA1SPi9StpSO+5fwgKIsPNb3teTKtcY96fdm99GcLc
T7YMZczHoCNBHVUHwslgsGpQAXPB6MmQ39GaSDKM7XsQ3jIRjOQOi/VJxJDB
bfdqeslADKooancqiSPD3XvHF7SXkpDwiu8fvkQyfDY3+SJXmoZyrUSzU6+R
QWJoolNHOgNxN7bt2ZhKhhe/Z1dP8jPzTtj3v/B0Jv5eQkZDnEnoT+gu08VM
Mqy8V5M2zIlGfoRWhkcOGZaDLMiHXILQjIZPBD2PDBbsDur57cEoaH2vYF4h
U5+PrRKgIBaxtkw81S4hA+eBz0uFLMkoM7nIaI6pqDtF7kvnuNKRyBmTybJy
pr83zpaFCqajar5NcQa3yMDqTCRiyWSkMoRFf1WRITTePKijJhbh0qCXt6uZ
+ESYTj/3CUan7ZTMzO6RYam+7SAxNxANSTO+rT8gw/MhiQy/wmh0eerGtUe1
ZPh0a8M/H5MkNPfwvJTtUyb+lJWuiR+pKMx3yxvOejL8nXpXY9ufhjjUWy1f
vCDDuQhOibWSZJT7J2LBsZHZb4S7jUV4HNr9Vi2D7zUZ0ggbrc1sQ9D9+G97
32IyfNNl/aQw6o/U9W83e7wjg6Wig/cpiQjUvPnCRZEWMmQGlks9SkpAxv3b
V9rbyDDrEqHcci8FEQq6cgM/MP3fX2173zwNXbGJ3y/dzfSjqmFjNj0ZLezW
7PjYS4b9xOS1D1rxKIq6cDmqnwyqDl1iLAmhiKvm/tq+z2QQ04s3Gaz3Q/ke
l4tHhsjQaPlV+DYxBEkcFFG9NsLkEwYzhx7HoYdL/T1qRKYe3HY5Gx5NRkde
pbhSxpn97W+C2MpU1BJ1fGM2mdnP9QjF1Q0p6OyJ3ze0aEy9tav82TsVj4ib
nh6ZYTD9Pfeyc/enMOTa7fqpeJoMT3Yol2xX8EOL2RJep76RoZCFs3BpIhDF
nB/mXJwjg0DiNJf85xi0WSS76tY8GV7uS40TqE5CxeN6yGSRDMfqt3HefZOC
ZKrWh1eXmfoY19zl/TUZPXF56X//NxkCkNvWQf8EdEzRe6vVKhnm86wNi1Qi
UMcP2Xvs62SwOfePwbnHD5k/Hz/xjIUCR9m/1L/V8kek0MJxezYKHOrI+Pjt
TyTyQMahWzdRwEn2xYD+SgJaYeUQeM1FgfEJo307HjDzoP1NrdtmCvxRfkSN
rUxGvOmBBoLbKBAjss5iSkxA18/up7XwUUDo7RaiZFYk2ruDHuUnQAEjq0an
khQ/VDdyXVhCkAJt065ZLZt8ESo3r+8RpoAYn41Pm3sY6ry82SRclAIiUcOF
HUfikcXelmk5cQps1dHdfNr3GqLMhCcMSVIgrGypdWhfMvJ6oiqeIEMBukbc
Dl3xRPQnYKbx4F4K3GK1rlkfjkJJR6vMJ+QpsKcnMCWM2S//P5vv6YoUyDF3
CvMt80LlzfypGgcosDfi+7PbnMFI4VqnzNRBCvTdUNm2xTsWvTCMe1ugRgGL
PH3WxB1JSIdXw+bEYWb/z5++NE2+hno/zy/+OEqBEd+9oRYaicim5F5W+TEK
DBRUfPi5IQYxLjooGAEFIuoi6i/JBaAKl+/as8cpkKYsX3JYywNZ+0ZaZupS
QKpivf1nErO+cB6vA3oU4Nl142zHjSjUnVCS8NGAAonPRC6amiagpMy9Zb5G
FMhT6CR0PUhC2sXPn/KbUEB203PUF8Ps/9aJjmemFKhV3jlwVS0WPXvQP25u
ToHKUGXT8eEgFPP7eN5FNwosDxrakqpDkcbGj/f+XaUAqX5yzK7HC/3cfKnp
phcF7Fz7RdFdN/Rw57chbV8KlJOT/nvsGICuSITNkv2Z+nm5fauvTDSSUOBk
iw+igGmPYfHG58z3pGqhiEwoBZ5ZLr0PWUxA+VoyB1vDKXCRM2+zAvN9f0av
Tu9KFBPPtxtrj+pHIA5T7UubYimwqzP49HCgL2qy6Q2oiadA9p0qufLvV1CY
04U0gyQKaOeSY7+w+yA1r6+3viZTQP8lZeSQbBiaCw5pSEujwEaCnmlvcyy6
G8vRp5hJgQPBJf8ceROQfVo+vSebAh0uXf02UvFIpEBq1SuPAs+3zHBMZUah
z+VP+HkLKfCJ9aP+zVl/lFGD5J8WU6DH4VfPPm0XdKquG8zKKLA0HLy/+a8r
2vDaxuLnDQq0R7oTjp0KRK9apzzyK5j4CTY2vlaPRgF9QfGHqpj1kpLCxPqY
7+cRttKhOxTY0pXNv5MjHk1Scp8E11Dgg63CXS855nn0TaJd6AEFXr1U/X43
MgjZLNeONT6igObOmN/mnW5IYIPWos0TCgSNGPhIijihXq4u7tU6CqyEj8Pu
Oh+UvN1a8sZzCqCU2mM+mWHouNjkYdRAgTq6mIqCQiz6IxtoPPGKAoIngpbV
/OJQvfJG55g3FKiJzZn7Wh2DvDRywiWbmHzxqLEF9IYgOV3x3OZmCsh1mq7s
qPZElDOPahxbKQCFIjrf5xxQmaXmW7YOCuxPufCm/5IbMnf4MHinkwL2Ms/j
ppoC0darlt9O9VDg/W/2rP9solBHAJ11qo8CXjy/HSocYlFclL9wygAF2B4e
o5o+jEHHklmUFQYpcK2y4/T2nDC0lJN1qusL04+dvIrTf3xQbZnYRQ8CBRR0
9pjdC72MXO888N8yRoEvvwuLaoUckdTjo6m1E8z9RB+rpav6ImJDe4UJhQL7
QufcOsTDUGHz+Zc/aBRgXWo9uJE9Bpl0U3tyJikwJdlrSbKIQS1pD8vYv1Jg
+LGuePyJCHTEMNAt9BsFpO8KmvteDkAPudHh2TkKyF+uMuUcc0ESnRzsDvMU
sKEeJSuduojyU/oGPv+kwK9ZPeq8pjPiMiiu0F+mwOqJGNm1QD8Uxeng9XqF
AvNpjFBV4zC00C5/TPkvU4/q6uoGQtHoyrUFrttrFFAfDA6SORGNRk/990Vw
AxU6CqvC1l6FobMcCXfSWKnwUs6xO3DaD7W0Gvmvs1FBPMM60u6qMzqSuOO4
/yYqvHtl8SyFzwY90h3fOslFBQNdk9N3DZ2QFNtdos1mKpxZlBVL5/ZDhe+9
7/dupcKtCA47p6ZQxB1/JESHjwqyM5tslc9GoWgdllMvtlMh4NYnq89aUWiR
pXO7wk4qJD1JOnYhORS5vssl3xCiwmnO8qfs95l4x9g+5ttFBVdpgU8PlR3R
WW2ZyEQxKtTNqhFjeS1Ry/q307/FqcDXHTyzSdcRHX37XMhTigoFXwQSxV18
UW1UFIMkQwW9o+zLzv0hSArp1ZvvpcLeFcvSwW2RqHBtW1yHPBXOPZ5VTW6O
QNxvhk2OKVLBWP5LZ9OfYBQVcUvsiRIVDs36cq9p+KCfmu4z0gep4F/U/nNp
1h65/lVpLFKlglPx96Obz5gj4qu/STzqVMjXbnX3W3NAZ8NazKOPUOGAwPlX
z6x8UOvRDKmfGkz8cu5w7FULRhq/z/+4okWF74wzsONfGKpt2I0JQAXpgWf6
hZFhSCpkMs1Yhwqm5rXv6J8CUdHhJ9bNulQYO2x5bWTFA23+FbJXXY8K9xW+
PZJWvYhiXhxfumfArO9Ew+LuHlO0GMj9XsyICm/vXY449c0euR36lJ1jTIWR
xB+bbvJ5o/HFskvsplTI2MJoY10NRGb1Toqh56hwhN7+ZsQ9FLX57//z7TwV
FFIrTpFehSAN1eV2eysqHPyvSURINADVLuCCzzZUCOHY7f+bzx1J111z1L9I
hQYX3QUZEWtU7Hv24Gs7Kqy3nDzds80EbT4ovH7gMhW0CLfOhNvao5gf5O4q
Jyr8YMvwe/DYCy0+vl8q6MLEz8YE+P8LRK7e/q5pblRYmK6x+PovBI0pHVNf
v8qcr9T+PEIwBJnNsbH5e1Fh4HRjRt5Jf9T2qKef4UOF10fOuJ/a74o0PAtv
2vhTYVfqNz3JvPPosaKdZ28gc9yrb7s15zSS+bZXUyeECpkdXB0Tj+xQ8YMf
nC/CqFDM17bqddULbb7aOCQfSQXWcJussOxAFKsQd/tGNBWm4hL9Tz4MQcvT
p/344qiwOcDkdXxqMHK/t107MYEKiXarrtci/dBC9zS/0jUqbD12eD/mckZh
P97Sh1KosDzGVviy+wxiFShsiE5n4mEycathnyFKPeyRJpdFhWC+wHbrysuI
31bnUn8OFQgvF1oHQ3xQaZTQwbB8KjD8E1G5USCSqpzbKF1EhVnV+2Hv6YHo
fmvLUFcJFZpqK7SyOfyQynTpvYDrzPWmxPF/alfQq82+EWI3qcBrcL1ux9BZ
pKOsZ9J2iwpXV1WDjoloo85zYlLet6nQMqA2WBxqicyCfy4K3qVC4fUMjdFT
LohQ+qG96R4VNnzA40WyPugyvlnq9pBZj+DbBwGZvugrOdCT/zEVhAxfbu++
64X82I20/3tKhcoLb1f0EpzQHzmp7U71VDhsf+jJGMEUxRmt0De/pIJzS7nU
TkF1xO3T2/C8ken3t3sjy9RNUG7e7bRLr6kwWubxzdDoMhJ5GXZp01sqeN/6
Ozb68iqqJJw9+OQdM29OZpJOrXsjhX+ybNYtVFBTSVXWueaJ6iTXhljaqaA+
WimFFJyRxslP9+5/YOrzp4PUDR9z1Ox6L+JcN1PPnTJ9/I2q6HR6tMlqLxVy
r9yhftc0QAOPz0vd6adCWEDr5/9+OCGbT/uWznymAv2YWEM0M+8oyywdy0NU
2F6gaJBpF4TcRYZLb45QweueYk92byBa0Kr11Ccy884rsa4z3geFOSRoz49T
gZ19W4sMiwNiTbTZXkqmQvvdbt0XdUdRao0yQ4dGhZj17ZKlluqIv5ujcYbB
1GNpnFTI+8uo9DsxLX+aCr/T61KELgUgqe3PLml9o0LeBa37ihxR6L56ykHG
HDPPqyYnpV/HIhUbO7aseSoUaRjzPayMRa8iD305vEgFxTubKr/4RCKdWzz3
SctU4Jo6+vWljz/qbCFHpPymgiFj/6sYG3tkNvXSRGWVCoM3jkqunXusReDJ
lBr9R4WfkxyHu323ossHnJbiWWjwy2rvOPtRe/TVTKNDkY0GG1bWpx76+iG/
IN6yQQ4avE788HyfXjj6U8LwjOKigWZHQ9J/LDEo7s1r7b2badB/NfZYpWs0
4ibnbv+4lQY9taJ/T+SHolw2N0YIHw26OSolG/55IxE5aJQUoMFiXOtoz8p5
VGm4I71zJw189d8a7F7VxAreM5f8hWmgW9Ta0bhpH67LfXdQVJQGGUtGf347
2CKNF0VsrbuZ4xiPYzfjfFDziOcXT0kafK/661uRFoJOr524v1OGBhIKRl85
yiPQgIRI5FtZGtC47I1074UjG90fJq7yNDBqE/YuJwciikubFJ8iDSKvOSiK
x7ihq2nXlxqVaPBpq1mdAZ8+qnV6FH3oIA0y+RSHYhb08Q8tzPVUlQaTBtK/
6oR0sapgX56iOg0GFqIv+wwZo6AfE2I1R2gwK2yxaB7tiho//LgrrUmDu7OW
rLs++KPVShaVm1o0eLr10BNSWAiCCP7XIto00G/VFu5FoSjuvPSpQh1mPylK
3c9ogahVSe0j30ka6Fz7/bxU1wtxcp60ydCjgTj/qEqhkQ06TT5P4zxNg03E
vjOUYDWc8eqKV4IRDZoCE78tipjjj3nBK+vGNOBpsvhDdNDG/J7JceGmNGiY
4fXR+HgOnT9VsvnXORqQLA5f04t3Q8Xi9wv9LGiQt3F6bOyPHxpdeSUxZ0WD
w7NX374XCEK7B7ruu9nSQK7Va/sPm0Bk/4CoRr9IA5UTTpox331QVcIstrdn
6mWsXH2xwJH5vvmnT7xMA5c+yzdi7zWR3OFtnyydaXBqLv+cpp0ZvsorcfGT
Cw08o7+bFypZ4tpp5Uljdxo0D3kbLTxSxfPNx307PWhA0dUfOpxridSum/09
6U2Dn04ZPKrP3VBQoGPiO18a8DUpn+146YsajQO2aQXQoDTg8Q7B80y89yaW
NATRABMHHOnnmO9JlkJptVAmHhH9hHpNVxRLqH70OJwGe7bhuCN551DLs5eH
90XRwK5D07Xwqw7elNHxrjqGuZ6QrVt2qS0+fWXEUCqeBt+Crl1VlrDE6fB1
8EYijfnXzqztjgDuE/prJ5xMg1jrLxd/rloj/gWer/mpNHD8TTNxHHJF5l2i
AbwZNLCemxMlD3ijotv7/6Vl0eDVpqtSPoo+iBCJkjfl0kDph7MJPu6OxCxN
+OPzmXrZdSVI/MVFZK9sf/1fIQ1O6PcPhfaIoiouX9mwEhpwW+5RLOmxwAxK
7JOlMhoQJlk3ZjjZY/nXuRq+5TQoWmLZUmJ3HnsUVLV8q6BBku3nSM54EVTr
VW/sWkUDrgCDz31nbdC8Xusw9Q4NRH8f+sx65wpSkxy6bFdDgxyqx5jmijsK
+sP4RrhPg4rb/X5Vsm6o8dOvIItHzPxQEZgZTXVAqw85WQYe00DYOfNn4Xk9
BEnCaWfqaJBy0KMzpNcQx9kp7PhQz8TXieP7zQB73HpE86buSxrkZ3GQt5x2
wJz8RvJNjUx9aEakkf+ZYcOZC880X9NgV8/vlrRURZTZ4qn1EtNgOmutRnjc
Cn28EdWu8o4G2vZitEOZjmh7cJZp7Xsa8M+2jUuEOSOLsxWj8m00CEttqRBp
ckDF8k+d73TQIJiSbKJyxgyNsjZ/l+iiweUhpzPbi1XwbuJA6PUeJl/LfL/V
p21w5p/GaJ6PNHipJnVMrNkRrwvdSgwboMFyQY/JcUsH7HM4OW36Mw0UnJsy
vC+YYtJ57xyrLzT4ETK/gXJrPzobYFHUPsLkr+5i9lHaefQuV+uGOpEGhvMb
1dWt7ZHKU5mqO+M0uEKI8v8yZo8q+3juCZCZ/gzqeun/ygrxzy3UxlOZeTgw
JRIojFD8ZkL9Ap0GJ9PljfYMG+JFhXevHKZoIPiCrrHUao+dDGqaPn6lgYaO
47Odhc74s0tWG8zSQFHm3RO84TI+mRTUXfudBq2aY4mSR83wi9sXB8QWmPlV
1U8X8JFAsu91h9MXmX7h/hL7u8kMFZL3jf9dpsGWhzWWHMO2aNOG7TT33zSg
S/39a21hi0J2/5ke+cvUz0fF98UGpmjqGPm7/j8azCk+UWg7MvPGyrZj6eUG
OrC3monYc57HH0If/5XdSIfLrRkDrTGOWKO4kKWQnQ5ZlcMP96xcwfdfRG5i
56QD/7wQS4X/ZSwy6LQlgJsOkxV3yX5bz+G0n4bbqZvpcL0raI33OUVrlU9V
2GwbHeq0aA3/XIyRh7KI+Ds+Okgn+3nSsi0Q0Zhlj7IAHdQDUgtPV5mjM55T
Cjd30uGSX8bWxdQTCKf1KW8VpsOrv87NInMIK91/oR65iw5PuXcu+1XY4vKO
G8e+iTHnc4267CI6422TCTq2EnTQ6qFeO7/mgmPYPfQ7pejgcezATO2vy/iH
9Dnjo3voEC03YV39zxzb62iY1+ylA63+oftI7X7cby9pI6hAh0bpioObzuog
nWhO+yRFOtgVXBO5c+IMqrvx3XlJiQ77G/+e/LtND0m9HrrqdJAO9J5RTQG2
Na08whvfT6p0eOZDv/Lf4bOY7fftYB11OpR5lr8NlHPAAYLpkU+P0KG6P/t8
2YILph3yj5fQpENE/h8Wr3ZXfN7cJiVLiw5Pzm0+7R3kiNv8jmf9Azq4ZZ68
8GKjJVbPkSvw1KHD8vedZV/1Ea5+vK2MqEuHHTLtAoqOCkiwd7nCUI8OR761
nvgScwwlfxurfmVAByNFl9a5Cjm0wt36UN6IOW5vsVwU0Mau8g/rio2Z/dxK
WxPttsQjenkNm0zp8EL3QM3YNidmnobhoHN04EF2lQn33PCrBIcW+nk6nPz7
XjnG2Q0rVOl3mlvRQaEZ3/n8yxGXvTvw8b0NHYRaSys+77PGm0k7h1QuMut/
umjMwaGHI/6tjd6yowNnxxR61S2NZ0XpZN7LdPjNuXvmyPHBN5c0uyejnehw
nnFSbFegKu61fjY7d4UOgy91q+efm2AIKf150Y0OZ1xVQ/lLL+GWP5n/WDzo
0NlUK75bzAXrR8ZzVXsxx6ethGQMr+Lu9WCB0750eHh0PkirzxWfjfMQn/On
w4d09efdpy7jz2wOCrlBdOhNFS9bk7HAVtfOH1IPZeqnVn5UNukUJnKd1iaE
M/HoiI/XLNTE9unIMCqKDsVq1ue2mOti2lZVC6lYOogrXEhzMzbHrjl7Hdri
6WAS9AJarRzwt+2iHu5JdFhKjPAad3PFPoW8wVtTmPwcp+Q+3eeBF4XY4+rS
6PBJrOEunnbDIWW/0y0ymX6KNaOEcjvhVbG5oj/ZdDgccinLXN4Wx1RQKsvz
6HA620PsrocpZpP+8kinkInnyYflVoKGOPlOVwOjmA6idzp0NBPO4s1yTe9T
y+jAlv3RvOeONc6+X9+rVM7kh+vj+zV9Ryyw/97IQAUd3PkMTZPK3XDx4xu0
oCo6jBhJCBz95YFFVXK/i1TToerhmv2PaXd8qz7pD66hw9/duWcLK52x7OFw
dscHdBhYT9G6WWuH7zd6826qpQO5/L1s7i8LrHTMadeDJ8z1JU/+MUs4h+uw
lazJMzrIqpcdz1G3wOrHzxz8+ZwONYy1P8Oel/Cr98ePFTXQoe9nfCYLmzNG
p9T1NP+jQ7YZB2I8ccfNHQpmE2/ocJbWE1L+wBOfMhS/GN9Eh49P2MLyP1zF
nT3bXfe+p4PXTIEsx/oVbHyW07+rlQ5b7uHh5rcOeGBgNdK7g5k/NZOd/Ddt
scX5+eTtXXQo6nU/FZVohQlf6Hkve+jQdi5n8sKaDb5kQyi3/cjMpw3lqq+P
OmAqsffe+gAdfNwklirDr2BXu/f1VYPM+mkrW+pvXMXfyC/f6g3TAVjUiPyG
XtjH6WHnDIHJr9sF3c3ZTL4ZFYNZY0z/xW7//kPNFYe4FZBUScx8HCyaqvBz
xKszKTNfKEz9XGDpCGmxwzFeUcvhdDocOLX9TNLfC5ht3o9FYooOTe6JR65p
2+Fkf5fNLV/pIBXdZrGNwxFvXrYVdJ1l+ilw4/hctwvODjkrtfkHHTZUfte0
DPDAAn919z9ZoMP06G/B6jEvXBx59Ij5EtP/pc6qCWc9segGpRMrv5h4cYR1
nvR3wxVxUsbX/9AhIG3xl6yWM97DLmitvUaH9qKH7P2Cl/H9azxOtHU6zFfw
E1cm7LES9wbvZFYG+Bhm06PoDrgufTFUkZ0B528bEm/OOGH1bdMJHzcxgL/C
qGSHPDNPcsayArgZ0DdzY/ikvidGAgOlQlsYEO+cYurn4o2bC9vuvN7GgJ1b
93PybvfCp4T/e2LPzwCjmpcP7bvccaLpV78vAgx4JTz8cN3PBbekCB8yFmTA
XHx5fsEXJ7yxWf9XizADIt+efXGq1BHr/Alu1BRlQIH9FG5hccKxKnfD63Yz
gOODLYvTH2fc5D6kJS/JgBpjqSXVnW74XyX7hgppBsx+ZifszvDAWqNqzTtl
mfXV/Gz8e8wbR2x3SsiQY8ABmtUt8UZv/Mow7xTbPga8c8153L7oiX/HN3OG
72cA4bXZjv6jV/GR1/Od8wcYsDVRiPtcpisOXpTIcFVhgKWa9W3DR1fwC8Wz
JhNqDNjGMzVQz3EFLzlF81kcZsCH92+Xy95ewWo3aj91H2WACWtA+pE6V+w/
OFZw4hgDOi+5xG71uorrtmyxeoUYcFL6hjTbES88f/KYyMHjDBD1C2Ae8j5Y
Oeoq8e4JBqyJ94rfafPG3i9Ky3efYsDGR5nEM8OeuHbug32BPgNOX3tQpmLF
1LPsb6nNhgzQ9+hbThd1w/vs5OhxZxjQknwr/0mDC3Yvsrz724QBUo9VDfZE
uuCaviQ3HzMGtH30NHwd7IonN73YN2nOALl4ffaH/u5YVps+e9GS2X/vsbTa
3x7YOUTgyWdrBsSY6EjynfXGt5+c8DO8wIDM504u3lo+mDrlp9Z8idn/lsVH
5GxvLCVZuXzEgQE6L0VShHQ9sYN1f8NjRwbcjA8XH652xxU5G8JlrzAg8WIq
jkx0xRMfDmjdcGUAbaCI0/6KC97Nare+/SoDClceWHWnuOCLGpnvUj0Z8FB0
4I3wV1d83e9NPIsPA3KXudIeal7FhPvfTob4MWC37u8UnllPLEzdxfk9gAF1
K1nyvtt9sNUuw07nYAYMxIcoWbr44MJzYenEUAYUJ9++/9vPGw+m3TM+F8GA
eWtTH9k5pv9ahnk7oxiwwyK29L8t7vjc6qZP2rEMOKtjwrshwAXnqh0ueBnP
gN75zHjWYmfc73HFUimJAdYdq9PprU6Y906B8J1kBhg2MD4rijljk7GW0V1p
DLgelleuln8FZ+5YvJGbwdT/Utjx+kVX3HNG2p4rmwG6cWK0uLGreHOSmVRM
LpMv+7tbjjV7YUMcS1vOZ0DGcfGlW4E+OHX5SbVnEQOKsnZtmH3jgz8okVxp
JQygr1vO7dPwwZwu2/bZXmcAj3FzTUSxF9a7iWb7yxngy2XHejfSAyd98Xys
f4vply8qo5Ul7rh12w3ft1XM+WunWO/ouGE2/W5V9WoGSD5XPar72BWfiPm7
9LCGAerl9AzfZVcc16DQIP2AAUvPak2Dtrnjph/WYaWPGHC1hrWb3n8Vr8ul
HON7wgCu6yKxN5c8sVlr68Y3dQy456kr9VPMB992YO1yfc6sf9gr7yXdBy+v
oVyBBgZsmdTOv7Log/VLw62bXjFg8GcKdT7MB5eqN0h4vGHWL3h4piLTG88O
LE4KNjFA9pbT2XgpL6ztffDx+2YG/K4Qe32A3RPn8ngFebcyII4WJGHt5YFp
d+9r7epgwIzV6L0noR74sO4kW3snAzbVDWp8kPXEqSTpbr8eBkyOePlstfbC
xAj7vN0fGRC4cZBQ/cUbKwnfsOkcYMCY9Jj9s2ofHPt8RDJokAG7YpT4L8n4
4s+mO6clhxnAMhdr/EfBF8vOmT3pITBAW/ufjCbVB4ekZgWHjjHg6wT1lmq4
D+6S7UZ7SEz/LL4794bfB+9+z8nRT2HmS/R1tdB4b+xjd7Ings7ku476XVCZ
ma9/Y/PlphjQvUMwb0rDG+8oxrafvzLzwntt8miVN3ZV+ysVM8uAhOzapNV9
PvjVx8Nf9/1grj9OMf5Y5oM3ewY8/bLAAE16di4Ppy+243oaEr/E9IOTqMBp
E19cd2cWDqww4NNNT/2os76YTUdh0+gfBqzYsG7QYvZnMX6lN2mNAa4cX4U1
mHzdC6sqUNkwCRytlRs9mXis7iRdGGedhN4KV2feIB9s/ExUJpV9EoIG5o/n
X/TBFSbWM4c4J0Fhj6tSjoMP/jlTUEfmnoSTLPt4G2N98KnkgdCMLZMwy/fT
4EODDy6W2Xb8KO8knMjS+hK16oO/Nhly0vkn4ZlNrkaili/Wupjcl71jErY5
+9y46uKLs3+3FB4TmgRjWWfanKsvphSwXJoSmYTDGyX0K618sZoK2pMvNgmh
kaPfqo/74mu9Yd9AYvJ/FVl3PNXvF0cUDVEokZFCFNdecWQle++9N9eOzCQV
CZFoqJRRIbRUh0RThaSSRPm6+96Skqh+n9+fn9f9fJ7n/bzHOed5XYgf25He
Sug1FnWrg7GFAnWVD5nvNpJxx4q5jJPbKODkZqVatZaM2RdJJqaKBL4YMZ56
ITIOQawAR4k47/xi0S8JMm4dbxqs2UmBuNdft7erkjE1feakBYkCmybc3AUs
yfhERM5/Vp0CHjy1wcb+ZJS47i9/VosCRQe/dZbFkjHO9jRrry4FbIM33upI
J2MP7V3nD30K9MWIP7VsJOO6QtH95w0pcMyOLhpLI2PoFidTW2MKbH/EXnle
MRFv47GVCyYUYF9u/3PdPRFXej8fqjcn+OVtPHkmNhF95leccrCkgJ9JP3l/
WCK2VpgFLFlR4E1oYXCkaSLykPIUGm0p0PxxM3/kykR0GbjPdnagwL2agRaH
R2S8HPH7xj8nYv8bm561FpJxgVcn64orBbLFSMOdxHlszieZuXtQoFbIh3It
g4xnDdtWLfOmwMdNQ8/eL5LxSqnCkTxfQr/5PXDwDIF36iw/VwAFbse+dNm6
KwkfaYgdyg6igOZxntNFt5Pw9cESvj8hFNBb/mD20Z8knHzLW5AZToG96ada
N3EnI3v7fp7fkRQofqv/Z+BBEi5mfs9Nj6FA/psCIem9Scj/MurfzzgKHPj+
d5VqcyKKynzOSiFTwLOMIjfBnYhbEj2XvidRoGqc79btVDKS+gYzElMJ/qa6
bn3UJfwlZrnwNZ0COQeY4n7JZLSK6E6Lz6RA7q1PwlYrEtGjS/snK4sCzl2q
ezldiRi6uiU5JpcCyss+JP0OTsJEv23f6fkUsG+z6PD/nIQ5bafJkQcp4DC2
PMRcNhmLeUS+Ug5RIJbrvgtTLBlrXI7GhR2hwAW5K+zyviRsuMzDmi6mgIRB
lmCwdhJ2/toXHVxKAd7RnfJuBxKx1+obbaqMAne3mmRKvCDjq9MREQEnKBB5
tU6Xx5iM4+xPMxNVFFgy2lbMvY6MNGP3UN9TFLj18nfScyMy/ix/+eVDLQX8
Hd0a11QRef/PPMjrLAW6fCwcE3+TUVjn/uS7OgqELr30/eeSiFKHNf3dL1LA
6lG/BW9lIu74cOXjm0sUSD7gKyrcloh6O+V8XBqJ/Y6FHPvvfCJa5NSMDTdT
4LtWy6/AmER0HhL2dLxG6N0j+2T/hkQMkDv89lUrBYYPobvKdcL/KVxudu0U
uCw0XhtpS8bMx2kjA50EXtNrenzLyVgkznGyvkX4PcXi/vhvon9Hhw09vUOB
1/8t/2KkT8aL9z/aW94j/Hioeo3PRTK2rXV9+Qgp8GlXVruQWCLeDxywMX9A
gZMKrlLkfYn4rMP0+cOHRH3Yee3J/buJ+I7v7l6TRxSw7n4Y6TKciP+5qz/p
eUKBhFTxmro7iTjb1GQBzymQJi9xf21KInItyfTff0HkQzFRg2ttIq6xqzbd
NUiBMTi//2Y1GTfVre3tGibyJmCqbEXUF4XZQmO9NwQfs0kZtZ8TUNPsL956
S4Hq46Q93/jIaFKVYqg9RgHJrhvrXUUT0Z7KvNs5ToGkxS2BRZeS0Ec/RF/j
EwUE1qxYVLRIwajiD7evT1FgYf1z3vXnUzFtwkmHNE2Bdk7Eb/2MNCwgPbvR
MkPk+4OU4P7WNCzP3625k0bUJ578lgjdNDw3crv9CoMCH4xKsqTkU/GqPElN
iU0B2YIftqIXk7ErvaG18SsFbBKz577OJuLjZ1IqCt8poPFWlOWQSPQ7yaqr
l35Q4MiHXrGLVQn4OW6N8tZfBD8a3VcuEvpwegqaLvymgNThSt4mgl8lj+GL
In8o0JtVbczRTMEQjvTZwn8UGDyalHObTeApjK3+xU0Fahe96E1eBo5tvlse
xUuFoaBE1egz+1H0Bn/J+HIqrKu92zu0PBsdbNwO2QlQ4afJNqPYU9l49MvF
vJ5VVNh9Lsn8qEU2Psr4lqkuSIUpnbonu0SzkHsdpNYLUeFxxtYU1S2ZuKup
OEFsPRXcvumFFp1LxzTjsagiUSoM/JBd7BlJwfa3CqG/N1CBeaCDnSmVhKy4
FP+YTVRw8C/AIHYCKi5/6DkhSQVkmSzOV8Zj8BkhFwdpKviNKlOrdBPwrKaf
Xa8sFcT/HBB8ukRGu0ad71OWxPkOj7k5a5PxMBxkOVtTIWOrqFDy4yTsGx2m
9NtS4cq9eaZyTSr+i5X5rONAhfLUJ88GTPehPl/ceJMTFZqEed8MJGRiyum7
oxKuxPsCGpUXpvdjm4bAUIk7FU79bLlzbl8WMp65Pf/nSYXBNwK1j2WyUD6o
vp/sQ4UtV36+bJ7KxMCFb91f/Kiwer3DnOHYPjx9HLpcA6kQGOn5utMoDd8q
lHQ+DqYCu7wx18MzGdd1j7XohVEhpiNM2P8IGW3dFJuuRFDhqPsP3qOlcVjE
Srm4OZoKrg9ejVvrx+DDgodnSmOpsPA5zcBBKxb/SghXcydQodeZP5t0LAH1
OvzKkxKpMM1sURB0ScJkq6vF/yVToSR1Y5JgQCq2Ti0UuqdRofTGHQkl2If0
9D15T/dRwddtR4PryUzcJlSZabCfCivEAm18FbIwoOFzyrVswg//+dfcfJSF
tUakBOk8KlQ1JDZ6hGbh6JusqLIDxH4e9fzHV+1H4djnIcsKqXCBLms08n4f
2vCK+6cUUUGz7dOq0/xpeKg2zJNyhApy6/p4NahJ2Kve6exZQoXuzC8Xjk0m
4J+n3HbPS6lQxm9srfc5BnUD7S0Ny6mwany9hX5gFCb9Om3SeoIKZgcjS0+n
RWNLKX2X7EkqGBidN/G+G49LR8x3PTlFhdfMp/ZflZLQurDOIP40FUav8x3j
6UvFmrxFfbFzVFDeYy2RviYDqfvd9O+fp4KpmLtYZdl+1E6/rhdST+ShkucL
P1c2HkxarbeqgQpnWJVXG3Zm40hcuG57ExXsHCZSZEWycEtUr47nVSpctuph
3x3KwITQzTpcrcSz1L4LK5vSsDsgXbvhOhVeCd5qr+dKRkGf11p2nYQe93k8
PwYloI+7itaPm1QIivB49f13FF5xOqx5+g4VvvGVVAyYROBv22kN03tUoDyr
OOfyPRIt94IGHanwLs/67C56HJ40q1Eve0DwUX7/Y3Z3IhI3BzXdPsKP0pHn
Nm9PRU0DB7VPj6gg4VT56Ij8PjygfYVU+JQKziVpMS4OmTistpy0c4AKMpu3
jTwI2o8yOwNVR14SeQ3cbXHUcD/GK95TyRyiAlht+1j9JQNRboPKlhECr+TF
ubsZ6bhaOnHn01GCr6sZdmHWKei16cWOhPdUIP89VxbWQ8YmUcUdG8apYN/4
aszgRQz+EjqgjBNEHiQOx6S/D0eL1RNKoVPE7+YUlSCTMDyxQk9p9TThx9Qf
8717I/ALz4ntHTNU6Klyv+KaGIPqf9mKXjQqVF+uspLvT8Dchb2K3EwqtAve
UgyyTsKXc/UKjWxCz5/vLTsjU3Dz13/y9t+okJgdAlzvUzGG4SX/8zsVoh9N
LgrEpmHXzI1tZ35SwdBGzNFYJA0FPgttM1uggtCpl9mH3qagx8forYxFKmw2
1lriG0vCy+8eyZX/JfgTHpCZJebfH69l5fS4aeC92zSj3S0WzV7t3zK5jAYn
zULZowcisPzZW9lDy2mwMPVX9bhtKE71q8uqCNBgpbjM4ndKCJIelMi8WUUD
3ckuVU25cMy+R5XeL0gD3GQd5nAjCl/cMpWWE6bBKdutDweOxaFkx1mpZ+tp
kNfzSGCIqJdRLQubyWI0eHwwqs53OTH/Nbls3ihOg5FKSkZvYCKuuNQq2S1B
vO9i235rlrhv1K2UDJMi8FzOzLvzhLgv1oZKrJGlwUHbCaiWjcPZqp5NnXI0
cCwrlstQisLd5RKbvOVpMPft8M3HGWF4vCRVnGc7Df6EHFj7ZFMIThQNbWxS
poEzWe9zvU4I7ijYsdFBhQbN8ivfvLoZhpk5hzbMk2hwNpFVOxQQhc8yPoud
1aBBwxGPO1dV43BjqqGYuTYN3EeLq92uJWA4uVqUqUuD01+nvH80k/FmzHeR
CgMaiH47uO8/KjFPRdiJ6BvRwOHY4Ky5Lxmdg5vWTxkTeLeFbpiQIPIkAs+8
TGlwxDWv7C4rBsP6R3JHzGkgpT7wRkg/EuNTo3TsLGmwzuZ0a9ajUExX4GI/
tqKBQDdJxzUiGPPfVdbvtqXB6zy/RZ9NwXj0sLL3XXsa9DusbnsgEIon9B8I
aznRwN61NOejYQSeZbg9aXGhgUv+RS6/kWhsOM3MVnSnwX3TEHaAeDy22eZr
XfCkwVgg6BU/JO6PfzcwJXxooFNIzrkRRMaHrdcuVPrR4OeS+YZBFzIOBJh6
rg2kwRo+mUhu4n45Kvx+7eFgGgzUnK4rOBWHn3rjHvGE0WCb+75bAarRSE3i
zdofQYNGA/EXvdnhOLu1RuNnFA28ElbHROiH4OIbVXp8LPG80HHTyDgIeQ/1
19HiCfzT+tvs8oJQUNfbPTiRBvGdydrRz0JwA+3rmo/JNCiJsZTs2hyBMjWF
fW5pNKDzfhfuuxSNStaSmYP7aPBPgH/6e1ccaixdV7PaT4PO7OPFZ8kJuOva
HurDbBqUnrhp/olK3D/9Pp41zKPB0sLr3ZodCWi/Nsn11gEaiCjHnj5zLR49
evhXqxXSIPWLzt7xTzEYRD7b21xEA5/HBY88AiMxeovmvq1HaRASx61Q/yAU
k18/VT1bQoPBz6+M7e8GYXaB/8yG4wR+81yzIo1ALNL6cbqsnAa//XxjLZcC
sWzmiPOqShoUUqOeChSHYM1JmZUHT9KA+tOJSWWFY73lzZ6/p2iw3Os/cxmv
aLy2YJ2WfpoG74fpXMu04/Bm89TO2bOE3/Rcal4JJGCPd9p09HkahLMuLXV6
JODT1Wtq/7tIA8O+tsKxhXgcvn/B0f8yDcKoB1+vWxaH43G6/O8baaDyTngp
TzAa/5N+iU5XCL1H/pQXFoUjezA4ZeAaoa9decYq/hD8lbegbNFGg8x8iw4N
u0Dk1ij93N1Og9zupqov5gG4cnrrKb0bRF7sQzuvHwpEkcou+45bNFBqZu3/
ahuCUhYOy3d2Ee+f6c3naw9Hhfn/7l2+RwNPjxOG1IUoJDVmJsl004BXbVb0
6clY1PcUVqp5QIMzCfeSWrbHo+nKhsn1fTRIa19uIr0vHm3u7jpZ8ogGEg+P
LevLiEO3mGHbFU8Jf05sql1uF4P+myN4857TgJZy3/zOrkiMePmn6/cLIr89
5z/f6grFxJwKcvIgDWbCFnccDA3CTNJ2RfYwDa62RWznLAvAgimcCH9D8M/W
rVvi88dj5S6VU29pYMC5FC26IxBPmtKtvcdocDQsd0ueRAjWzeXwvBmnQVNj
XNn19HBsviR6x+4TDe45mFkOVkXh467byX+maGDbMn7RUyIWp195k65OE35N
lnEcdYpD7v/+MrwoNBCsOCjtujoOpX6fbxCg06BWa/r8RscYNFhrHnybSfhn
t86UYEgkemylSoVzaCD04803I8J/KXpHx0RnaaAFC/46m4Ow3E6lqm+O8G/a
Ydk/T/ywNXjIMWmeBkY/z6YXkH1xID15zZbfNLj08MjtdwcDkFay4engEg1M
3PJESm4H4/KLXQU5/2jAvvZOSWdvOMrd9jVW4aGDhf/fr5LRUWj8gmtpnJcO
tt9yzzOOxqDP54u3jq6gg7i8yWEF51jcN2+RpL+SDqoGSD17PgarVtNVaKvp
IP9QoOPT8Shsly2hn1xLhz31Hp31ieH4Spt02WIdHbT4vmXsHQxGpvXrwB8i
dHCQr9XSiQpAgcDUzfUb6KC3w1WzMc4H5VPF3zttosOlmutpfHU+aHr03gnu
zXSQE7mB3pUBGFDn79AmTYfMY5sD/8wEY9YNntX+W+jQeNAryMwlHGueXXq8
ZhsdUmgpGxe3ReGtT5YH7inQQenCtZMDH6NxZI5hFK1Eh1VxdbW3tGLwm0Dp
b/GdxP5i/ZfzpaNRUFr95hNVOuyf7BRS7ItAZc035DR1OnCH7ta3PhBKzEPp
O+W16NC9RffV5dlADPWToI3o0IFvhgM/u3wxPwnrD+jToYZ/c8n3Q154rigw
QN2QDjOcZYskRR+8d4ZXcgrosL45M+j89QB8397wttSEDq3cpZT////487FV
hZE5Hb42v5Q6YhaO6z+y7Fh76LAmtKbn6P1IJM0eX3naig5SpzZ65qyMRtsV
mo+sbOkQd/JDv/R8FEZJvs1bsKdDmM6/ObuDkXhILcOw0YkOd++KrDrCDMN6
i80Lbq50iPJ9E+Z9KhgfePd08nnQgVxyp7FvRwBOJAQndHrRYYNzeY3/vBcu
Hly+I9iXDmKnXr3eLOmJG2ubKMIBdKj9y7S59s0btdpsLvYEEXodad3GNxSA
Tv0cv/hQOtCzvxRPEPmJHyvfJBVBh0mXubVOouFYzNEaHYiiA6cupCVWNRKb
eN+XZcbSwb9Qjf5KOAofie+3VUog/Pb9xIFNpyLxi4q0wPtEOpS5MdcEjYYj
l1lv36EUQt+Y0IALgqG42TM0VzudDiQDhwGlrkDUj+Pf9V8GHXZtzxjawO+L
7geuzFdkEXyuOblNtMIDk6vtOkxy6fCBtkowRNYDy659i/uWT+jpd+RUyYw3
tvSeUKo7SAdr7sU/44wAfPZWZ8auiA5mgkakN2IhSGGOnf9zhA7zG85gUn8Y
qu9xeX+uhA7Sjv8V86RH4P7zL4RMjtPB7e3PPfYLEfh40cJyupwOK29vKrmu
FYHr3HpyCisJfZSOtFVbhqFPm94txWo6OOW8nl25PxgbVnawn9XQQbZJW0HW
MgBnQ3bIx54h/M8VHsd9yQt3dV/yXVtH5HVZ9LaOD254SFy68voFOkys49K6
scYdh5OqB5wv0YG5KT+zadELJV8K8/5soMPYnS+9bX4BGK541KC6mQ7uIUq/
6nyDsT2fN0n/GuEPTvZcwkQoLo1nNY+3EvkdLnrxLykc9+jMT2W300Htg7T9
g0/hWF6WIC57gw7bU/467hIOx3EGzeHhLTpQzJcVHNkWigoWwUWhXXSonBuq
GA4LwsS68e4V9+lwHMemj530w3u/Xeebuulw4/HlSTu2B65wfaVi00uHFaNj
Cl5xrujUahnG7qNDQZ+hJ+mDK54W6D1z/DEd9s1fWDX8whMpwQZv1J8R+nzv
rHSN9Ud17Fz9ZoAOjKnOo9w1Qbh/o4pZ2is6XPstRpJfCsHHiQ2Z4sN0SDv+
+hczJQzXvZDpuDtC1J8tUXx7XxD8K9TQfd8SeRymveidC8WGvPVbuMbokBDC
2LZI5HH2Q7HnhXE6uJ6zWFD0CsRd2svLzD7RYTx4/oZKqw8eOp7zZGaKDsvm
LW31LQj+6b/+FU3TwbHUPExnjQtKmifqKFPosKXFMjK8zQXDzzHiXtDocMTG
Z+Pbix7YvhByOZ5JBxe7rUXC0n645DzxUZhD6Psp6ODsaCDuaXEX7fxGB1E5
B6FmYv4t5x+ycZsj/B/udc11XyiOB1kV/PpJh+zEAyv17hP83394t2aBDodv
n/l980MIJm4w/L5riQ6pLff7X88F4T3yTaVPf+kQLezQe8UpAFcMqAblcTPg
lIXJMfqQFzrJN52S42VAw6LY8n+NBP+5W4b6lzNgZU1NmMsNJ6SM1fJHCDDg
RLvsvvjDzqiuJWq8cjUDdP1567pS3XF/6bG0q4IM8PeLdYh77IOPaSta7YQZ
8JlkVzayOhDXmeXNfF3PgIhiQZXHpGD0Oft7c4UYA5ZOps1LJ4dgw68kVy1x
BnSYHofUSwT/TqzitxIMMJr+9PnLvWBi3gvr2yfFgMttSo2FHwLx0IrJRQlZ
Bhxk2H35VemHw4GeGijHIOYjuV0DCx4oeW84KkCeAd/sbjzuESH4F7O5wLOd
AdS8atWV4Y7YntD/vl6ZAXO52+Jtwpxw6ZmR8B4VBtjr+dsaWLjhnm23LWkk
BvDY/hLmCfPG8hy13KMaDIhfPJqcahCA1aX/xXFpM2DxpoQcUzYIz5w75Zui
S6z3b25PlG0wXmi1taHrM+DwlvrVK6uCsbGb28DfkDj/YEmz6GwQtry6sX0E
GBDNt3P1+ZRA7PgUuXGvCQP2B4TVR9b74W3O5hVoxoCHq/RvM696Iv4b+qG+
hwH7Rk7Xlnxwwb61hdMNexmwV67H7QM44lNp/deSNgyo9+r6eFLGAV+qsh+U
2TEgrlQoT1HSCUfgQttyRwbEwvrVNgJu+N7e7VymMwPk2o8FXer0wgn/lce+
ujJgR7Z6pq+CP07H4/5QDwa8GXH8Z+QciLScxOgxLwZEaVfe3+wZhOxSeS97
XwZc7+VWuZgfhHPnxiz7/Bnwh7T0RfBZIC60HtPRC2LA2nvG3MoWAfi320S+
JYQBOaeud7CcfZB38KeIXDgDnlWLbqwuckeByeZl1ZEMuPcx4RrvPycU/Oo3
uzqGASku8ZPOBfYowrV+Ki+OAebXCz/oStnhJqHHr34mMECi63TX4z2OKC2T
idFJDKhYxNpqfVfcSlK9NplC+FmX1rbQ54lKxl9qXdMZ8PHUxYD5v75Icjh5
5FkGA16mCgfZnAlArQDrfZDFgK0+GFiVR/SThH/hnTkMSFuyUt9zLBCNczvc
tuczoL1SUXzPgwC0OB5ufraAAdfI4dlbI/zQuk5Cc/0hBpie/Mgc0PZCh7ZX
W4oOM+DnHlrVYIkruvUcEP5zlMAzn9ZfutsRfQZ1uBKPMYDP98mh+hs2GDjJ
YM8cZ0A6l93f0+I2GPb13EfvCgas/vo0TDvTAWO4XAYGKwk/XrKsrSS7YKIQ
/13zagYU821s9R73wDSZe01dNQyIKSMPck/54H5SQrXqGQboBEi5On70x3zj
rYfqzzFgS0XHX5+OACxyeJcifoEBiqurT72oD8CSgOKQY/UM+F0YmX+qyB/L
E4ydlzUwoO8YK2TC2werc+d2pzcx4MFjfdFEkgeePd5IYl1hQGROj29RgzNe
rPORDmphwOmi3vZEZXtsbBMSfNvGANuQV+96eK2wpadvybqD2O+pz4ienBV2
DqYzem4wwLV6225+E3u8M7ljTOs2A9w8IoO0Dzgjfp180txF+CP/UNvELXfs
46q8JX2fAZ5V/PfWpnjjM6G9l090E3inK6+ckvfDVzJ/Tgj0MoA7j13uRfSH
EdL1A9l9DBgVXeFTIuWPY8ahid8fMcCCbfhD1NQXPzmIB0Y8ZcCk0y/1D2Je
OB3wwv7jcwZkIylqPb8b0hPyjJxeMmCD+MakgpuOyMnV2vl4kAE+IurFI/9Z
I/+PnzLk1wxgLwsNMXPZg1sib4tIjDKA31KYr33SEg0+7uPvf8eArDrrslF5
e3RxNFiK+8AAxxIR1tJtZ4ztX+JsnCDy2nTsWu2AOxbq4ZfeSQZUrfnS4/+P
mB+v5byN+cKAm+37zKYe+eBt2d3PxWYYILvPLstq3AeHKnm6e6gMuL95Z6Gj
gTfSBfraoxhEPU168ciUmG+WZR+8LMIm8nnET453NdGPZi1q8CsDnAKSE0QT
7VErjP9YxHcG7F7ebTViaYl2Y0/z1v1kgPHNA6+PrjXHcLujKfd+EXx+kF62
9+IezO21iQxbZIDXD63W4k12eEpb0FfoLwNKE0N0v3I7Y3vzK4cuLia4aTx8
sfaOGz6XKjMLWcaEL3nSm92yPHG63ElXcDkTzhUfHbv+3gv/LBfZcZufCeYD
xLxZ7YVimW+kg1YxwYUe927xgQeqcqrWrxZkQrsNuafwtCtaBnusuCnEhOo/
9x4nNjti4FvxRf/1TOipHaw2drbGDOsPbAExJjytCv/I2mqOFd2nP3dsZILm
QMOc7k5TvKrhN+orwQRRgyNOGf0W2N8g/WyFFIGvP0OAfNcWJySm7l+XYcKN
n/eXmGNOOF964bq3HBNOCO24KZ7ghkK8IZf45Jlw5liIcdCcB25P33aqVZEJ
r4+8bNv7zxNNmDPFnspMKP3R3Xwz3BO9Axpzl6kwYUzdenbBxB2TRyKTr5GY
oDhWf6LvizOWWCpHuGswITDsXLR9uz1evsf05tZmgrzt3RmtD3uwm9Rif0WX
CdbntsW8tDbBd/Xxpq4GTOjQ4TR0pO/GbxvVdP4ZMqF+D9+lS6stcGXJrFKT
MRMknDQ2kQ/bohx3p5SzKRMOWGSoKA474a6UlHV/zJmwrOnaEW5bN3SlaS9v
sGTCTZaF3p4qD4zz/bXgYM0EbRpn70kHTywausP6bcuECB6XJjl/DzxvnjlV
78CE9+9/3S2edsWuO7ve2DkzYYFLIuTzbqK/7Pz75Jcroady8cVVyjbIOt99
74IHsd4OhUmtZDNcLpbXZuPNhFZe6V9XRQGlj5jU//RlQgF3a7NNJaDu32XV
dQFMuFBhSQ2sNEPHxP6jVsGEH1rMJj4UWGPUTGHOXCjhLxb/gqqzIx7wskw6
G8EEg1cn74yBC55+KRBuGc2EUOF1i2eWu+ENk+des7FMENlhz8sd4IYvbxbb
nU5gwvxDZ84HQ1ekKNmZWCQR/O6y7op/5oRc59Zqf01hws6781NdL+1QfP3Q
9pp0JpBvl9aEeO5B9UPlm80ymeA5/f593ytjXH792JOeLELPUa+3Z87p49jY
kSTDXCZU7lhxJqfYAFt4D0l15TPh7PGXNyZmjDFP5cBT7YMEnwuk9pU25uji
kZPccYgJ9PU/7PI/7UXF/Exp0hEmpOVaLzg/tcWlK2nPrhYz4dAXCEzRccDB
N0kp20uZ8CnW++e6Ow5Y/y9e5nIZE64Kfikw9HDA9O0xz7ecYEL55QQ2t4kd
2jhHpJ6rYsKRKsrdnHQrlMkKkZU8ReRpSUrqyIQ5zl0OGKiuZUKWmuOtk9q7
8cmgT5roWSbIPUjOWTunj6d/e2wpr2PC9StF8TltOhi/1fWF4EXCb0Y1JU7N
emhi55h+9BITxCKrBNd7GKFYuq0cfyMTBv2Ck7eN7Eb6+b0vC5qZkP7B5L4l
vxnic/N93NcIfrYugzpzcyz/sXtrdisTMv4czCRbmWOYtNGr39eZwH2tb5W1
qBnq79XPSOtkQnRg8PmBL7tRMEl729xNJtg+G1prEWyEn0+rDybcYYKu7Uzb
XJwe3nykksm6S/gJxZxHX2vjka9K8lHIBAXzdK7nVrrou0lhaKaHCU0VK91P
5u9Ckpnc/uCHhH/ihwxCu42RN05aYbKfCZwJscMXJ4m8nZQY9nlC5D0zztJ8
qxlefbAh6/0zJjCPKbxssTDDXMZ6RbcXTFidUO9bYGyKLqJCr4dfMSFH3Fb9
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
TM275ctrZJi7NUGkhQNbI4VVLtTzGf0PSDlXeA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.686312782118824*^9, 3.686312800097046*^9}, 
   3.689327562627059*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eqsn", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/.", "potentialschoice"}], "/.", 
     "solm"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6863106566183944`*^9, 3.6863107469269466`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
CdbntsW8tDbBd/Xxpq4GTOjQ4TR0pO/GbxvVdP4ZMqF+D9+lS6stcGXJrFKT
MRMknDQ2kQ/bohx3p5SzKRMOWGSoKA474a6UlHV/zJmwrOnaEW5bN3SlaS9v
sGTCTZaF3p4qD4zz/bXgYM0EbRpn70kHTywausP6bcuECB6XJjl/DzxvnjlV
78CE9+9/3S2edsWuO7ve2DkzYYFLIuTzbqK/7Pz75Jcroady8cVVyjbIOt99
74IHsd4OhUmtZDNcLpbXZuPNhFZe6V9XRQGlj5jU//RlQgF3a7NNJaDu32XV
dQFMuFBhSQ2sNEPHxP6jVsGEH1rMJj4UWGPUTGHOXCjhLxb/gqqzIx7wskw6
G8EEg1cn74yBC55+KRBuGc2EUOF1i2eWu+ENk+des7FMENlhz8sd4IYvbxbb
nU5gwvxDZ84HQ1ekKNmZWCQR/O6y7op/5oRc59Zqf01hws6781NdL+1QfP3Q
9pp0JpBvl9aEeO5B9UPlm80ymeA5/f593ytjXH792JOeLELPUa+3Z87p49jY
kSTDXCZU7lhxJqfYAFt4D0l15TPh7PGXNyZmjDFP5cBT7YMEnwuk9pU25uji
kZPccYgJ9PU/7PI/7UXF/Exp0hEmpOVaLzg/tcWlK2nPrhYz4dAXCEzRccDB
N0kp20uZ8CnW++e6Ow5Y/y9e5nIZE64Kfikw9HDA9O0xz7ecYEL55QQ2t4kd
2jhHpJ6rYsKRKsrdnHQrlMkKkZU8ReRpSUrqyIQ5zl0OGKiuZUKWmuOtk9q7
8cmgT5roWSbIPUjOWTunj6d/e2wpr2PC9StF8TltOhi/1fWF4EXCb0Y1JU7N
emhi55h+9BITxCKrBNd7GKFYuq0cfyMTBv2Ck7eN7Eb6+b0vC5qZkP7B5L4l
vxnic/N93NcIfrYugzpzcyz/sXtrdisTMv4czCRbmWOYtNGr39eZwH2tb5W1
qBnq79XPSOtkQnRg8PmBL7tRMEl729xNJtg+G1prEWyEn0+rDybcYYKu7Uzb
XJwe3nykksm6S/gJxZxHX2vjka9K8lHIBAXzdK7nVrrou0lhaKaHCU0VK91P
5u9Ckpnc/uCHhH/ihwxCu42RN05aYbKfCZwJscMXJ4m8nZQY9nlC5D0zztJ8
qxlefbAh6/0zJjCPKbxssTDDXMZ6RbcXTFidUO9bYGyKLqJCr4dfMSFH3Fb9
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
TM275ctrZJi7NUGkhQNbI4VVLtTzGf0PSDlXeA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.686310729708911*^9, 3.686310755358974*^9}, 
   3.6893275634843626`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eqsn", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/.", "potentialschoice"}], "/.", 
     "solm"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6863106760453997`*^9, 3.686310678634099*^9}, {
  3.6863107157243633`*^9, 3.686310751085493*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
/Q+98oMv
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6863106792527*^9, {3.6863107171334157`*^9, 3.6863107561448283`*^9}, 
   3.689327563859086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eqsn", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/.", "potentialschoice"}], "/.", 
     "solm"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6863107521547766`*^9, 3.686310758735237*^9}, {
  3.686310898246931*^9, 3.6863109070768766`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
A7pUOdQDnfOxkAuCydYvO4B/7I5s3Lgb2qY69Djj0AHyFUrYQuF3ZDQ+aDnv
1gHCBtciJkUzUeXPIrXvfh2Q9p5ibE08AQkGBZ21/NYBWY+i72VXmiIPq+cM
pxM64PlAEOE5bTw2r6i2Mp3RAfHkZV8d3mVjmjzChKTCDuiVcK21kE7A8taJ
Cx7jOuDYwdMvWelhiL11JPRkUwfs3DEa2UhIQe+Tfr4bJ3SAyAgmYVaUiM7S
tzyzHekAuIYnZ3rsi369GX5MOXtk/xoSy07yxwJ+LepHrHXAVNGZPn/NREzx
xqHWuf0OSL8i0T8ilIHt3KMSHCPtBJHjq3aHHJ+RDh1TjCh1J1TR3vWlzo1H
mZVcXK8ZOmFKaSmb9HM0In9zMqScpROUZgtI9S+4oPuiZxgpuDqhtEX+YwKj
P1Y8ctlbi78Tah9ZJcQIR2HHgmTJwwU7IbOd/VLDk1TsiYqyy4RIJ8wkD1xY
Y3BH1Ts3d8+Id0LQjW812PcoxJOt+/bN5U5YfLFuG346FNk+frCKSXdCAPXj
ixitLmrjsLSmQp2wOqnPZvghEBNutfmtfb0TyuszZldcvmIfXN6bRKp2AltC
qCHdhjrWf8V1ZOpmJ5AG6RZ2pHigi3PeeuI6nSATWaMafvsb8o4O7nqn1wn3
26oF/lzwRZPaUZpVxkf10iRn72W+wmQpkptoHndC8d3A9RDHECy0NEvpjmUn
aAbdvbjLHIItPS/CRT/rhLm7Fiv3NF3RDUGczO9XnSCo1PHo/pQ3iutrKLxg
13mkf+RIpu6Eon9fOi/YO3UCvVdyMIWBK7otP5BR49oJliW+D5xM3bCMjXFh
+s+d0OOe8eyhyDeM7Pt8vK5vJwj4hXKeuhGCGRuv88YFdUKaw8PreYZfUBHT
XthcWCfs79s3RD0ORMfqyVguR3eClbTx+cTdYPTEnt7PMaETbj8t8xoReoOq
xdmp61M7j/Ta8b/DVL4YzyS/G2NWJzSoaP39+DwSsw07faiX1wniA3/dpVNC
sTb1C/YJxZ0gP0hnAb99kDDR1c2F8k7gYpmsIXz/ij4UKNhIVHfCJVPm/KD7
IajfUm3BuaETJmV9wz+zWaKLfDrmja1H8a11B+dbAjFvvOE4E+GIXy6u+9XR
Mdiku6mRYV8n+Lhb39G/+A2TlXnWlzR81N/Netf73F4odOnN7aXxTqAUZ1E6
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
P6qz6ah/3jcFjReVt/1JZ/LPdDTv2yko9Kz6FTnQhHr4U5w9xph8rGcJJsW9
wIZf1i6OTk3BbfWUf1cuT2Jiv6nEUdIUSDjeIJUsdmH7klaWVPoU7GM3ej24
VoJWgyRIy4tTEGzUW2Wa3IWCTBJf6nxm6tci+9p8sB9xHF3Nrl6bgtO7Ms5p
vuxE6VuvenL+noLWWKONL1jvIWF6i/6t9Sl4XsE/3aHaj8tbxGX7WKchWGkh
on3bGD6WHbfl0NZpcDFREZDje4pbXD8zondMw84Nee+Ujr9EmpeM2xm802C0
mqTz714veif+suCc4DSw5cXoUl/2IvO/ogHFItPwQeqe1e/Ul+g9IdqE5eA0
DPxRLFFZeoo9ni4pWB2eBkWDb0MgOI7/xRnubJWfhhCzkKv703pw7M3GpX0n
pqFpelHcczYb7VLb1xekMg1J7PZve/Q7UAFfZCkRpmGOaHaCrNyHIv2z/MTO
T0Nr/mnWgppOdGuuXMfh0jQUC+w9e57AfJ+rv9xfozcNpJ1agTyUDqxY9ubb
18vTwOIwf2DuzTgW2kruO2k6DTw/ImsiXzViFpfV+yEW0zASp+4eM1+H3o+w
unfZTAPInChLqehCb0/wX+C8NQ1Tx341h/D1ooZ7UoIGd6YheWQvx66kVpT/
99Ryluc03C7KTCldDMPhVrrtRL9puLQr6pch/xvs0GWZJRYyDTeseiXLat9i
XSmPWw6R03Boz54sc8eH+HhSFKqJm4Zq7o/fbEteIsEv2TxrydPw7Rz3y+/l
3WiDceX8ycxp8GL/NfJvvQvNN75qDrk3zbwv2XrtZi/QoNDb5K6CaYiOu6gV
v/AU14VSrDlLpqGLvzC34sI7nEP/qmhQweR/JNRpyKQLB2uyc2bXTIPHO17B
jn9pyKZ6D4n4bBoer4SVfl1tRZd2Sj8Ta5qGOz18tpW53eiop1qMA56G0WWr
d3u5O9CeSb3rNR3TwGm4wu/aVY7+nbKWX+udhohIv7Mph1ox/YHnJpWhaTAu
KTH3ChzD/ZtiJkLeTcN7Ca1DXeuN+Kn9vaquyWmosiCa6HHVoKyBqhDOOSYe
ImfvuaV2FCiPjQxo0/DE9s4uak4Xss4Ylsx+Pw2M6N17NgxhpPmD+h/x0zR8
0f7pfLbPFMld//ZW7Os0RE2KiWTt7cW8rzeXOPxk9ju/OS+G/Ab/FhP0rfk7
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
0/L8zICSRDUK2e0jmsee59EOaZfUndX/A8YW1xo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.686310760799075*^9, {3.686310902850198*^9, 3.686310909448202*^9}, 
   3.689327564899387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"fn", "[", "r", "]"}], 
       RowBox[{"eqsn", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "/.", "potentialschoice"}], "/.", 
     "solm"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.68631076676015*^9, 3.686310910511916*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwUV3c4l+8XFrLJTPbeo8wQ7zHjSymhtEsRUkpUVGYlkiKKyB5Z2Zv3sff4
LJFQRsjKVoif31/vda7nec9zn/uc65xzi9m7nXKgpqKi2mGmovr/t27h+9qY
91PgfrccJ+Z/F04198w8PPAMlBgZVve/8kGjsegHa+kz6CS4bIituwK1aUL7
4cXnEK4UzdB71REiBF+jzrAgIB70o82ovY7El3yKryq+gKC7sUp+Xy9DYcvt
zLW2F/AwMe/JpLEVMvx4Kf7ljWDQAH6PXGEbILlbvhXdGwIzd620E9LFkb0Z
9qIkOQTcHOyP6BGvwJKQ8hNz/ZeQodbuZxFhhQKWhdy/D70EPU/1f5WuZxFn
G+sNj0ehwD4/UzlocxqS4/+dZ+R7BaKnlDVOdViDqsfcyfjSV3C4mDOlVMEK
1f83ZKJmEwYGk1+9ec6ZoFMiXTqti2Hg0Sqgwu58AkZXqg9efP0aYiyr5SRs
TUDb4TSn1/43cJ6PZvtc4zG052R3qJHDGwh6/Z9M/4o8atM5Ss9W/AZUPM/I
H1EwhnAp3L+fOhymxKLSNujV4Sy75layVTiEFm48zpqjA7HN3Pu3EsMhbsG/
xGhQAP36KbV4+Hc4fM64+HGHSwkVED7epMYioHXa8rJElxryquKZ6AyNAGVJ
A1b3ek1kkP7qyvtvEYBJHPh+6/phxBi+99tV+bdQaPG3feKjBiI+emKr6PUW
zii/OfHkjQaKcVztWWt5C1+kb582bZBGV61umdftjwQzxh21ziBOJKf7s/Gl
QySoTGlwpryaxxelL8Lp4kiYLNreVE76gVVw9FaI0kRBhFHmgMj6COa/dUx9
xioKmNZu/4s+NIz/N9n4uSQxCv75ypa7l9AgDpKunN/vKLBzOOq8IsyNvlYX
p5hj72A6izpOzZcfJWUoCvO8egcH3aja/IOlwTkiNfr7t3dwMcVVu/W/o6Dy
RJArS/49fM3zMfD7KwF/b0S+8vB6D11llzQKkQKqO8XCAK3v4fgVahtBXBsF
6z0NYOSNBp3jv2n2xGshK9mtLbJDNFTKvbU18pRAfFweD+KLo8Gj8PfLnidq
MPJvZtGJJgb00gx9hYcsIHPqmqvaqRjAXEa7zX5KwV3yt4l/iTFQv2S+bc+t
irRx66utv2Ngr7W17ik1QHsyO75FYB/Azfbf25l7uqjtrdHpi68+wKODNhcl
UyRQuE8VQWbwA9h/VfC7/UALzjqrWSzJx0KhCymtOeIYiNlkN1V7xcJ9SYWX
QvIS8AuT0A9qjYWdXsNyMT51VCAXW2nFGwfS08r9xXb6yIubS0PQMQ7qfwV5
7MV1kcFOSN5EcRyw6E59NNT6gzFOU8sX0HwEqRwOy1Ms5kCkeKc+OvURVi8J
iFb7GaMYtCR8NOkj6FI73ZngwtDVLJcY9oWPoH/Fk9IqYg1xvK9LHpnEg30K
3eDzlR2s/2kRceJDPBw2GBWe6z2KuJb65qwW4oFNJ9BqOEEPWV7eYqwxSYCa
isWN2+SjENwpKi0bmwDFF4JpiF5a0KhtYvh2IQGurn2dfEprhPzI6gd3xBPh
8D7L0M8sRkiIybSm+HgieOvkF9RS1KBS/6yFy8NESHNGSj1hZmD34OZXkZRE
kFp0f6yWooPWcp/c6O1KhLodkSMsQ8Yocvz1asifROhz7Pmsoj6CqwokB+pL
JMGW2YXoe42noMeqmGPteBLIpzjxjj2RRa4vmhOyHyaBcMKsekKQMWJC/UpX
U5Lg2Hyfzfq0Mvq0Ol21vzsJpCtlbiJlSzBR/Pdf558kOP+D1PKugANG7ff1
+0skg/sv5hKlE4bIL0bM8bBlMvwUd7PY76ONhAlqK7MPk6HzfSP92vhxqKI7
GpCcsnvfYamw8Zk2stOzY7frTobo3G/HK4YM0do9l3jWv8ngfGZG2JPpDERm
PVZskEiBQwOSsV3oKFIZCat8aJkCol9eB4veFkPdvElmyl4pkCZ8jaGWXR9c
LYu+jKWkAE+6yWzCghlietZ0PaY7BabdJub9PmDwqapvyfJvCqQf+e8MZ5AY
Orr0y49WMhVEKdiQ7G1jNCa7xVZpmQrns/4cuRlnDX6X2T66eaWCqfpm5aUn
+kj4naiCVGoqJKatOpu5qaPqTtWKge5UsLOc+FXSYQbnaExM3/xNBbP5ivMZ
V03QH+0zvSaSaeCVbiqXrCoBUXecr21apsFwAVEfLQiAasajxXyvNJhuPnwv
h90YEYZe+TqmpsH1Np4bWLcp3OZOZBXsSYMrVK2XJIzVEbNFYSzxbxpUM0ok
2E/qoE/+jXJBkukgqi0Z/1L+JBwt/1KmeyIdbO/KTW6LG6Dx+SmTJa90sB+o
W6pr40T+UpvkjNR0cJPlaVEy1QDhC6z2F3vSQe7cW5riy4aoOkJkgXMjHYZ1
jWyXvmnBuTYVn1bJDNhzI0pmPlwEre8YsficyADdp/ILE556KFLz9Ac17wz4
fGFKTS74NKjecpL9lZoBZ/bqS4zKmiFCindpfE8GiJ7ISpK4awm3B0KNbTYy
QNGj4bdlrAli4UggMUp9Ao+QOJOTzIaQaVpwBZ34BK/4Qrz56gzQUZ+GeQ/v
TyD4n3ND1ogyjBf3PpZP+wSNHyRtUt21UcDMJNOPnk9QxyfA9bZpFRcV34iO
2vgEV4p4DSQD5RFuxyJjIZUJm08a/uGqSuj8a+ESqpOZQK49eEbSfgb703TI
qNQ7E1LyfmhxhWihd1uGxJtpmWBA4+V3JO8Q/AijIh/ryoQ+z+zRsYc6SF4M
pyitZgJxuhOhc5LgUfToC5tQFtS2JFbJftREuIl2/2/jLDCKcsRIjziAoX/t
K8E1C1JpuV4Hp6uiUy7F3wois6DJqv5y6/0pfCLs4Pd741mwOaFP/58gDzok
NvfDhiUbOL/XXZGbk0TeRVmjGurZQDvF3jT3RBw1mjiN77+QDZ/iNHzPDB9A
bP1SE+uB2dAdrpRgfF8O2bmMTfZnZ0PslS3R4DfbePJW4q8Kcjb0azPFl9w9
iGbDLs182MyGiXs8/GdrqUFTTHDukUQOXF4iru0cVEV+RV/nL1jkQM7ndUqJ
MD+0m7xf0LuXAy68Dr+qlNQRd7/NknBsDtTbHMhWr5eCSy6cKzv1OTDrrZF/
bFQDfdrqWf0xnQP8AScSs8wPwlLYq/U6zlyoZNZ18rE7jHTFLP4m6+SC84hd
hOFHQ3hexLAZaJ8Lba0Fsb7fd+vfpHnrekguaLPyvxz4dhT4+wO3TQpzQeQt
zz7OPG103cWASmYgF1J+SVkM8iuiz1vbexioP8NslZHaW00N+BNWTfNL7jNI
yKcGy24ZIkMx773tVp/ht+OdxgTD4xBadJg+2+szqChYjNi66aE+k1WG0KTP
wHJujM38BAcS7y9kutX2GW6cmq9JIouCq8sdFsvFz7C3OESzMV4flW4psR3k
y4M4w9rI/mIroHo9s4/dIA9OP5toen8JkLlYJseiUx6M/qiMOD/AA5FFjlyk
N3lQtjR55BvNBj5sIslTVJ4Hq5/VX4o0HUGy/SP7I3/kweWE30LCGeagXXIi
VIc2Hz6FdkmcaQd0yUeZVeFAPtz+4LqV7qwMgaasYQKK+RDm/pA8GC2OPrHP
srHo58MVracV2bgG6vra/nrLOh9q920MMcYYwlJyJvvcjXxgfX4xQ3MNQ7yu
L8KHHuWDGx+L+AhFC3Q1bnB2v969TyAYfvqthK5um7zFU/IheoErUOOdMnre
IsmdV5YP7VYU+vrJw5D9hiYqoSMfvqyuO5nw6SHC2VGeN9/zweyb7/astAGs
ite981vOh3CbUI+pSVXEP5vAe5e+AJzXbroWSYshKPGJvipQAB/WUtySbeTh
us9FvlMHC8Bd7Phg6B0dFGyq+8HQqADQq2dtybkm8JldQEDtTAEMj5Zc1rqk
gchf/8ZK3CwAXxG3nPLZDfxPcr8gt28BuHRxV3Bf4gAh17KPtG8LgPn1QK32
jiYy1HgnvJpeAC+veSr+9DeDG9seCT8rCyBkr0KhVp4mCm2xFv3SXQB9gW7+
VDU8IFI57ms/WgCitrelHyvO4YU5nt/nVwvgM1+rWJidOjJOoINHjIUwxJhb
kOR3AvrC38fTCxWCThFHPLORFnJ5Krv99lAhHF0QP1ZvrYG27ldcFDUuhGh1
elFBgRPw2tm8JudMIXBUCkt/XdNE4he+CWrfLAQsghcf4NZAJZauj5t8CsEz
W8OqpdQSzAz+fbOKKATZfR+nT1ZooAG1sCPDaYXglHCEdoOkjm5Ji8S6VBRC
Uc5tGz9rS6Diy99Y6ywErwFfGUqwOopgNjgX+KMQGH6zOjmFqSOpbWLFvpVC
aKRVINAtHofyBXu+OPoiOFa0h7nrhhqyGFt+KCtQBPw6Ylp2pupouPdpf7Fy
ETAJ2dNdfHMM7rTyaBkYFoH8gM5w4ClVRFOV/r7Ltgg2jt9qk9pWQ+9yD6+f
dS4Cx3gJV5N/5iCb2Hp64nERHH9v+IX9PxVUFXG21P1NEVRN3z3uW6SGLJ9N
8+ykFMGDNqHL733/g5EHjzxflhVB38QLrMz8EPJwYenl7SiCpX6Jpc1dfHQX
P6qnDheBZkNKkA+PGcScUI48tFQEJ+2/yHZ+VkaKhmi5em8xCMuJfromoIZw
9ZPW//EVA4PbMYYG/ChYyYwU9ioWg5eDhuzssCIa53PntNcvBops+L0vnaro
AQuN+7x1MbyQ9qa9+tgEmHbeEr1vFINxG0dxqqQCiluUVKF/VAzPTZ24rj1W
RQfHS968Ddv1n37Kx/64MdR/ObogklwMpPcLlGlvOWTT1ncip6QY/BveuF1S
VEWTVU55Wm3FwEftsBCmaATen/+yNQ0Ww04lgX9wUAaxJoXctloohhUK5ZnN
dxWU+Fage4imBFznbF1yuQ1B9XmOkgtvCUwNrlyPtpRGTQ/1Xq3JlwDl0oj+
8bcqyO5m92wAVgKsTXZUTxgNYPri5WP7TpVAzA9pq5ghSfTk5EJ2rEMJsFte
W31soILYjfyZZb1KwEJvVfQprz6kaHDeLA4tgcdhbdNYqATSlE1p108sgdc7
aWZzk4dQK7+6fFdRCbz7fKMu1R+D86xNwWdbSqCrXIRKS0ccze/Y/vo5UAJh
0oFqdW8PIb+lCTP3+RLQr4uVpKHoAtfPB5+295TChZtjqTwloii9j4HhJU8p
NFx92EC0P4S022Nu8MqVQh9GmZ9u1IHOavmWFN1SYPnrPvVngRldzquSPnSy
FLYyu+aMBI6gpaRjz6uvlYJAxH8G46FL+LPIoZ9mD0qBcd5ZIMLdAA4E3Tbp
DSmFauMXFcKxKijLayf1anwpdF7h//1bXxPpub6hnS8oBT9+Llcagjq4+oaG
ireUwk+rcO7Q3f02LuIF95nBUnju8XjAREYbdaY9jXu5WAorai9Hn1v/wLfK
/SRr6crg4jXayuI2bVDsfJyzIlAGhWysN7oeqqPz3x+qy6mUgSP+ksq+VhGF
LHlUXzxaBk/GrzKoLJpA5d67xhHny+AxRzjXvwRJNH3gVmfznTJY/MV2wtpf
A/EpOttsPisDGx3UrV2iAmbgMHgwtgyqCrTSgjc44eGpq9ev55dBDhMfWIZp
ok8OF2ejm8ogyr/IxvfkEt738KxH10AZOBzRGVtT0AK6UNutPQtlUOfFx+om
poo0E6yeau4th0z9NP/6YnnkWHic5SZ/OQgLOdKWKRhBVNN/kQkHy6GCmtXR
4rUYauw3EaQYl8O56WscAiFqaGXGIJXhXDmcYSndUZFWBskdPUU9t3KoHlzc
vrfKBdacOsV3n5ZDzHCHu9ZRdRQgpambHlMOK6cSePc5b+CFWqqNA5/LQSC1
xG2sSBNGLZSP7WssB9fCGQOF/YcQx2V5itHXcjil1rKZ2CeL9N2lLzycL4fw
pxd4tVr04c4z8fEcmgqgPiUdFPldCCVGC7uOHKgAmdn9ExNtKqgnm3+FR7kC
/mtnNjhRKAfb+P7H5kYVsF4yz/zqNTcokzhpfe0qwCHFeTdcVXTpJ1to0a0K
INfIRs3LUqFXf5i4pwIqgDupP9XuggZUM9PHCUZXwP3m6CHx94poVphG0iq3
Amw7Z2nLxWSQoOpO9rP6CojV7nFPuakHFiabapV9FbCqNzEToMGHvO3Wq+Zn
K+CGwPVjs3qHUNbNZSMJ6kpw5IuS70JSMODzu+MMbyUcMaQKpRHjAcaIGetQ
xUo4a5hHf/DxIaSVNvmt1qASHkjzP3rWQo2cyseurZ6uhDixdmcHOnWI7vg+
I+daCVXvtcI2Hsuh1uFv9y75V8L64t7rW4+l0J/Fvs2Id5UgGsVecntVG2T2
UgJbsiuByKvT2BnCg04fIDBv1VbCZfV3J1GCEnqu0Pn20JdKkP2X90GvRRxK
sVYBh5lKqPFqS7Qg8MCEVWNKDFUVoKoT2YNkJbTfoVahm6cKlJZzKNRue5HJ
w+oiaoUqcI87/bogDwOPl+VHDutXwSEZHR23bimUGl/ccNO2CjQru/PtltUR
pSDfItGlCkwpPoeL5AYxmqYcMsW3CtZeEPNgB0C1/9N5xqgqCAl6G1aGiyP7
mdQxvawq+Khpvbx9ZXfebSfedEdVIM13z9FyYhGv4/i4nE6pAoeVYfarCfqw
IBnz6NuvKmCtOSzD/UIEiWpF0bDv7OKd2/nH0aSGpP86mgxwVkNuoWavhxEn
UqzUCkqVrgZpqXXG1jUDUH3E1HZbpxr2NQ1IR7r/wA/rDjJpW1ZD0YHWXxpP
VJHuv9xjNPbVoBH5UWhsTQYZ4r5hXZ7VsP4jp89iWhXMfK0I74OroW3ckD6P
WQos9SU47T9Ww5OVao0hOyVks2fVWrGgGiKiHYpW9A+hc/XNUWuN1XDvaq/x
Ttt+uBIY3VfbXw0c7fsD2CwPg4OxC9/L2WoovsnWelBODLns1T1vS1Wzq281
nz3/rILuNLN+FOGuAQm7qwMOFuzoftD34V8yNTC4Gi1swaUPj80KRIuP1ED2
JQlKCt8wHsAYaO9zogbEKsNqNsMOoRftNqlm12qAPk/kO72HFAp7KT3B+aAG
1DlOnLy1eAjeHvsjMxRSA4nf9se8GRCHaNZ254z4GrgWZ2Ry5pg8iu+Ozb5b
WAOuwQUChqJKKPX1rbkjzTWwN+SpYp87N2SdhIN0AzUQNjPy225SHfI5OO4S
5mrgYHzkE+0WYVRKGi38sAeHgJ05T8Oyg6j6bfHKdR4chqNvPr1+mBXV2TzX
PCiHQ85Oyd2MPl1o5rF7+FcXh8z9wxep8gbwzi9ylQ0ncVi+Jvajs0IJkd5v
br66joON31ePPUYSqN+uS8/uIQ5MU6GvbXb362G+BF/xUBzMjzTdr1oShfGB
O3WzCTh8Y+NqepMgg6ZjDWnKinCoPul+UlFBHv2+wG3i34JDe+aCBXaRE1aE
Jp5bfMNhOzozmblNFTaGy1p5fu/io2qdbc8TQFSJwUw/qBHQEJh5MgIVEd3V
88ey9iOwUJZYctZkQiziSmEe8gh6O5itKMvawDm23YNhCHS1105pxvbjB1IJ
HIynECzZz69WIHkk5JBsTXZAYGnfo//lpBgSl/aI+uiF4NDNyaNMzgogO2nS
d+MVgnc36MaIr4RB+RMvn2oSAucYr55wYymk7vzr3FYxAh8VK1emcBmkI18V
19yKIFw0x0L5OTvoz4QOvxlEcLvGWNJk8xAczbkken4BQdkRS3OX7wdQuuaB
Ak7q2l1dZdt3pFgOyfHuIa0z18Ly33s/mPvoUc76r6VBnloQOqK5UmN9GJT7
SVz1IrVA8TxeZfWTgheUV6lnyNVC4FAsui0si9RjUm1D1WpBbJOWlspcBJV6
vbp/V68WvhPU5M6my4L2ufvvT5vWgu3C9Ir1VQGo1rlcfsSqFjDn4+cmDksg
EDD7Knq+FpwxuUiSrhSq3zy0sdehFvS9U9jJh9nAZJBPYOZ2LRzeOTlAdFeG
1mpqXcLDWvCNAEpI/H4UoyR2NziwFq7JqHNEkqWRSzykG4bVgqeX7nXW472Y
7r5L3zaja2Hq9A/6MlABVr/H7CUptQBTnSxKmTxoeOGDye3PtcCxWZXyTkIa
5V+t8JapqIXSpyIThL5WzJ/Ul/ejoRb+XOvhjPlPG04ZrY3HdNeCP/GPstot
RiRRzM1v/bUWtC4pklO8lNGKpNoJlvFa+MGVP0P1Swo1R1k9bZqvhSCnwrov
ByXgPd2dCp+/tXB0VLphLFoFnB6EzR+mrYNDPl2ddz35kc5UjsQiWx1opQSw
FkgqI+azHXZZfHWw7wXz9dpzImiw7dera5J1kJN6wpFCqwy5OgwNggfroITe
Y+o/SWnwyZb+06tdB67Xv57xvyiOTgqaKL02rgOxOyGP7sYqIrFX1+zNTtQB
fUpwUuEtDrT0z//9nnN1wP0xwUwgSh0abyd2Vl6vA3b6H8J6t/ZD1Hd8j4db
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
+Bisyp3X57eKCZo03cB1awYQ356s5yuiTLDweLbhh9sk6jnzTfXxWiYofnA+
HL+Vhb49/dI/v44J17fTOn7WdCGfL0kB7uuZYHfES/pVXiE+0xa/f3ojE8oW
cwjTmX1YcSl2wHEzEyR680iRN8fxrrtOvMPSTGBsLJy8fJyIlfqOKJnJMGHn
lb7WXpVxvPe45GnCdiaIp4aF2h/qwyqFpIf7djBBZEDg5eHKQqyq+DPukwIT
NoeXeJzK6kT7I15Xie1mgqoweXg4k/N+xW/D8N7DhO3H/guIa5pC6m6qEpPK
THD7z/d27sIw0hzn0bZVZcKJfa9+PjgairQsOm1b1JhgnhCmviOvEx8sS32h
p8GELFeFbPa2Mayt+igjS4sJlxfP132yJOLDn052ympz9isR6DTynsC6a2SW
Qg8z4ZTGrRdyFsMYPZmS4wYmbH219s5z23qsx6g4fv8IE5ZyZQ75ZNcg/UsR
zqMGTJi7Y3nf5CMJGdTZR542ZELVlouCxdGz6OghHVxmzITZPe8pBwQGkOEX
UeJ+EyZ4liXHakw9R8YbR1YlnmKCLqNE3PxcGz4ekKO2zpxTz0bPsb2yg/jE
rP8FPwsmDOruuddSPIxP2p3zmT7DhFDGkZBx1IdN23enXjvHhG7fbdyizrXY
TH+pse0CE0Zu7jB88qYMmWc3zehbM8HJTSf88PpxZCGbsCXXhgn85u+fmj2k
oTMhrvryV5lgcFqz8LFNOzr779jtd9eZ0Pzmc8jt+QJs5bAplPcmE17KE+Ry
vbrw+QFagas9E87p77g3xBrCF01KBsfvMKHwyV/vtXuH8aWiEL4zDkw4I3Ui
p9yIw+fua3sqnZigVrBw6PaFEmwTpW6h7sKEP2N7LxLetSBbQUHPJDcOXwJ2
qzbvp6CrD3o/ST5kQntUoneXERFdI36t9vdkwqasVeoTydXI7sxT5owXZ/9q
JzGzqWp8s8Jc8sZTjl97Kin8xF58S01ep9OHCcmpx93FeUawfcLs1WPPmFCi
8qV3mjyI76z9FZj/nAmNewP4/BLb8T3vmMydgUy4fS1XV8nmPXZk3esKf8UE
D52u0sotvcj5MizzBzHhB61+0/ZCJrrfIL7jQQgTBL7e3vjPYQS56EycIL3l
9OvX292dlonc0gvuW71ngmPc0zwz/xb8QOplVHUEE1yK3/Rt/TSAPQIvETSj
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
w+5++mn9VKTrs8NZMoMNCmaSwX6t2eh/EOChCQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.686310768776086*^9, 3.686310912445403*^9, 
  3.6893275659517145`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eqsn", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/.", "potentialschoice"}], "/.", 
     "solm"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.6863107715215435`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
IjxX2CPeIU+FO1ZRhfMDRXhfnoS4swIVgpPeFa6/mY9zssO3rFKmwrVLGS9L
vePxZPrbzQ2qVDB54Rf+7XYiUktR22ytQQWf9L+PWTfzUHR8mtiCFhXQurCL
D5sLUN/5L6LlO6kweCXscYx/PtocbihqpksFgziXzT8nM9Dpc0WbGPpUWPN5
4aF1TSjq9Pshkr+HCl6lCQNrKYGYy8dSxABRgaf93WpH24vYzqNBeNqICk7u
Nyjul/Kxiwj0OZlQQdSjeCj74FXs/XQ4YdiMCpmcTtTtZ67iwPCzepbmhD/R
rxhH/ubhSEUO1vNDVOiTK16dZZ6Ekz4UVO87QoWr28KqJKUiUOZFVecHVlT4
Ritqyv11GV0xeCSkY0v48Z3NUt95BZXTj71osSe+P7//NKMxH9WVMuKUHKhw
SCQ1+4H8ZdR2JEmnypEKvhKDrzdKJKH7f8UYEi5UiOd9krqQZ4cetzZXFZyk
wvsaxNvpE41fu5o4bnCjwq+HJ21jLLLwe6GxDRc9qLBfu1btI6H/596AZ6u8
qcCZ+PXrUkwhpoRwxcb4UMHNZ+5KbXMBnttWsnP+LBW6fedCA11z8J8RTVqg
PxUEDGIfZK6OwFxpTyuogVRIrNv+Ly82HgnoOzt4BFPhuf+qHXEpl5EYdZb/
UygVVgmEi68NykMyJalPjkVQIcWyKMebJxepWGyNHoyigth5bjnKvoto5/Kt
HYdiqDAZkTvbLxKF9jYfoDyOo8JC2ZHKwgJrvP/kp3LDRCpchsezx2oTsNWG
kKN3kqnwxM7qqs3RbHy8h4dvRyoVGr2UdCXU8rH7ufLexnRivccbm+qVK9hX
blfUtkwq1LwqCtK2yseh715qlmdTwePvLSN6RwaOSzlFEsuhwo8Vlw3XRD1w
us6v0tw8Klzf9P7NwFgiyiVl2K0voAKZOfn5QkA2Krkqw3vhKhVcOpv6Vjbn
oGrzzp6/xVRgTG6Ueq6QhZoXLSIiS6nQcfGvA9feZNTZOK0+V04F741hVU06
/qjHOWLGt5LoC69JdWjwafySj//atxtUWO/b3/41KwkPdVfZnKqlgpWj76iT
bDaeCNDnGaunQtmeOzh+TR7+Jt2PbZuocDIouX6alIdZgx5hr5up8NibRt2d
kIN/Jy6q7m+jgo2Qr2LN4RTMufPyl4ftBJ6yhdXjV/Yj3pltxbv/I/J+atjR
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
Cwlv7YOZ5tjgoMH5iA4GfDA5yB/ccxgLhOhu/9nJgE7+hSeKnw7hL6Xag0H3
GBA3MW7y3+N9uPOZRjTzAQMKS//t+1Iy350xq6JwFjMgwawsl62M0Alxxbek
HgaErvHOCHczQVqm8jEejxngm+RyQ9AXEFeAtOLUUwZYmInmtL9UQx+uSgy5
vGCA1UmVmQ86EvjmI7HYsT4GbPmVVkX23oMT6MJKx94wwKk5MrirxQzbbxJ8
NzRArH9ZY9beehArAV+c1RADBvW2qWr6mONlHx7l18PE/nuthTO/GuHBPK5h
81EGdLuxGbPKIri6iyP+6RgDvg+7pMXMGqBI0rKy8QQDzM7deNdaYYwsBBeH
8SQxL828XEPsAEkZ/IrfM80A2KmimvdQA815fFe5+5UBb+drvPITRfCzbObI
LhID+ua7K1eCduOSO9SEWxSiH2zDd5ovTHHA9DdVDTpxXtOfdkvxg9h4/Zf3
jUwGZG7fMu/iaY5FdSYTFWcZcHF+/MrPjn2YdnJcrXru/3mjCBe8lMU4/f2o
zC/ivEvqgdIl+iivfSipbIFYn6E/dbvaGHlP9KuLLzFAtO9cxORhI7R77asP
hcsE3t3NXp5rdyA+refJwv8YkHh/tUgnhR9POT7WyOFkQuw1n17ZXn3ckfxw
jI+LCR8eZbT9ZBL3leYHKRfXMiE9IrPEpP8gdhm9o7l2HROqYsNjl+sPYi3O
jvGk9UxYiC/9kZFogrlU2y7842dCiaZEtsKYCv5gf1MrRpAJi5f0/3s2o41u
xtV//L2RCUnR2zZOtgFKqK9ODdvEhOzS4j26bnuR/VDFjjkxJvCM83JLvVNH
isulEwHiTMBb3P4uz6/HSr6Bqz9vZYJaPaVQnFMXq4zvU7GSZsJSv8XTqjZj
rHZQxOahLHHen8GlcqcDWOMuKUJzGxMkXN9LGH08gLUU75VfV2BCZ37C4INT
JnhHYebTDcpM2KXYWzL8QhtrrznJiFdlgsNUxfWOx1JoV6iW8Kw6E2g9bAtb
Pm2k+3WVgasWE8x2Dh7Za7UD6dmOuA5qE/ocOfXi4Vc5pP+oLs1IhwlPd3kt
mXZwYAOt8y1tekzi99qZ1JAmNbz3+uERGQMmPLGvN097r48NBaSXc/YSfJW1
mIwKwCj2uxwnEPwePjPmLjXCRozHB8/tY8Ju6k59+6K92Ni5MGjahAkHLK+/
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6863107732832212`*^9, 3.6893275668062916`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotEOM1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
        SuperscriptBox["r", "4"], " ", "\[Gamma]", " ", 
        RowBox[{"Sech", "[", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["B", "2"], " ", 
           SuperscriptBox[
            RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["rp", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Atn", "[", "r", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["Atn", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
            "2"]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "16"}], " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"G", "[", "r", "]"}], " ", 
           RowBox[{"Sinh", "[", 
            RowBox[{"\[Delta]", " ", 
             RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{"4", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                   ")"}]}], " ", 
                 RowBox[{"fn", "[", "r", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
                 RowBox[{
                  SuperscriptBox["fn", "\[Prime]",
                   MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], " ", 
              
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
              RowBox[{"fn", "[", "r", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], "/.", "solm"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.99"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Darker", "[", "Green", "]"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.686309297428211*^9, 3.686309314905504*^9}, {
  3.6863095021228533`*^9, 3.6863095024826097`*^9}, {3.686310509296531*^9, 
  3.686310519848625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1:eJwk13c8lV8cB/CbnZAUKiMjUkkqJOlclVAZkVBGKKMoZM+ulRGy997btfdx
7ZHQLoQklSQVUUm/55zfX17v1+f7/Z5znvu493mEze10LOhIJNKnTSQS+tvh
xjZaUHkJXPNtDRdukD/x3Enlx43ZI+QCscKTLUz8sIX28wGYPU3uvhRUPe62
EXConhNXe61BVkqzP+dl86OVOqs5ITF7kTzeW9pX2ycLXhe5FZVNGpCfiUl8
nbmmBOluZTsdfm1MpiRIKe86txPwbJ/NMLxhRp7qoQuVbD4Nin95MArOXiMr
MQRffNOiAcHYZpspc0syyYmZt1pLHz5tyR3JnrQmk44nyHM8VQHW6cfkLIxs
yLSFrfp/fQzA2t2hlD2vb5FJ92/Jbb50FPRRK0nL++zJlK68DTZ5Z2C0sNcR
vRsOZIo7171bqvrAKFrFsr7gDpmy86gcT7cR3EO/JWn7rCOZVOjjYAv3ge+O
Yw/ddzuTSdZWo9tvaYOWmbz1UXMXMmnQTcxiSBreu2R/SDHLlUyiHPBOevn1
xIUehetpk25kklA+zXz7cbjzKGPCuoAHkYc6n+H6d2KmYLj/qpEnmVQSpxpl
awrKtyev0ZK9yCSdyDdTGnbALeT6QZHX3mTSZqGhCnEncOq3lLk/711iP3+T
zGTPg3u1Xue+76OQSWqGve/MXOHnL2/fiQwQLrrF+6/LG14QV/W+eMOXTKp5
4+y2fBvWmpTyBLD4kUkNZ9sf2l4FOxO2UGsK/MiUX3xjAnQUQBl2OftexZ9M
UvQ+GtzrBd4zj09zzxIuZ5Oz63cG55ROeqkEBpBJccJ25zdTINUtn9t1dyDx
+Y20zwdGAe7KTRUFnYRZllng60jo8cle7ZX5PTKlb1qXjykBTAq/eMtCF0Sm
bCSZcNMnQOUrxz2PZQWRSWPGWompsaAoOnPbTaVgMmltoCfSJhFyPGQsT54k
HJn74pJ6JHCkt1F96BNCJgXsbEuuDoevjo9M/REIJZP6+vY0MviBE06yHpKt
oWTK7wjnyOhCmF2avNXY6D5xv2ivNt9IB8zv/5WG/7lPpixFvGjYnAlsBSxU
YHIYmSTLH3T4YSp8fGlgcuFYOJlE/9Vs8mk2lIs46L7rdTiZYnybhycrH6T2
xHJdcIsg1lPivfs4HGz496uEwvuATNrX9FwgPBdaHr16prKOsMSS4pG2YDh7
1Pzr4r5IMqXl7YppUz7Y/mybYohHJJkk3zOQ8NAGnrfvDRYeIDy15d3PsSzo
w+bxvHFHFHHew8IC5CxALZQU0blBOAdydu4tA9PKk7fnGginsTsq7K0C3G+j
mv1YosmU2g8VosXVQM1bmYXPgDDV+yiDYzXw2LGiW11A2MWbF36vBKW1RVnn
V6LJpEPJXnuXysGkttHCO5UYMmlSKoLrZCHgWuA47hVP+CpbQ4xEJlAObQ/a
Nkt4t5FaN4wAZ1nEekwUY4n7K+bAea1MqHkvmKEomvDOyu7HtEp4kWH+1I+P
hAN2MXRdq4IGflq+J8hxZJLMqStDpf7QmFTdFhRHWPUjf49qPjD34Vl//DmO
TNFcoMvdUQus1twV+U/Fkyk1moKcbxuArccbD8tEwksvf9c/agEOq0qN1AXC
LlYXnrC0AheX3JXfyglkisLOffv+NADPJWa5MymE3zLzX9tGBZQ7Nk4PviWQ
SUq0yp3v74LAxaGq16qJZJJU3cd/G0pg6O3D30TTCdf0+728UQcj5uMO3l4i
/Jp7s4h4E4y5+etWw7kkYv/qvhufNsLEj0aldFmEbzLMWszUwlRL2pz6CuGa
Jy4XJ8th1ozo3gSNZDLJ0vrG4HAmzDcPsnqbQ5jTt7RH0AWWTM3l7f9NeO3q
cfO1JEA10ZxxvpBCJvH8ePBBrRjUjleK0PIJT38WMHUvA01XuM1Y/xJWTd15
5RYVtL1yy9C9mEomDcstUGEz6NIbf5NeRPjVRQ1H7jbQ/4zM/+lfKpmy3JBj
xNIOh3RyrhzRSyPu71DbWPNW+HSEKcm7lDDHk9qhsiLwSvPmy166dDKpbsCR
r7cdvBl8xM11mTDbuaqX/tlw+twhXaOKdDJlJZVjX2w7nO2Ljc5nzCDu30tw
IDkKflZZHVk0JDzOMWEb3QIWuww3H68i/OWTgKVZJfDImsw/xZBJJi38sqJb
gNDLdEuP1UHCS76xpTOV8O6u0+/DrhA21X/47yYV+E04MVQFEi6Rl/gg2AwC
0vJFX1IJd4nFzPNVwntGr06tjRH+6lfT/q8BhvCxmgszZ5FJBi/FA0kBIGz0
uK/KYcLpGfRXLjeCiKRbmTbGhLclsGnPJIJIg4y2yGDCrZ0OdoEtMIb38URt
NWE9o/TO3zkw/gXd+ugEYZlb0YxPykFinIwAiTWbWH9WPF+ICpJ1LRXFZAkb
BAw6mFFh2tZEw3OmhA1XtbkPN8LMJ/0edvdR7m7Q/KEVZEf9SYqtI7x4lX81
2gfmXjjQ2PiWcGPJrysFrbBg89VXE2w5ZIorq2atfycoHopcoZfPIZNMmJOu
FUNYGt7Bs/ca4e9Xwig1ebBcfUlWM4Lw3vfts3s6QeUm8UuOjUS//gO7+OlO
WDOg75Q4Q+TqBuGG91NBXUhITOvmXOJ6atf8dWkCDWrNVdMKuWSKonrS98V2
2Mz85TGzJZHz9bnsOFoLYI/gN8kowtZuaVvTQgEt8AKnTgvhaFmuqHcN0ETY
E6TMEP1brf9sEaCBvy15tjNseWTKN1/pRW0aTDUYST4gm0f8v408f+maCxSW
fve5GBNOFdrzRj8TvHogttIWSHgi9LIQdzV02X9BbGM54SZV3jrLFrCt1+Oi
zgvCj+7rfAKtsNo8zzdlnXCNzMku2SKgsz5cMSOeTyZlylWsCHmCxaTfbw5o
EZ4ToG+qqIARsmJsrq6ElZOz38Y1A8nHWgq0DMJDl7l2jrTAAVsP6419hOvM
vL8OFoIbLHnxOouEazrPfLwYCVlyh7tSthcQ+62enrLOhvnk399nlArIlA8U
Y+UUGlAe2y0sdYOwP98r2bR2+M5FS8s1ivAVMOt+oAv4cXl40xqJfsUHHykB
fVCoPLdk4zThUw4e48udAJ4dfq3DWkh8vxxmmU3rhUbvfzGnHi4kU5z0tafr
OsFvym6591eI3IXP4FN9D0zi17ou5U+Y/oVI+K1OIN/gHu1aQnj6ZemF4W74
4mIujfaUcMH6h1vsncDp69DCxjXCJpsbPr7oglz3f/Ff3F1Eprz35T8Z2wGo
4rvPp6oTtijfm/6oE2p1aLq/dyoik1juQEbBDrBg7F4glUbkF/wGPzzugGG/
cp67dhP5ltINGgPtYF/cEH37F8LaSlVrdB2wX/rXIVaeYjJJNyotwL0dWA+K
ml4EhJn2mE+AdshkrRmRallMphRa8jIP0UAuvXvL+wgiz1vdzLWfBk9l5MxJ
1RPmqiO5ubSBKYWh7W6ThB+dn9Pyb4V3X6yqtDOXkCkmvzQp/1qB4B1RZ1Zp
wiKeBuy3m2ELu2bORYMSot6/dU89BFeK3B6nUojcKmMm+WozXFXO+fe+kMgv
S1Ze6msD8VOPDhx8TLhNeulpajOU9Vo1dPtF1Nv3GFGJ769nvKKh7cKlZBKz
EouMXAO8U63RwHqulExJdPb3kqkFnFpusxfvEO7Y/1k0qBJWzGVvS0suJStJ
1EuJ/asGmvcenZrtKCVnOke8eMVLhfPCq/YHP5eSqfVd0oPO7SC0VSTDbWsZ
ObAysf2tQTOUuKzxqP14GXm7ln7j0sEe0LPk+of1ehmZduL1Tj7fHGgRmb1X
N6yMrHSqQMqSrwUySD7ST6spIwvF6h71LG0H2b0rgbPjZWRTOK0L0geg0jWR
moOM5WRS4lXe/TJ9YGJdfdrtAOFgOr6D/fXQK9mVs+MSYSVNxxbi+Y9PLhts
8iknU+bT+jlP1oCmx4O2uvlErufP27+vDxrcWklOGyLy8aVfXPd7gL6thSf/
T8KuMidr99Cgns1TwxSBCuL7XOqBjGsl0L15UnHnGcKrOmZ02/LBxRsV/Em2
hI9Nzz9n7oY61gJ/eWMryJSJllBpzS5wwer+m/hmwmdj+VSsaFDL8lcr9zui
nn8DrBisBQVVR7TOMVKJ+7OoxfxSEhCvutm2cQfhChcLcL0D5ldmHeyXJMyn
vGho3gHEKl9lBCsRbmJ/zlZMg7nUzZxquoQ7rj6viWsAu6kqFGZrwvbqLhcV
fUFOhfdijyfh/K+92xTboEhFjem9B4RVhue1fNpAdvnnkTM5hN3ouhh+EHm5
yEnGesKliR+G7BpBVtnlyq4BwkqZFXKeLlCoLFI4YIKwgayj7vcGmFnaG3X6
O+HEZSvO4Bawq3R9Az1TJZlkm8vx7AgNppfI3unYQTi1icLzsAUIlthO+x4g
LG1Ml+8bA9OKc3ROniTspFPoUFYL+YtHO0iXCK+qPX9n0gBSi7YcoVkTZqHf
OLW9DfIVqeXc9SLMuWi362ktSC68u5UcSZjqPiKtmAB3Ftb5r+cQ7pvKkDlY
CJMKvvxorSccfPzpwEoF2F6w+7r3Q8JC6YP8a3UwMd/wmeIk4fXgplPE9d2e
H6289p2wvN5nb/pimJDXX9PMVEVcn75x89/FkCePJOa5k7A4/6fbjb0gPvdo
nIIU4SWNDSbPOyF37m3G3ycJU8j93crFMDYnz7nxEuEw9oHjJ3rAtpzx9243
CEswV3+q7IQx2Vv15L2r0PPTqdbEbMiVfa5nJZLwyIZdb553gegsX7n6XLT+
KEtuSCfcktWQ79KA5lMzPAPjYWTmVx65QcKmNm4d3p2AM1M8aHmSsOK/r/sv
d8IHGcYrNT8I00R4rD9QIEdGrJUTczXx+1+me0CyA0SkP3x5hI/wdd6/17Z3
QvZ0OrUfUoQpgoM1qndAWNqxhqpTKJdj7JumAbY0e4k7eqh/w2BQXwe8n1qQ
eOgmYaU1GdUrDwBr6gTLN2/CkawHzli1gdAUbndqFOFY7aBBnw64MUX9k10e
4Sk+Td28JBCc7H/5YCPhCwWb/l5qBSzJTf0Lg6h+QDxXswMGJX07Vj6F6kuq
D53NAkxJEsW3lghbK3K4mjSDe4lXdx5gqSGTSDud9gt0QMbE+NB5PsKZfp++
/8wFAQmPfpccJKykpNch2AgYEhhsbE4TpqUe5M5vh/7xx8f26aO87CdLbQFw
GZrojbclLKSxeRtjFbjJ5FdD54fqTb+ntHZAEyCWdTuBMGff5fKvrUDHpS98
tBStf45J7Z89UCm38VDpICyfZlIRSYMKsxxWVS8Jr0rKlkS0AynBqouCX9B6
GpOWhyugiN4lpVC6WuL8cgtpRyshT8Sq5E9ewiOSx5r2QcDak7LD/ABhEtv+
v49a4fpfwDR0ivCUb/H3kwXgu+z092MGyAYJ2v0VYPZW4GTeLcIN1cPGbO1w
NE9icIs/Ydr94LMb6sHQm4cN3olo3tSPHHAZdHDb5X0qI2z6wyx/ogHWaXBF
X+oknPleMdWvARQH1vq0v0LzmZbtHfNhequBzYEFwhT6S6ov8mH08h/9JPo6
wjfYU8PawL0DGcqMOwhL1yrZvGuDHhanDjlIETaVflYwSwW3094LvDlNeLU4
4dazTmD+PJj17GXCU/YOZ0s7oB675ErNbcI0mzt7qprhuTPD74QCUH+PeeFQ
PwDed0bCklCeeGwlqBQeruVuXS0nbH9XQc+7H4p/aSi63oXyZze/3OoDO8WM
4kdeE1baXf87NB9wGP/zU/yK9vdj1e/ZAKSLy7YrZKgnPm/Rq7qLjeDn4Bmj
bTsJ28u1WxrSwBzDJzXKQcKZ3CNNe7rghGKY7LwyYdp14zbieeyJ00ERgyuE
pY8mdMQTv2+lTzi67FAeZBVyqho2zTj/ORiI+gWC3FS6YTn/jo8pyYQpEscP
hfeAbN2WZ8xUwiSzzqSWcBAfdrXdsRvlT1pFv/XC0C668slRtL98R/mZVuCz
lpd8fpHwlNDEtql6cEfmbFA9YwNxP16Mio7phJa2846ifIRJDw2W3gfBK7kP
TB9IE7Z/RUns6wCa44c1/pwhnCnBe9yiDp7c9uKYlSFhqt+p2js0KKPuLv7U
nvAFWfeH+V1AIoB/K/kemmdq/97AD/K3tP0rTiGsFDUaoNUNOZfM53kqCU+5
JfsltAEGSabXfj0orzywJZQKVq8VdS+MEV7sebiF+L6YT1GvuvKNMKXtDvlI
Kph6+jW9h6mRON/3uun0VvBsU8z9w/yEKSPje9LqYd9pObf0Q8jPaqlf62CL
5+vrrKrI5/pkg9oBtdpL28WIMOlgKNNCMsz9vAtMO6C8Vm9LRDtMFO3cpxlE
mKb1nY1EA2GGlrxNqag+atX8Uy6gxGxkEK9C6x/u4Zxrhx3H9q6K9qD83+EN
DVmAYUptXngUzdtgcIvUBlTuWU/tWiCstC3ZJbYSBksGPxOgayJyTuq0Lg0O
PCno4+MhrHT+mIxlG2Bz723ZsY8wqfqfSHQu0Nz1gcoLUP2zn2kbaPBBN1Me
tw7KaQVqJqZgxEY8aaslys1/sj2vB1xcKuFbPFDOsjgnngN1Gyx8N0eg+et6
b+UbYbxJoDN7NnKvX8rdWvCKIe/GpjrU785U+CgX7CzpMt44gHLtGeL/FBpp
z2gzT6B5qxZL/HEwfYVehfE7crh02WAHmEoTVaBnaibMvZvDKQeKKJ+W2rAT
eShc6VknvD5nLvLvAGHTk0W7ZjpAfqQfz9+TKD+lJNfUDT7KZbP+uYTsKaIi
Vgn3vWlfX71BWEiKdbfZILT1f/v9pzfKYUH/TB4o37vhw1IU4alTzjXf+sDi
sNDY9zyUL/0McKaAwy5Kw4uNKL/gPc3QD534TTsXHqHcXW+PQh2s67hbP/8W
zSd/iRvqA6vWGSVzy4Qp76nTztVAYXNbxseNLcT9HpvmQfy+edVOxMwKIAe8
nOLthq2G60EzhwgrxfzeNtIF1jcIek2fIUzj2h4o3w6UCk/YT11G1ttw52g9
9NM0vj5xi7DpolVQSD/sWvIyGPdFeUb2UG8dYEpJVR+NI0zZ89PWqgeonWxR
elVEmKTrYhCdAEM/jMm8aEX1LF3JYv1wMPyPxLPHKF9oHbXIgBwyfAJP3iPb
SlCze8GFUYUtI7+Qd7SeMM8H0ZQrjEPsrcR+w467uHbBZ+Ievx4KI0tOH5Sj
QZ5HSV/6ZZHbed7TdwMDx8a3vWcJUyRf1/k0guQdr593GyOPq3gT7w/jbav9
nQ6ofnr+0PNuKGi5HbYHtqLfh6a3US3AlE2+qi0JeYdn/mviebxKP7+1DPm8
d9qWQjhj4Jrc3I7mxe8TCOuB4v/iIxqfo1xBYJkhCVjn1fnVf0KOPi7s0AWK
z79wqf2LnCpzVC0UfP62fLN6CyTWt5Eae9MJJRO5r1aKESYx77izuwbeBrIX
K46hfLZ6x+dOQJ3RVS3TIEx5PeYtUgm+hzodLzFD9apvZ3Jbocyh2INFzoRp
e/I47rdDl5fVogUhKFcssT7QBhq8n/LmpaH+7i051GbwW/THppxKZPqLtAQq
pNLd9dLoResxrmXodkKrt6xfVsZRHqY/d7QBCNLijbO/o3k/X/ZLNoNn6SJD
6ixthD9X25pXwlDvcrAiQFjJRL6utR2eNFKoyDqC8my2hxyNYFWhZ5f6WWSZ
LW6pDaB8h07kTxPCFGUjZY0qeH31DSnLCfVbr2v50CDfyxsO50NRvbr7B7Zm
8KR2+e1yBqqPTJm6UQ+CY311MmtRzpbKvacGAkf2znMPCdOsplkFaHBZO+nI
8hTKTW667WsFpdJiuRk/kedcjXTrQGWQAasYE41wjoO1TB1kc00/9ZsT+dzN
bzFt0NpyxmOYD7nPRpu+BXRe2ledK458V2T9XxUQPGP/2f0Qcqdw21AtdJep
E9VSJEx5TM1KbIbPRNcMd6si+0kFba0H0ltPxf7SRvUR9ccbS8B9uuDBISNk
zbMnjKvg7LdHDLlWyCVqK3k18NTbrSfc7yA782tr14G0kcvOmt7IrM2X8wvA
altGmWgwssSZw5JV8GLF+/er0chv1AI4q2B5+n7BoTS0fvae2LF2wBrhoJdT
iHLj6egQKrDwro9wq0Yem1p63gpptn97NCDyC+61f42Q3+j0P5F+vP7ZJY1e
4Ho+5OjqUzTPYG8ZfQd4ojBs92gC5R/cwpsq4YF93IXZn1Cu+mfryAAM3mE4
5bqE8viegn05cIYla7vGP5S3/9h4vQ+QV2cviLC2E3nPYUmFepD8QTJkZRvy
xp1jwq3w54s77YO7CFNS4k039EPtnoZfWftQztHAWFwGSmvXD7nKIgu5M030
AOY85ZvqSsgDuXs4c4F5bGi28Hnkm2C5uwNC/5HRn5eQS1SvlHXBHY48WwdN
kW2yq4shcDI3Op9lg7zr1OP3nWBEO9vfxQV5u2H7sUC4/+TH5vO+yE45f8u7
4T1pqSWhMGTWb6sSLfDtLifJn/HIX86MynQBxc1N1x9mIceseC62gcT1f6mZ
pcgBD+5VlMEfX848d65H5+uW7tfthZpv7rOf70D56JXA/mxYPPj4jNAjZF5P
BskewNjC67P8Erme5thQC0xLjOsGppEligRnGmFzcs5Cxhc079kcS2cP5An9
JO68ivJQv3TvInDH/eDVc/QdRG56dZKzGzyydk7YxdGB/j++lxTnANIhdcWO
7cgZx3xLieehXyJvr4ui+sxHn8uI74P2X4HMUiiPOvbKowEkh4zsK5ZH+duw
8JUOMKRdMKx+GuX2Rxi2+YMNO32cvmqgvNHY4EQHlJnW3RFtgBza2CdKg9bF
+6HMNVQv/WjYAoKUO3TXXt5COcumUFcaGFJ4zezhhnKnhAKpaEhHTy3l90d+
eW8/8Xsm+/Cedls48tpWdp96aB1j/NMsEe9f4OooDaQayqQw5CCf/cCg1gyG
RTcpFZQhd1ztf5AH6ebfzpxtwOs3jCl0QrmahpD5DmS/hLwTxfCG1wOpB4+Q
txl4+LWDVGXLp4deIavJDZvUghG2E27PppGh24bTVEj/fKuA6xdkruDrxPuS
XNpc+45VZCXl+EkneNOi3bKFrpPw7N+nDu0g7UDipqvsyKmStePlYGT5NnXD
duQevhrWWsgAz1zKFUF2EFupaodH7/H/VjmAHLtq+DEb3NT8kf7pKDITu2EV
DaTzDJwOO4Vcev00kT+eyPwopYFsmjb/swEyFLiGP9ZH7vg2uNAG5e00DzuZ
I//cFsxfCWyOir3kuYW8fni/JgTp//54Nroi097f0Q4DT3qfCBn5IU8Hht1t
hoyRRd3rYcj71uQym6C8AeVmVgKyXMfQ01pgK6S/WTkb+ZVwIlMTyPh4oGa2
FDlTf13VBz6hMlwOqUduWk51aYFM7mN/93cgG3lc66yGx05WZQ8NIs8xH3nS
AGw3hqg6vERm2DD5qhZkPr46v3UaWf52/3IyfJokF1U3j7zTfeALMc+cXe7y
CrK9AH14IVTYNzP6Z0MXWt9Rt74Z3PredDedDdmvdOl2Fchsitp9khd5qvaC
fgF85mfd/04YOcz5+Q4Imc+Tb9+TRBZaFnV7ABW28mzdexS5SU6HeH6/PTZf
//AkMqdv5eYykJXTaXRbHTnd82QyFT6zSd6wRR/3VzS7Qsgi45BfbYYs/1uc
NQ4cX1M9r2eLzDGsxNsMbncJLq66IAfIHPqcBbLDlmNTfPH8A8eZquFz3cFj
IAxZt/KgURNkEciZmIpHlnBlaswBiu/d/f2zkBXbFqxrgF3ZBQnxUny+lt7k
+yDbec+jvjpk6xYJx0q45tTiXENDbinUdqmGek7agpkD2IueT3MA1XG25/4z
ZP7H6+erwSZHTzvXCXyeoReH44HlHc7t1z4il16yZS6BNIc8muZ35PEflDfV
cKeDwg2FNWQlz9qdycDJfniLOFM3uj6bw8bawJDd9aYtnMgNzyyPlYG9dr/M
/+5Ajpi/mkGFAbcjNn0SRV7a99eVBiduidY8O4As7bJiHQvlbzUY0Y4i70+U
0+0C0bYajKUnkaX2sK92gHmb6bKE83i+c1NdOlC1cdXzv4S8XdfndTPMvsn2
7/ZV5LzGgc29cO1GVsGVG8jPgs6bNEC9G3IXVByRMwXzb7cBqvXD1UPeyLvz
piq7AKu1aZZAELLJhCRXFbCwWj67MQpZ2S9lUyWkWYZ+X0pGtnb4JNgNd1ru
SpnKRd61t6W3HTpZ1JweLEem/tMTqwJD18/O1zfgefaHVLqBxPWJ2JwOZJb1
aNNm4H/N8cSDQVy/usk3EU6Ys8x6vECeTbcAHVDePC3CcgoZZgmTumG02eGj
OnPIlFFVbSs4b9o7eWIJuTS6a7wTqJgaBe9dx+dNkNJqB1lXv0lzs/SgemHV
iBiwZnLvNYkLearKX7cF6pnw+c3zIa85sb3shlRj6r5XYsivHpNiqyGr8Zmn
nQeRl5T/ZLSB60ajnhXHkAfe72PvBG2GdrtTTiMrlW9KKgM7DRke3dNAJh0u
EqqCTleSnO/oIzd83benCw5dlhI0MUNW3JK6pw1KXO7sOWuD9xMpG18N/AwM
7GSdkWsGLMmd4I3+F17hu8gjTAs/64C8vh+NLQSfp3wbdwaM1uO9sRqNzGJv
JNoO5y+VbplJRbb1b3PugCqXTjYN5yObbuV5FQYydV+YN1ORz40F9raDPxdt
NhU0Ia9ySC61AL2LpJroLjy/IGCWAqg6cUY+Q8hCyjVOTZBVZx/jzVfIEYW7
mIn3Se22skvTyJlDMyklEF7Q1Ts5j89b9PFYK9hx4dO65E9k1l3aCjTgpOVT
sJ3US3iR2e5DHhjS3HqBgRWZ/9FqeSWU0Cxc/boVeW7q0ot26KdxImtMAFnt
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
25NTfg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.686309323794364*^9, 3.686309376362851*^9, 3.6863095967975483`*^9, {
   3.6863105038522797`*^9, 3.6863105211032915`*^9}, 3.6893275673557177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotEOM2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Atn", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"Tanh", "[", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["Atn", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"24", "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"Tanh", "[", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "r", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}], 
       "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["Atn", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}]}], "/.", "solm"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Darker", "[", "Green", "]"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6863093378407583`*^9, 3.686309373033092*^9}, {
  3.686309422670375*^9, 3.686309423469262*^9}, {3.6863095047180147`*^9, 
  3.6863095050452476`*^9}, {3.6863105250691075`*^9, 3.6863105310633516`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1: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
wWmHg/t+rI+Mgv4CRw7pYg+bGfqas3Cenhh1HUTL42jljIN5nYpqbJEir2Su
0xWY92F6tQOK/p4xZHwd6uXUOBHqfKyqrnQb+tsetaNho/CiQIE0yPPvn9yE
r28yLlrKWJmne/tGPC5RPf3rAeQeX5x18aYhO8NPjyH3DXysjnLKPoRWFEL+
yaTYGjFd3E4+LIH3g+kWtwPy8uilu/ESbDThZIHKlQ+aR1fC84rfnauFRWfH
zxyqhftnjn5ri4/UhdS5N0B/T2UTW9x4g4HToplyxf0ZBWO8bn/sJvVWyJOF
z4mhs3r8CWJfob8F81Vz1MN8q4W5C84/98TDHhGfZITG+iDn8HS1RrcyHmzt
+AXndyr348DTRzRv1Y7A+6deqmuNncxfdBRMwPs8VWNki/P4TdekzsDzFNpb
R8NsPXW7LyzCeoIxZZH0eeqYEczQQZ3/8oXbBKqIbO/fxUo5IOl990Yk4eil
bMdFmfd80zsbdGLNwEE9Psp0YXHOSujjyH+PZYQp0/akfTLD6uTfUS5x6Cdm
u2Mjjr0UoT2zBtZfySbNcL8n67FeeagX1KuXxWaql0salTvgvkVk9VDqvPD8
CzXKjqXnv1qhubepJpnalCty1JZtkNsthcgEA8qRl19n6KOCA48rQ01gP+Px
KxvwKkM95v1m0D+uNd8a+7KR1s7WlNOKhMbMcXWbZayJPcxv/e2xOpbOfteg
5AT10Z8YVFHYsS08gm6QY8GT5mjb2FW5w/+zXN7xXLdfGEd2KnuPr5G9ZSTu
jyQNM0mlpVKpJDKzR0NpSIpEKSU0zCTp/kj2JjuE7L1Hid/zPX5/vl/XOde5
zrk/vs+TH/i/Zv9BEFn5QmcPB1M5/P4LP2OCPTwhyegm5PHO+LudcDyhMKJy
BzhEcImDLFXOVBJ6APuPu+obklIrus6Mj6k8OVTPZ0QGVBVkTMXA/r8H/umQ
bbF759qfw/zwcrdarOVYr136isp2uV/e6xAR22y9M5NBv/aUMCLGWXvynn0A
P0mNGUNib9v51VuZMN8y00WUeJ08td09B/a7dO+IPklz9eo1u6/g5zcrsYM8
upu2xKQA6v8Uxm4jc/husWiXgP+NRQV+knuA3VSiEu53nb1MjYjyz4z2rAO/
B1mchoQgr01fZRPsp1lJb0jEvV9Uk2iH/s1ujIIEZedTf89u2K/2VrkemdCu
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
xvoFCbeL9nD8i2fnreVjd0P97TvlJmib2lSqnhjUH6Asn0eqKXbfucXBr1w3
BuDzH96aDksS1tfvPRSOk5UcmpL2E87zuv+fB8Kx77cbH4B5GhuVotCH106X
t8kRFj4nIhqCNx+eeTJxCM5/vrQ5BCvSXRQzjhBOL3t3IR7ZP5vNPKsI/aLt
U+Y4Vsbt505lmJ+jI+SAm4I/m79QITyJyKLuaGrUozVHjfBjpcclNMQhsShg
rUG4/O3BoGtI3t8rYLcWYe8FJet8fG5g+cXUSeh/XCNug+i7L6Gi04SFriYx
VqNa7+85/+oTDk3NTq7Cz+/5/t5rRLj3Rg8lCrPu/HHugzFh+6ElahYiufm3
3zAj7Prf3uZUfLbjl7CLOTyfWf79YTiUNzB4vxXhCP6kzju4wvH36zlrwty9
E/pheLyFqlZlR1jv1ZvI24iB669CDwfCZvRd3rlIyiaESc6ZcDK2encbk+uZ
7ZdcCMfXPQzoQoEbwrvq3QhLnbjkfReXnt2w59JFwoE6PN030XAFPeyIN2GP
bibtEvSTYdP0yqU/puafFR+vw2LkqydaLhPeNOXn0I50r3Nc979C+MGP+e5m
7PsjZoNyENGfeodtrQQVnP7baS0Y7htAOhyP+vPie9tCCQ9yNWdT8belzZLB
EfDz2iVWmY6ENZMi1aLg569rUhCJtTN5Z5hiCE/dO8iQgzznUk52xxGuZ9V1
i8bZqnw3wxMJc3Boc11DPUnp7FopYKVzF0PwwvQO143phHNwFksi4lfM6n+Q
CfcL3HvTFh2PEZCOvgbvV9pnSw3sOnkt5nQe4WofsxYznHpQaJ6rED4vHEr2
1rg9PE93sJjwD6mhlT9/jzzZXZVQSvh815RsCuaVLvzb6CZhUt0rmiFWpop5
8FbCefcMKab4f/qvWhA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.686309339207923*^9, 3.6863093735049686`*^9}, 
   3.6863094242399855`*^9, 3.6863095969341593`*^9, {3.6863105271792526`*^9, 
   3.68631053226729*^9}, 3.689327567504632*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotEOM3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
        SuperscriptBox["r", "4"], " ", 
        RowBox[{"Sech", "[", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["B", "2"], " ", 
           SuperscriptBox[
            RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["rp", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Atn", "[", "r", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["Atn", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
            "2"]}]}], ")"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "r"}], ")"}], "5"], " ", 
        SuperscriptBox["r", "5"], " ", "\[Gamma]", " ", 
        RowBox[{"Sech", "[", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
        RowBox[{"Tanh", "[", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["B", "2"], " ", 
           SuperscriptBox[
            RowBox[{"G", "[", "r", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["rp", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Atn", "[", "r", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["Atn", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}]}]}], ")"}], 
            "2"]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["rp", "4"], " ", 
        RowBox[{"G", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"32", " ", "\[Beta]", " ", 
           RowBox[{"G", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
              RowBox[{"Cosh", "[", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
              "\[Delta]", " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"\[Delta]", " ", 
                RowBox[{"\[Phi]", "[", "r", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", 
           RowBox[{"fn", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"32", " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
               ")"}]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
              SuperscriptBox["r", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}],
               " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Phi]", "\[Prime]",
                 MultilineFunction->None], "[", "r", "]"}], "2"]}]}], ")"}]}],
           "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               SuperscriptBox["fn", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "8"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"8", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r"}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "r"}], ")"}], "2"], " ", 
                 SuperscriptBox["r", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["\[Phi]", "\[Prime]",
                    MultilineFunction->None], "[", "r", "]"}], "2"]}]}], 
               ")"}]}], "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "r", " ", 
              RowBox[{
               SuperscriptBox["fn", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], "/.", "solm"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Darker", "[", "Green", "]"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.686309380494034*^9, 3.686309387747501*^9}, {
  3.6863095069671106`*^9, 3.6863095071907682`*^9}, {3.6863105382957277`*^9, 
  3.6863105418242025`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1: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
4A2IL7d9i0w/J5Xfuwn59k8WIzMD57EZJxh/kJaGzEv0BP91hvEnvjGxhaL0
7mYXiHMee4ctX8ye3+9OTHd91oAv8VV6Zd2H++YW0YSt7oanrveC/NpLG7D1
uFVLiA/cF32tcmxzZu9vdl/IV9rnh69V88tcfwT1ErY0ItvdAwcHAyCfk2kL
sk/MvnY8GO6vj/V7dH2Nd1h5KMx/0xOBHb2MC5SfQLzdqB7f+i4/+PIpnG+i
Vjd2MqfxrHoO901Dsw/fbm7Y7hkF56228yN21ogz+h4N/dQ634BdMm64WsTB
eQ+FJiJXqYPxra8g/0fnauQWIFqrlfjXK8vQPdrX2TfJf+9fQyD2uFokKpsK
fjBQgz17gvaFpUH+lrlO7HXE/BJXJnHYroo+7PN2V4BjNpy/J1c/jny0Gq/L
hfEaRp0403RuqDgf+slsKMLvlNoELam/9y3GFvdw5ajyFEF/rZuy8HTnY6v0
Epjv9Pkd5kq9EXaiHObTyhuxmNuJ0vlKeN/0L614u+HOiRdVcJ55Gm1YW3aV
qFYNjO+Ka8Jnf33TGq2D/dZcqsJ2NS12AY1Qf3teBvZ6kR2p3ALO8UnCz+xD
qzrbwFG92Thd6/p3l05Y33+PMa4QOS69oQfOW/dgAe4aU9Kt6oV+11rk48lC
ISebTxB3Op+BOYJnXwoNQnyrQhxea9HckDcE+UVW+2C6StbCuRHIL+Cchvbz
hMixj0P8U1oGMuq1P544AfPzsxKQTYaBm+40xJvEA9B9jx0pM7Ngx5OXcfgp
wY4nc2A6Po+YW2bY9/4CL/wTg8oWG7cN/CY2MegvRh0NGWe8aeOkXzt8K9DX
uCBvBVZi2lp5CrHdtMtqZAeHWAShNYeP9TlyEbsU26diBfHtPGLLwAbj2Xjf
1Mp/SnjA+zrj8cmyKTNLPpjPv4SJroQ1+PMIjMN7ySpCbpfT36YLwXiTz6no
MSNw6MRqGG95Jh0n89sK/hYhjrKIqMTFA/qq0esgbrWtDre+2WalJQHeEvsB
j/rwh41KQb5HFoV4ydnJkoD1EC8LDMarttV/VZaFuOFQKt7Clra2S45Y1b6C
wmqt/lqu8tAPf5M/37tEG7sNdFjv57kKfPmOXmSVIsT5wsuxix69ykYJnMte
jEOk+b4L7YLxXK45OPHbV6l8FWKJa0LluPBdrY4JgrhpZSlujki9xa4K9dtq
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6863093902373796`*^9, 3.6863095976586714`*^9, 
  3.6863105435204306`*^9, 3.6893275681017027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotEOM3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "r"}], ")"}], 
        RowBox[{
         SuperscriptBox["G", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", "r", " ", 
        RowBox[{"G", "[", "r", "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}], "2"]}]}], "/.", 
      "solm"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.01", ",", "0.99"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Darker", "[", "Green", "]"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.68630940163824*^9, {3.686309509017564*^9, 3.686309509199194*^9}, {
   3.6863105469005356`*^9, 3.686310550399624*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
    Opacity[1.], LineBox[CompressedData["
1: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
r/f+OOsCJyNJC+pJwtVrSmd+H3rXoweWunrCD9k6KN+nNYb1YkTm/JF6j3GG
0SnIWbL/+3shKuLiUGgDfh268wRmyAiVmXYARwQ7euONlbM7+N2gvx9JB+Ep
05Jpd2/wdKWqJ+68d+v2rQCoH+xKs0LVXA+T1s/AftkSl/1RJumppUIU1Kf2
FPig4Pl3h0hxUL+j5YcpstL+Qd6bDD51a8sKK9fufEGbDvWZbXL+WIiBu8Yo
G+ZJl6oE4vg3FZ8UC6D+0FcVR/z6lpi48EXwMYkWR6QQ0xSwpwzqydh6/VHB
ScWmPxUwT5Va2RutcXVvfLgO9btHEszQyU+68s9vgT9kcJrj6tankR2N4LFo
Kx9Mdc4a37gH/V9HDwVie6u3ZIXtkAfnmLrjNhEvtfhOcOr9ZTPE9nMtyacP
vDgs44eC+iP6LYagv0OC3hcNF1LQqj+BfK+Urx0SdUs7Kf4CHJ+Vr4mTZZmy
OCb/fR5OfHTHc9uKx7bNwHlEphMCMHq+n2V1HuadpIv0xsUV109NfYB6e/ce
cbQRdKS47zPklWNNXshI7f5Uw1fIK+znfFEtk8q+Sz8gf/md0gnRzPU7nP0N
eZmFyy7sfNuwIphiisiPXRf67/cv6X8s13c81t8XAHAkK8nem+zszJ5r7733
ilCZ2RkJSUNJS5JUKlQIFfLcZCUkZCUJSYqEkKT8+p7P78/369x7P+eee+71
GJ72of3PjVPL3hGY39ZX2oLxP1MY2S6F4XihmYNqLGD2cVVr3D8fXi7CCZZq
YwhCCvjnAiMfON7jYRg6mX1EZU0I1n/vyhqIpj1pYz+KQ7zk00k9pC93trZb
GvyjOtwbF/7m/F0nD1bgvRuK1zsKSbdVYL6v0lQ4ds6XSM3RgPj5C9+9cNX+
8qZEEsS33nXwQ9s11bYG6UM85VdaKAqmwyb2JhDvvOMSjFqGjE6SLCH+rjXH
DgnffdUlZQeeX8tyxEmxTjvYnWH81I5f+7Hb4nmxsGRw1Z5P+3BNI1+gWxqY
h1Y+DDPn3CoxPA7zE7s+BOEQH9lZhdPgja4P6qhdvnoX3zmifmXywUj8r1YE
zSWwXYr1AXTkVVPVYj64NL/QB40UmK+MXgcvfC4TwGohfertxfC9uyp5fjhX
2/1wdSnEhSOXD+J5hsmGwnKIz90f2o/NR/ZvnqiGeC1/iSG+XbqoF1ML8Qun
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6863094024844627`*^9, 3.686309597770612*^9, 
  3.686310551229788*^9, 3.689327568161866*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{0, Automatic}, {28, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 112, 1, 35, "Subsubsection"],
Cell[695, 25, 1295, 27, 423, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2027, 57, 211, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[2263, 64, 179, 3, 44, "Subsection"],
Cell[2445, 69, 7985, 196, 820, "Input"],
Cell[10433, 267, 1669, 45, 153, "Input"],
Cell[12105, 314, 2869, 77, 201, "Input"],
Cell[14977, 393, 777, 22, 58, "Input"],
Cell[15757, 417, 1033, 28, 82, "Input"],
Cell[16793, 447, 897, 23, 59, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17727, 475, 305, 4, 37, "Subsection"],
Cell[CellGroupData[{
Cell[18057, 483, 156, 2, 35, "Subsubsection"],
Cell[18216, 487, 569, 10, 68, "Text"],
Cell[18788, 499, 347, 10, 51, "Input"],
Cell[19138, 511, 216, 4, 30, "Text"],
Cell[19357, 517, 1534, 46, 207, "Input"],
Cell[20894, 565, 263, 5, 30, "Text"],
Cell[21160, 572, 1889, 48, 128, "Input"],
Cell[23052, 622, 138, 2, 30, "Text"],
Cell[23193, 626, 8793, 222, 392, "Input"],
Cell[31989, 850, 417, 12, 31, "Input"],
Cell[32409, 864, 392, 7, 49, "Text"],
Cell[32804, 873, 1078, 27, 62, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[33919, 905, 196, 3, 29, "Subsubsection"],
Cell[34118, 910, 463, 9, 68, "Text"],
Cell[34584, 921, 115, 2, 31, "Input"],
Cell[34702, 925, 490, 13, 31, "Input"],
Cell[CellGroupData[{
Cell[35217, 942, 873, 28, 86, "Input"],
Cell[36093, 972, 549, 7, 70, "Output"],
Cell[36645, 981, 548, 7, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37230, 993, 834, 26, 86, "Input"],
Cell[38067, 1021, 521, 7, 70, "Output"],
Cell[38591, 1030, 521, 7, 70, "Output"]
}, Open  ]],
Cell[39127, 1040, 181, 3, 31, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[39345, 1048, 209, 3, 29, "Subsubsection"],
Cell[39557, 1053, 271, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[39853, 1061, 174, 3, 31, "Input"],
Cell[40030, 1066, 20946, 578, 70, "Output"]
}, Open  ]],
Cell[60991, 1647, 179, 4, 30, "Text"],
Cell[61173, 1653, 796, 24, 33, "Input"],
Cell[61972, 1679, 122, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[62119, 1684, 1294, 35, 31, "Input"],
Cell[63416, 1721, 14280, 391, 70, "Output"]
}, Open  ]],
Cell[77711, 2115, 123, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[77859, 2120, 236, 6, 31, "Input"],
Cell[78098, 2128, 4710, 131, 70, "Output"]
}, Open  ]],
Cell[82823, 2262, 173, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[83021, 2270, 754, 21, 52, "Input"],
Cell[83778, 2293, 1378, 32, 70, "Output"]
}, Open  ]],
Cell[85171, 2328, 189, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[85385, 2336, 659, 17, 68, "Input"],
Cell[86047, 2355, 17806, 485, 70, "Output"]
}, Open  ]],
Cell[103868, 2843, 221, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[104114, 2851, 252, 5, 31, "Input"],
Cell[104369, 2858, 3634, 97, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108040, 2960, 1057, 26, 52, "Input"],
Cell[109100, 2988, 1102, 16, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[110263, 3011, 1631, 33, 38, "Subsection"],
Cell[111897, 3046, 244, 5, 49, "Text"],
Cell[112144, 3053, 884, 22, 31, "Input"],
Cell[113031, 3077, 341, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[113397, 3087, 252, 3, 39, "Subsubsection"],
Cell[113652, 3092, 246, 5, 31, "Input"],
Cell[113901, 3099, 332, 6, 49, "Text"],
Cell[114236, 3107, 2259, 64, 128, "Input"],
Cell[116498, 3173, 315, 9, 44, "Input"],
Cell[116816, 3184, 221, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[117062, 3192, 233, 6, 31, "Input"],
Cell[117298, 3200, 7305, 185, 70, "Output"]
}, Open  ]],
Cell[124618, 3388, 310, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[124953, 3397, 799, 18, 31, "Input"],
Cell[125755, 3417, 3092, 78, 70, "Output"]
}, Open  ]],
Cell[128862, 3498, 1385, 37, 81, "Input"],
Cell[CellGroupData[{
Cell[130272, 3539, 1055, 26, 33, "Input"],
Cell[131330, 3567, 3492, 67, 70, "Output"]
}, Open  ]],
Cell[134837, 3637, 1710, 43, 76, "Input"],
Cell[136550, 3682, 2235, 73, 112, "Input"],
Cell[CellGroupData[{
Cell[138810, 3759, 1893, 49, 137, "Input"],
Cell[140706, 3810, 1693, 33, 70, "Output"]
}, Open  ]],
Cell[142414, 3846, 2642, 88, 112, "Input"],
Cell[145059, 3936, 1419, 41, 72, "Input"],
Cell[CellGroupData[{
Cell[146503, 3981, 1823, 55, 112, "Input"],
Cell[148329, 4038, 1068, 18, 70, "Message"],
Cell[149400, 4058, 771, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150208, 4075, 1065, 31, 74, "Input"],
Cell[151276, 4108, 1873, 38, 70, "Output"]
}, Open  ]],
Cell[153164, 4149, 3105, 104, 112, "Input"],
Cell[156272, 4255, 1401, 41, 92, "Input"],
Cell[CellGroupData[{
Cell[157698, 4300, 595, 15, 33, "Input"],
Cell[158296, 4317, 1844, 38, 70, "Output"]
}, Open  ]],
Cell[160155, 4358, 289, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[160469, 4369, 2265, 76, 128, "Input"],
Cell[162737, 4447, 7032, 157, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[169818, 4610, 200, 3, 33, "Subsubsection"],
Cell[170021, 4615, 122, 1, 30, "Text"],
Cell[170146, 4618, 1654, 49, 72, "Input"],
Cell[171803, 4669, 129, 4, 46, "Input"],
Cell[171935, 4675, 130, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[172090, 4680, 2588, 80, 152, "Input"],
Cell[174681, 4762, 744, 11, 31, "Output"],
Cell[175428, 4775, 746, 11, 31, "Output"],
Cell[176177, 4788, 746, 11, 52, "Output"],
Cell[176926, 4801, 743, 11, 31, "Output"],
Cell[177672, 4814, 744, 11, 31, "Output"],
Cell[178419, 4827, 745, 11, 31, "Output"],
Cell[179167, 4840, 745, 11, 52, "Output"]
}, Open  ]],
Cell[179927, 4854, 133, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[180085, 4859, 15615, 403, 369, "Input"],
Cell[195703, 5264, 739, 12, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196479, 5281, 1273, 35, 72, "Input"],
Cell[197755, 5318, 4850, 95, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202642, 5418, 1246, 32, 72, "Input"],
Cell[203891, 5452, 5053, 98, 278, "Output"]
}, Open  ]],
Cell[208959, 5553, 177, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[209161, 5561, 868, 23, 73, "Input"],
Cell[210032, 5586, 406, 6, 31, "Output"]
}, Open  ]],
Cell[210453, 5595, 151, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[210629, 5602, 1834, 53, 154, "Input"],
Cell[212466, 5657, 899, 14, 47, "Output"],
Cell[213368, 5673, 915, 14, 47, "Output"],
Cell[214286, 5689, 917, 14, 47, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[215264, 5710, 1734, 36, 52, "Subsection"],
Cell[217001, 5748, 244, 5, 50, "Text"],
Cell[217248, 5755, 731, 20, 44, "Input"],
Cell[217982, 5777, 288, 5, 35, "Input"],
Cell[CellGroupData[{
Cell[218295, 5786, 252, 3, 35, "Subsubsection"],
Cell[218550, 5791, 246, 5, 31, "Input"],
Cell[218799, 5798, 332, 6, 49, "Text"],
Cell[219134, 5806, 2259, 64, 128, "Input"],
Cell[221396, 5872, 315, 9, 44, "Input"],
Cell[221714, 5883, 221, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[221960, 5891, 233, 6, 31, "Input"],
Cell[222196, 5899, 7054, 181, 239, "Output"]
}, Open  ]],
Cell[229265, 6083, 285, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[229575, 6092, 799, 18, 31, "Input"],
Cell[230377, 6112, 2869, 75, 112, "Output"]
}, Open  ]],
Cell[233261, 6190, 1385, 37, 81, "Input"],
Cell[CellGroupData[{
Cell[234671, 6231, 982, 25, 33, "Input"],
Cell[235656, 6258, 3228, 63, 217, "Output"]
}, Open  ]],
Cell[238899, 6324, 1638, 42, 76, "Input"],
Cell[240540, 6368, 2180, 72, 112, "Input"],
Cell[CellGroupData[{
Cell[242745, 6444, 1893, 49, 137, "Input"],
Cell[244641, 6495, 1252, 27, 92, "Output"]
}, Open  ]],
Cell[245908, 6525, 2642, 88, 112, "Input"],
Cell[248553, 6615, 1419, 41, 72, "Input"],
Cell[CellGroupData[{
Cell[249997, 6660, 1823, 55, 112, "Input"],
Cell[251823, 6717, 1001, 17, 39, "Message"],
Cell[252827, 6736, 700, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253564, 6752, 1065, 31, 74, "Input"],
Cell[254632, 6785, 1444, 33, 92, "Output"]
}, Open  ]],
Cell[256091, 6821, 3105, 104, 112, "Input"],
Cell[259199, 6927, 1401, 41, 92, "Input"],
Cell[CellGroupData[{
Cell[260625, 6972, 423, 11, 33, "Input"],
Cell[261051, 6985, 1386, 33, 92, "Output"]
}, Open  ]],
Cell[262452, 7021, 289, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[262766, 7032, 2265, 76, 128, "Input"],
Cell[265034, 7110, 5547, 139, 252, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[270630, 7255, 252, 3, 29, "Subsubsection"],
Cell[270885, 7260, 122, 1, 30, "Text"],
Cell[271010, 7263, 1654, 49, 72, "Input"],
Cell[272667, 7314, 129, 4, 46, "Input"],
Cell[272799, 7320, 130, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[272954, 7325, 2588, 80, 152, "Input"],
Cell[275545, 7407, 630, 9, 31, "Output"],
Cell[276178, 7418, 627, 9, 31, "Output"],
Cell[276808, 7429, 629, 9, 31, "Output"],
Cell[277440, 7440, 629, 9, 31, "Output"],
Cell[278072, 7451, 645, 10, 31, "Output"],
Cell[278720, 7463, 647, 10, 31, "Output"],
Cell[279370, 7475, 626, 9, 31, "Output"]
}, Open  ]],
Cell[280011, 7487, 133, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[280169, 7492, 15821, 405, 397, "Input"],
Cell[295993, 7899, 596, 10, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296626, 7914, 1380, 37, 72, "Input"],
Cell[298009, 7953, 6906, 128, 280, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304952, 8086, 1296, 33, 72, "Input"],
Cell[306251, 8121, 9565, 172, 277, "Output"]
}, Open  ]],
Cell[315831, 8296, 98, 1, 30, "Text"],
Cell[315932, 8299, 4666, 123, 225, "Input"],
Cell[CellGroupData[{
Cell[320623, 8426, 977, 25, 72, "Input"],
Cell[321603, 8453, 7882, 143, 261, "Output"]
}, Open  ]],
Cell[329500, 8599, 177, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[329702, 8607, 870, 23, 73, "Input"],
Cell[330575, 8632, 433, 6, 31, "Output"]
}, Open  ]],
Cell[331023, 8641, 151, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[331199, 8648, 1835, 53, 154, "Input"],
Cell[333037, 8703, 909, 14, 47, "Output"],
Cell[333949, 8719, 925, 14, 47, "Output"],
Cell[334877, 8735, 925, 14, 47, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[335851, 8755, 255, 3, 29, "Subsubsection"],
Cell[336109, 8760, 104, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[336238, 8765, 519, 14, 52, "Input"],
Cell[336760, 8781, 61758, 1025, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398555, 9811, 519, 14, 52, "Input"],
Cell[399077, 9827, 61760, 1025, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460874, 10857, 568, 15, 52, "Input"],
Cell[461445, 10874, 66023, 1096, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527505, 11975, 568, 15, 52, "Input"],
Cell[528076, 11992, 64589, 1072, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592702, 13069, 570, 16, 52, "Input"],
Cell[593275, 13087, 64990, 1078, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658302, 14170, 493, 14, 52, "Input"],
Cell[658798, 14186, 64491, 1069, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723326, 15260, 4113, 110, 211, "Input"],
Cell[727442, 15372, 52156, 869, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779635, 16246, 2771, 74, 120, "Input"],
Cell[782409, 16322, 53290, 887, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835736, 17214, 7148, 194, 216, "Input"],
Cell[842887, 17410, 53240, 886, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896164, 18301, 1125, 32, 55, "Input"],
Cell[897292, 18335, 50554, 842, 211, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

